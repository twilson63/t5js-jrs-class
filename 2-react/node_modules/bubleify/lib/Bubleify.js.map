{"version":3,"sources":["../src/Bubleify.js"],"names":[],"mappings":";;;;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;;;;;;;IAEM,Q;;;AACJ,oBAAY,QAAZ,EAAsB,OAAtB,EAA+B;AAAA;;AAAA;;AAE7B,UAAK,KAAL,GAAa,EAAb;AACA,UAAK,SAAL,GAAiB,QAAjB;AACA,UAAK,QAAL,GAAgB,4BAAO,EAAE,WAAW,IAAb,EAAP,EAA4B,OAA5B,CAAhB;AAJ6B;AAK9B;;;;+BAiBU,G,EAAK,G,EAAK,E,EAAI;AACvB,WAAK,KAAL,IAAc,GAAd;AACA;AACD;;;2BAEM,E,EAAI;AACT,UAAI;AACF,YAAM,SAAS,sBAAU,KAAK,KAAf,EAAsB,KAAK,aAA3B,CAAf;AADE,YAEI,IAFJ,GAEa,MAFb,CAEI,IAFJ;;;AAIF,YAAI,KAAK,QAAL,CAAc,SAAlB,EAA6B;;AAE3B,sDAAsC,OAAO,GAAP,CAAW,KAAX,EAAtC;AACD;;AAED,aAAK,IAAL,CAAU,UAAV,EAAsB,MAAtB,EAA8B,KAAK,SAAnC;AACA,aAAK,IAAL,CAAU,IAAV;AACD,OAXD,CAWE,OAAO,GAAP,EAAY;AACZ,aAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB;AACA;AACD;AACD;AACD;;;wBArCmB;AAClB,UAAM,WAAW,EAAE,QAAQ,KAAK,SAAf,EAAjB;AACA,UAAM,UAAU,4BAAO,QAAP,EAAiB,KAAK,QAAtB,CAAhB;;;;AAIA,cAAQ,UAAR,GAAqB,4BAAO,EAAE,SAAS,KAAX,EAAP,EAA2B,KAAK,QAAL,CAAc,UAAzC,CAArB;AACA,cAAQ,MAAR,GAAiB,4BAAO,EAAP,EAAW,KAAK,QAAL,CAAc,MAAzB,CAAjB;;;AAGA,aAAO,QAAQ,MAAf;;AAEA,aAAO,OAAP;AACD;;;;;;kBA2BY,UAAC,QAAD,EAAW,OAAX;AAAA,SAAuB,IAAI,QAAJ,CAAa,QAAb,EAAuB,OAAvB,CAAvB;AAAA,C","file":"Bubleify.js","sourcesContent":["import { transform } from 'buble';\nimport assign from 'object-assign';\nimport { Transform } from 'stream';\nimport { EOL } from 'os';\n\nclass Bubleify extends Transform {\n  constructor(filename, options) {\n    super();\n    this._data = '';\n    this._filename = filename;\n    this._options = assign({ sourceMap: true }, options);\n  }\n\n  get _bubleOptions() {\n    const defaults = { source: this._filename };\n    const options = assign(defaults, this._options);\n\n    // copy properties to not modify the existing objects\n    // set default transforms with deactivated modules\n    options.transforms = assign({ modules: false }, this._options.transforms);\n    options.target = assign({}, this._options.target);\n\n    // remove browserify options\n    delete options._flags;\n\n    return options;\n  }\n\n  _transform(buf, enc, cb) {\n    this._data += buf;\n    cb();\n  }\n\n  _flush(cb) {\n    try {\n      const result = transform(this._data, this._bubleOptions);\n      let { code } = result;\n\n      if (this._options.sourceMap) {\n        // append sourcemaps to code\n        code += `${EOL}//# sourceMappingURL=${result.map.toUrl()}`;\n      }\n\n      this.emit('bubleify', result, this._filename);\n      this.push(code);\n    } catch (err) {\n      this.emit('error', err);\n      return;\n    }\n    cb();\n  }\n}\n\nexport default (filename, options) => new Bubleify(filename, options);\n"]}