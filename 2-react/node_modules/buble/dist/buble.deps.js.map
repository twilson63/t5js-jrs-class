{"version":3,"file":"buble.deps.js","sources":["../node_modules/acorn/dist/acorn.js","../node_modules/acorn-jsx/xhtml.js","../node_modules/acorn-jsx/inject.js","../node_modules/acorn-jsx/index.js","../node_modules/acorn-object-spread/inject.js","../node_modules/vlq/src/vlq.js","../node_modules/magic-string/dist/magic-string.es6.js","../src/program/keys.js","../src/program/Node.js","../src/utils/spread.js","../src/program/types/ArrayExpression.js","../src/program/types/ArrowFunctionExpression.js","../src/utils/locate.js","../src/utils/getSnippet.js","../src/utils/CompileError.js","../src/program/types/AssignmentExpression.js","../src/program/types/BinaryExpression.js","../src/program/types/BreakStatement.js","../src/program/types/CallExpression.js","../src/utils/array.js","../src/program/types/ClassBody.js","../src/utils/deindent.js","../src/program/types/ClassDeclaration.js","../src/program/types/ClassExpression.js","../src/program/types/ContinueStatement.js","../src/program/types/ExportDefaultDeclaration.js","../src/program/types/ExportNamedDeclaration.js","../src/program/extractNames.js","../src/program/types/shared/LoopStatement.js","../src/program/types/ForStatement.js","../src/program/types/ForInStatement.js","../src/program/types/ForOfStatement.js","../src/program/types/FunctionDeclaration.js","../src/program/types/FunctionExpression.js","../src/utils/isReference.js","../src/program/types/Identifier.js","../src/program/types/ImportDeclaration.js","../src/program/types/ImportDefaultSpecifier.js","../src/program/types/ImportSpecifier.js","../src/program/types/JSXAttribute.js","../src/program/types/JSXClosingElement.js","../src/program/types/JSXElement.js","../src/program/types/JSXExpressionContainer.js","../src/program/types/JSXOpeningElement.js","../src/program/types/JSXSpreadAttribute.js","../src/program/types/Literal.js","../src/utils/reserved.js","../src/program/types/MemberExpression.js","../src/program/types/ObjectExpression.js","../src/program/types/Property.js","../src/program/types/ReturnStatement.js","../src/program/types/SpreadProperty.js","../src/program/types/Super.js","../src/program/types/TaggedTemplateExpression.js","../src/program/types/TemplateElement.js","../src/program/types/TemplateLiteral.js","../src/program/types/ThisExpression.js","../src/program/types/UpdateExpression.js","../src/utils/destructure.js","../src/program/types/VariableDeclaration.js","../src/program/types/VariableDeclarator.js","../src/program/types/index.js","../src/program/wrap.js","../src/program/Scope.js","../src/program/BlockStatement.js","../src/program/Program.js","../src/support.js","../package.json","../src/index.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.acorn = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\"use strict\";\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar pp = _state.Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp.checkPropClash = function (prop, propHash) {\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) return;\n  var key = prop.key;var name = undefined;\n  switch (key.type) {\n    case \"Identifier\":\n      name = key.name;break;\n    case \"Literal\":\n      name = String(key.value);break;\n    default:\n      return;\n  }\n  var kind = prop.kind;\n\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n      propHash.proto = true;\n    }\n    return;\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var isGetSet = kind !== \"init\";\n    if ((this.strict || isGetSet) && other[kind] || !(isGetSet ^ other.init)) this.raiseRecoverable(key.start, \"Redefinition of property\");\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp.parseExpression = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === _tokentype.types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(_tokentype.types.comma)) node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors));\n    return this.finishNode(node, \"SequenceExpression\");\n  }\n  return expr;\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) return this.parseYield();\n\n  var validateDestructuring = false;\n  if (!refDestructuringErrors) {\n    refDestructuringErrors = { shorthandAssign: 0, trailingComma: 0 };\n    validateDestructuring = true;\n  }\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  if (this.type == _tokentype.types.parenL || this.type == _tokentype.types.name) this.potentialArrowAt = this.start;\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc);\n  if (this.type.isAssign) {\n    if (validateDestructuring) this.checkPatternErrors(refDestructuringErrors, true);\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === _tokentype.types.eq ? this.toAssignable(left) : left;\n    refDestructuringErrors.shorthandAssign = 0; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\");\n  } else {\n    if (validateDestructuring) this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  return left;\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp.parseMaybeConditional = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr;\n  if (this.eat(_tokentype.types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(_tokentype.types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  return expr;\n};\n\n// Start the precedence parser.\n\npp.parseExprOps = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr;\n  return this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== _tokentype.types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === _tokentype.types.logicalOR || this.type === _tokentype.types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start,\n          startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n  }\n  return left;\n};\n\npp.buildBinary = function (startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\");\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp.parseMaybeUnary = function (refDestructuringErrors, sawUnary) {\n  var startPos = this.start,\n      startLoc = this.startLoc,\n      expr = undefined;\n  if (this.type.prefix) {\n    var node = this.startNode(),\n        update = this.type === _tokentype.types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) this.checkLVal(node.argument);else if (this.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\");else sawUnary = true;\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) return expr;\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr);\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(_tokentype.types.starstar)) return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false);else return expr;\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp.parseExprSubscripts = function (refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) return expr;\n  return this.parseSubscripts(expr, startPos, startLoc);\n};\n\npp.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n  for (;;) {\n    if (this.eat(_tokentype.types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = this.parseIdent(true);\n      node.computed = false;\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (this.eat(_tokentype.types.bracketL)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = this.parseExpression();\n      node.computed = true;\n      this.expect(_tokentype.types.bracketR);\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(_tokentype.types.parenL)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseExprList(_tokentype.types.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (this.type === _tokentype.types.backQuote) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.tag = base;\n      node.quasi = this.parseTemplate();\n      base = this.finishNode(node, \"TaggedTemplateExpression\");\n    } else {\n      return base;\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp.parseExprAtom = function (refDestructuringErrors) {\n  var node = undefined,\n      canBeArrow = this.potentialArrowAt == this.start;\n  switch (this.type) {\n    case _tokentype.types._super:\n      if (!this.inFunction) this.raise(this.start, \"'super' outside of function or class\");\n\n    case _tokentype.types._this:\n      var type = this.type === _tokentype.types._this ? \"ThisExpression\" : \"Super\";\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, type);\n\n    case _tokentype.types.name:\n      var startPos = this.start,\n          startLoc = this.startLoc;\n      var id = this.parseIdent(this.type !== _tokentype.types.name);\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(_tokentype.types.arrow)) return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id]);\n      return id;\n\n    case _tokentype.types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = { pattern: value.pattern, flags: value.flags };\n      return node;\n\n    case _tokentype.types.num:case _tokentype.types.string:\n      return this.parseLiteral(this.value);\n\n    case _tokentype.types._null:case _tokentype.types._true:case _tokentype.types._false:\n      node = this.startNode();\n      node.value = this.type === _tokentype.types._null ? null : this.type === _tokentype.types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\");\n\n    case _tokentype.types.parenL:\n      return this.parseParenAndDistinguishExpression(canBeArrow);\n\n    case _tokentype.types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(_tokentype.types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\");\n\n    case _tokentype.types.braceL:\n      return this.parseObj(false, refDestructuringErrors);\n\n    case _tokentype.types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, false);\n\n    case _tokentype.types._class:\n      return this.parseClass(this.startNode(), false);\n\n    case _tokentype.types._new:\n      return this.parseNew();\n\n    case _tokentype.types.backQuote:\n      return this.parseTemplate();\n\n    default:\n      this.unexpected();\n  }\n};\n\npp.parseLiteral = function (value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\");\n};\n\npp.parseParenExpression = function () {\n  this.expect(_tokentype.types.parenL);\n  var val = this.parseExpression();\n  this.expect(_tokentype.types.parenR);\n  return val;\n};\n\npp.parseParenAndDistinguishExpression = function (canBeArrow) {\n  var startPos = this.start,\n      startLoc = this.startLoc,\n      val = undefined;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start,\n        innerStartLoc = this.startLoc;\n    var exprList = [],\n        first = true;\n    var refDestructuringErrors = { shorthandAssign: 0, trailingComma: 0 },\n        spreadStart = undefined,\n        innerParenStart = undefined;\n    while (this.type !== _tokentype.types.parenR) {\n      first ? first = false : this.expect(_tokentype.types.comma);\n      if (this.type === _tokentype.types.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRest()));\n        break;\n      } else {\n        if (this.type === _tokentype.types.parenL && !innerParenStart) {\n          innerParenStart = this.start;\n        }\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start,\n        innerEndLoc = this.startLoc;\n    this.expect(_tokentype.types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(_tokentype.types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, true);\n      if (innerParenStart) this.unexpected(innerParenStart);\n      return this.parseParenArrowList(startPos, startLoc, exprList);\n    }\n\n    if (!exprList.length) this.unexpected(this.lastTokStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\");\n  } else {\n    return val;\n  }\n};\n\npp.parseParenItem = function (item) {\n  return item;\n};\n\npp.parseParenArrowList = function (startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList);\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp.parseNew = function () {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(_tokentype.types.dot)) {\n    node.meta = meta;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\") this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\");\n    if (!this.inFunction) this.raiseRecoverable(node.start, \"new.target can only be used in functions\");\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(_tokentype.types.parenL)) node.arguments = this.parseExprList(_tokentype.types.parenR, false);else node.arguments = empty;\n  return this.finishNode(node, \"NewExpression\");\n};\n\n// Parse template expression.\n\npp.parseTemplateElement = function () {\n  var elem = this.startNode();\n  elem.value = {\n    raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, '\\n'),\n    cooked: this.value\n  };\n  this.next();\n  elem.tail = this.type === _tokentype.types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\");\n};\n\npp.parseTemplate = function () {\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement();\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this.expect(_tokentype.types.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(_tokentype.types.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement());\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\");\n};\n\n// Parse an object literal or binding pattern.\n\npp.parseObj = function (isPattern, refDestructuringErrors) {\n  var node = this.startNode(),\n      first = true,\n      propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(_tokentype.types.braceR)) {\n    if (!first) {\n      this.expect(_tokentype.types.comma);\n      if (this.afterTrailingComma(_tokentype.types.braceR)) break;\n    } else first = false;\n\n    var prop = this.startNode(),\n        isGenerator = undefined,\n        startPos = undefined,\n        startLoc = undefined;\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern) isGenerator = this.eat(_tokentype.types.star);\n    }\n    this.parsePropertyName(prop);\n    this.parsePropertyValue(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors);\n    this.checkPropClash(prop, propHash);\n    node.properties.push(this.finishNode(prop, \"Property\"));\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n};\n\npp.parsePropertyValue = function (prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors) {\n  if (this.eat(_tokentype.types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === _tokentype.types.parenL) {\n    if (isPattern) this.unexpected();\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator);\n  } else if (this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && this.type != _tokentype.types.comma && this.type != _tokentype.types.braceR) {\n    if (isGenerator || isPattern) this.unexpected();\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\") this.raiseRecoverable(start, \"getter should have no params\");else this.raiseRecoverable(start, \"setter should have exactly one param\");\n    }\n    if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\") this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\");\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    prop.kind = \"init\";\n    if (isPattern) {\n      if (this.keywords.test(prop.key.name) || (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name) || this.inGenerator && prop.key.name == \"yield\") this.raiseRecoverable(prop.key.start, \"Binding \" + prop.key.name);\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === _tokentype.types.eq && refDestructuringErrors) {\n      if (!refDestructuringErrors.shorthandAssign) refDestructuringErrors.shorthandAssign = this.start;\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else this.unexpected();\n};\n\npp.parsePropertyName = function (prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(_tokentype.types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(_tokentype.types.bracketR);\n      return prop.key;\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === _tokentype.types.num || this.type === _tokentype.types.string ? this.parseExprAtom() : this.parseIdent(true);\n};\n\n// Initialize empty function node.\n\npp.initFunction = function (node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n};\n\n// Parse object or class method.\n\npp.parseMethod = function (isGenerator) {\n  var node = this.startNode(),\n      oldInGen = this.inGenerator;\n  this.inGenerator = isGenerator;\n  this.initFunction(node);\n  this.expect(_tokentype.types.parenL);\n  node.params = this.parseBindingList(_tokentype.types.parenR, false, false);\n  if (this.options.ecmaVersion >= 6) node.generator = isGenerator;\n  this.parseFunctionBody(node, false);\n  this.inGenerator = oldInGen;\n  return this.finishNode(node, \"FunctionExpression\");\n};\n\n// Parse arrow function expression with given parameters.\n\npp.parseArrowExpression = function (node, params) {\n  var oldInGen = this.inGenerator;\n  this.inGenerator = false;\n  this.initFunction(node);\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n  this.inGenerator = oldInGen;\n  return this.finishNode(node, \"ArrowFunctionExpression\");\n};\n\n// Parse function body and check parameters.\n\npp.parseFunctionBody = function (node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== _tokentype.types.braceL;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n  } else {\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldInFunc = this.inFunction,\n        oldLabels = this.labels;\n    this.inFunction = true;this.labels = [];\n    node.body = this.parseBlock(true);\n    node.expression = false;\n    this.inFunction = oldInFunc;this.labels = oldLabels;\n  }\n\n  // If this is a strict mode function, verify that argument names\n  // are not repeated, and it does not try to bind the words `eval`\n  // or `arguments`.\n  if (this.strict || !isExpression && node.body.body.length && this.isUseStrict(node.body.body[0])) {\n    var oldStrict = this.strict;\n    this.strict = true;\n    if (node.id) this.checkLVal(node.id, true);\n    this.checkParams(node);\n    this.strict = oldStrict;\n  } else if (isArrowFunction) {\n    this.checkParams(node);\n  }\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp.checkParams = function (node) {\n  var nameHash = {};\n  for (var i = 0; i < node.params.length; i++) {\n    this.checkLVal(node.params[i], true, nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [],\n      first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(_tokentype.types.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) break;\n    } else first = false;\n\n    var elt = undefined;\n    if (allowEmpty && this.type === _tokentype.types.comma) elt = null;else if (this.type === _tokentype.types.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (this.type === _tokentype.types.comma && refDestructuringErrors && !refDestructuringErrors.trailingComma) {\n        refDestructuringErrors.trailingComma = this.lastTokStart;\n      }\n    } else elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    elts.push(elt);\n  }\n  return elts;\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp.parseIdent = function (liberal) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved == \"never\") liberal = false;\n  if (this.type === _tokentype.types.name) {\n    if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) && (this.options.ecmaVersion >= 6 || this.input.slice(this.start, this.end).indexOf(\"\\\\\") == -1)) this.raiseRecoverable(this.start, \"The keyword '\" + this.value + \"' is reserved\");\n    if (!liberal && this.inGenerator && this.value === \"yield\") this.raiseRecoverable(this.start, \"Can not use 'yield' as identifier inside a generator\");\n    node.name = this.value;\n  } else if (liberal && this.type.keyword) {\n    node.name = this.type.keyword;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  return this.finishNode(node, \"Identifier\");\n};\n\n// Parses yield expression inside generator.\n\npp.parseYield = function () {\n  var node = this.startNode();\n  this.next();\n  if (this.type == _tokentype.types.semi || this.canInsertSemicolon() || this.type != _tokentype.types.star && !this.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(_tokentype.types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\");\n};\n\n},{\"./state\":10,\"./tokentype\":14}],2:[function(_dereq_,module,exports){\n// Reserved word lists for various dialects of the language\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.isIdentifierStart = isIdentifierStart;\nexports.isIdentifierChar = isIdentifierChar;\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  7: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\nexports.reservedWords = reservedWords;\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nexports.keywords = keywords;\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢴऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞭꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\";\nvar nonASCIIidentifierChars = \"‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣣ-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఃా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ູົຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷼-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-꣄꣐-꣙꣠-꣱꤀-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 99, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 287, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0, 449, 56, 1288, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 16481, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 1340, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541];\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 168, 11, 6, 9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 316, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 423, 9, 20855, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 3617, 6, 792618, 239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) return code === 36;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  if (astral === false) return false;\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  if (astral === false) return false;\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\n},{}],3:[function(_dereq_,module,exports){\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/ternjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/ternjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.parse = parse;\nexports.parseExpressionAt = parseExpressionAt;\nexports.tokenizer = tokenizer;\n\nvar _state = _dereq_(\"./state\");\n\n_dereq_(\"./parseutil\");\n\n_dereq_(\"./statement\");\n\n_dereq_(\"./lval\");\n\n_dereq_(\"./expression\");\n\n_dereq_(\"./location\");\n\nexports.Parser = _state.Parser;\nexports.plugins = _state.plugins;\n\nvar _options = _dereq_(\"./options\");\n\nexports.defaultOptions = _options.defaultOptions;\n\nvar _locutil = _dereq_(\"./locutil\");\n\nexports.Position = _locutil.Position;\nexports.SourceLocation = _locutil.SourceLocation;\nexports.getLineInfo = _locutil.getLineInfo;\n\nvar _node = _dereq_(\"./node\");\n\nexports.Node = _node.Node;\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nexports.TokenType = _tokentype.TokenType;\nexports.tokTypes = _tokentype.types;\n\nvar _tokencontext = _dereq_(\"./tokencontext\");\n\nexports.TokContext = _tokencontext.TokContext;\nexports.tokContexts = _tokencontext.types;\n\nvar _identifier = _dereq_(\"./identifier\");\n\nexports.isIdentifierChar = _identifier.isIdentifierChar;\nexports.isIdentifierStart = _identifier.isIdentifierStart;\n\nvar _tokenize = _dereq_(\"./tokenize\");\n\nexports.Token = _tokenize.Token;\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nexports.isNewLine = _whitespace.isNewLine;\nexports.lineBreak = _whitespace.lineBreak;\nexports.lineBreakG = _whitespace.lineBreakG;\nvar version = \"3.1.0\";\n\nexports.version = version;\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new _state.Parser(options, input).parse();\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new _state.Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression();\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new _state.Parser(options, input);\n}\n\n},{\"./expression\":1,\"./identifier\":2,\"./location\":4,\"./locutil\":5,\"./lval\":6,\"./node\":7,\"./options\":8,\"./parseutil\":9,\"./state\":10,\"./statement\":11,\"./tokencontext\":12,\"./tokenize\":13,\"./tokentype\":14,\"./whitespace\":16}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _state = _dereq_(\"./state\");\n\nvar _locutil = _dereq_(\"./locutil\");\n\nvar pp = _state.Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp.raise = function (pos, message) {\n  var loc = _locutil.getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos;err.loc = loc;err.raisedAt = this.pos;\n  throw err;\n};\n\npp.raiseRecoverable = pp.raise;\n\npp.curPosition = function () {\n  if (this.options.locations) {\n    return new _locutil.Position(this.curLine, this.pos - this.lineStart);\n  }\n};\n\n},{\"./locutil\":5,\"./state\":10}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getLineInfo = getLineInfo;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = (function () {\n  function Position(line, col) {\n    _classCallCheck(this, Position);\n\n    this.line = line;\n    this.column = col;\n  }\n\n  Position.prototype.offset = function offset(n) {\n    return new Position(this.line, this.column + n);\n  };\n\n  return Position;\n})();\n\nexports.Position = Position;\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  _classCallCheck(this, SourceLocation);\n\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) this.source = p.sourceFile;\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\n;\n\nexports.SourceLocation = SourceLocation;\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    _whitespace.lineBreakG.lastIndex = cur;\n    var match = _whitespace.lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur);\n    }\n  }\n}\n\n},{\"./whitespace\":16}],6:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar _util = _dereq_(\"./util\");\n\nvar pp = _state.Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp.toAssignable = function (node, isBinding) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (var i = 0; i < node.properties.length; i++) {\n          var prop = node.properties[i];\n          if (prop.kind !== \"init\") this.raise(prop.key.start, \"Object pattern can't contain getter or setter\");\n          this.toAssignable(prop.value, isBinding);\n        }\n        break;\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, isBinding);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator === \"=\") {\n          node.type = \"AssignmentPattern\";\n          delete node.operator;\n          // falls through to AssignmentPattern\n        } else {\n            this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n            break;\n          }\n\n      case \"AssignmentPattern\":\n        if (node.right.type === \"YieldExpression\") this.raise(node.right.start, \"Yield expression cannot be a default value\");\n        break;\n\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isBinding);\n        break;\n\n      case \"MemberExpression\":\n        if (!isBinding) break;\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n    }\n  }\n  return node;\n};\n\n// Convert list of expression atoms to binding list.\n\npp.toAssignableList = function (exprList, isBinding) {\n  var end = exprList.length;\n  if (end) {\n    var last = exprList[end - 1];\n    if (last && last.type == \"RestElement\") {\n      --end;\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\";\n      var arg = last.argument;\n      this.toAssignable(arg, isBinding);\n      if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\") this.unexpected(arg.start);\n      --end;\n    }\n\n    if (isBinding && last.type === \"RestElement\" && last.argument.type !== \"Identifier\") this.unexpected(last.argument.start);\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) this.toAssignable(elt, isBinding);\n  }\n  return exprList;\n};\n\n// Parses spread element.\n\npp.parseSpread = function (refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\");\n};\n\npp.parseRest = function (allowNonIdent) {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (allowNonIdent) node.argument = this.type === _tokentype.types.name ? this.parseIdent() : this.unexpected();else node.argument = this.type === _tokentype.types.name || this.type === _tokentype.types.bracketL ? this.parseBindingAtom() : this.unexpected();\n\n  return this.finishNode(node, \"RestElement\");\n};\n\n// Parses lvalue (assignable) atom.\n\npp.parseBindingAtom = function () {\n  if (this.options.ecmaVersion < 6) return this.parseIdent();\n  switch (this.type) {\n    case _tokentype.types.name:\n      return this.parseIdent();\n\n    case _tokentype.types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(_tokentype.types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\");\n\n    case _tokentype.types.braceL:\n      return this.parseObj(true);\n\n    default:\n      this.unexpected();\n  }\n};\n\npp.parseBindingList = function (close, allowEmpty, allowTrailingComma, allowNonIdent) {\n  var elts = [],\n      first = true;\n  while (!this.eat(close)) {\n    if (first) first = false;else this.expect(_tokentype.types.comma);\n    if (allowEmpty && this.type === _tokentype.types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break;\n    } else if (this.type === _tokentype.types.ellipsis) {\n      var rest = this.parseRest(allowNonIdent);\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === _tokentype.types.comma) this.raise(this.start, \"Comma is not permitted after the rest element\");\n      this.expect(close);\n      break;\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts;\n};\n\npp.parseBindingListItem = function (param) {\n  return param;\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp.parseMaybeDefault = function (startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(_tokentype.types.eq)) return left;\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\");\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n\npp.checkLVal = function (expr, isBinding, checkClashes) {\n  switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name)) this.raiseRecoverable(expr.start, (isBinding ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n      if (checkClashes) {\n        if (_util.has(checkClashes, expr.name)) this.raiseRecoverable(expr.start, \"Argument name clash\");\n        checkClashes[expr.name] = true;\n      }\n      break;\n\n    case \"MemberExpression\":\n      if (isBinding) this.raiseRecoverable(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" member expression\");\n      break;\n\n    case \"ObjectPattern\":\n      for (var i = 0; i < expr.properties.length; i++) {\n        this.checkLVal(expr.properties[i].value, isBinding, checkClashes);\n      }break;\n\n    case \"ArrayPattern\":\n      for (var i = 0; i < expr.elements.length; i++) {\n        var elem = expr.elements[i];\n        if (elem) this.checkLVal(elem, isBinding, checkClashes);\n      }\n      break;\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, isBinding, checkClashes);\n      break;\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, isBinding, checkClashes);\n      break;\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, isBinding, checkClashes);\n      break;\n\n    default:\n      this.raise(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n},{\"./state\":10,\"./tokentype\":14,\"./util\":15}],7:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _state = _dereq_(\"./state\");\n\nvar _locutil = _dereq_(\"./locutil\");\n\nvar Node = function Node(parser, pos, loc) {\n  _classCallCheck(this, Node);\n\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations) this.loc = new _locutil.SourceLocation(parser, loc);\n  if (parser.options.directSourceFile) this.sourceFile = parser.options.directSourceFile;\n  if (parser.options.ranges) this.range = [pos, 0];\n}\n\n// Start an AST node, attaching a start offset.\n\n;\n\nexports.Node = Node;\nvar pp = _state.Parser.prototype;\n\npp.startNode = function () {\n  return new Node(this, this.start, this.startLoc);\n};\n\npp.startNodeAt = function (pos, loc) {\n  return new Node(this, pos, loc);\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations) node.loc.end = loc;\n  if (this.options.ranges) node.range[1] = pos;\n  return node;\n}\n\npp.finishNode = function (node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);\n};\n\n// Finish node at given position\n\npp.finishNodeAt = function (node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc);\n};\n\n},{\"./locutil\":5,\"./state\":10}],8:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getOptions = getOptions;\n\nvar _util = _dereq_(\"./util\");\n\nvar _locutil = _dereq_(\"./locutil\");\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, or 5, or 6. This influences support for strict\n  // mode, the set of reserved words, support for getters and\n  // setters and other features. The default is 6.\n  ecmaVersion: 6,\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\nexports.defaultOptions = defaultOptions;\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n  for (var opt in defaultOptions) {\n    options[opt] = opts && _util.has(opts, opt) ? opts[opt] : defaultOptions[opt];\n  }if (options.allowReserved == null) options.allowReserved = options.ecmaVersion < 5;\n\n  if (_util.isArray(options.onToken)) {\n    (function () {\n      var tokens = options.onToken;\n      options.onToken = function (token) {\n        return tokens.push(token);\n      };\n    })();\n  }\n  if (_util.isArray(options.onComment)) options.onComment = pushComment(options, options.onComment);\n\n  return options;\n}\n\nfunction pushComment(options, array) {\n  return function (block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? 'Block' : 'Line',\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations) comment.loc = new _locutil.SourceLocation(this, startLoc, endLoc);\n    if (options.ranges) comment.range = [start, end];\n    array.push(comment);\n  };\n}\n\n},{\"./locutil\":5,\"./util\":15}],9:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nvar pp = _state.Parser.prototype;\n\n// ## Parser utilities\n\n// Test whether a statement node is the string literal `\"use strict\"`.\n\npp.isUseStrict = function (stmt) {\n  return this.options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && stmt.expression.raw.slice(1, -1) === \"use strict\";\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function (type) {\n  if (this.type === type) {\n    this.next();\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function (name) {\n  return this.type === _tokentype.types.name && this.value === name;\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function (name) {\n  return this.value === name && this.eat(_tokentype.types.name);\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function (name) {\n  if (!this.eatContextual(name)) this.unexpected();\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function () {\n  return this.type === _tokentype.types.eof || this.type === _tokentype.types.braceR || _whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n};\n\npp.insertSemicolon = function () {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon) this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n    return true;\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function () {\n  if (!this.eat(_tokentype.types.semi) && !this.insertSemicolon()) this.unexpected();\n};\n\npp.afterTrailingComma = function (tokType) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma) this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n    this.next();\n    return true;\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function (type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function (pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\npp.checkPatternErrors = function (refDestructuringErrors, andThrow) {\n  var pos = refDestructuringErrors && refDestructuringErrors.trailingComma;\n  if (!andThrow) return !!pos;\n  if (pos) this.raise(pos, \"Comma is not permitted after the rest element\");\n};\n\npp.checkExpressionErrors = function (refDestructuringErrors, andThrow) {\n  var pos = refDestructuringErrors && refDestructuringErrors.shorthandAssign;\n  if (!andThrow) return !!pos;\n  if (pos) this.raise(pos, \"Shorthand property assignments are valid only in destructuring patterns\");\n};\n\n},{\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],10:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _identifier = _dereq_(\"./identifier\");\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nvar _options = _dereq_(\"./options\");\n\n// Registered plugins\nvar plugins = {};\n\nexports.plugins = plugins;\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(\" + words.replace(/ /g, \"|\") + \")$\");\n}\n\nvar Parser = (function () {\n  function Parser(options, input, startPos) {\n    _classCallCheck(this, Parser);\n\n    this.options = options = _options.getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = keywordRegexp(_identifier.keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n    var reserved = options.allowReserved ? \"\" : _identifier.reservedWords[options.ecmaVersion] + (options.sourceType == \"module\" ? \" await\" : \"\");\n    this.reservedWords = keywordRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + _identifier.reservedWords.strict;\n    this.reservedWordsStrict = keywordRegexp(reservedStrict);\n    this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + _identifier.reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Load plugins\n    this.loadPlugins(options.plugins);\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = Math.max(0, this.input.lastIndexOf(\"\\n\", startPos));\n      this.curLine = this.input.slice(0, this.lineStart).split(_whitespace.lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = _tokentype.types.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.strict = this.inModule = options.sourceType === \"module\";\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n\n    // Flags to track whether we are in a function, a generator.\n    this.inFunction = this.inGenerator = false;\n    // Labels in scope.\n    this.labels = [];\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === '#!') this.skipLineComment(2);\n  }\n\n  // DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\n\n  Parser.prototype.isKeyword = function isKeyword(word) {\n    return this.keywords.test(word);\n  };\n\n  Parser.prototype.isReservedWord = function isReservedWord(word) {\n    return this.reservedWords.test(word);\n  };\n\n  Parser.prototype.extend = function extend(name, f) {\n    this[name] = f(this[name]);\n  };\n\n  Parser.prototype.loadPlugins = function loadPlugins(pluginConfigs) {\n    for (var _name in pluginConfigs) {\n      var plugin = plugins[_name];\n      if (!plugin) throw new Error(\"Plugin '\" + _name + \"' not found\");\n      plugin(this, pluginConfigs[_name]);\n    }\n  };\n\n  Parser.prototype.parse = function parse() {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node);\n  };\n\n  return Parser;\n})();\n\nexports.Parser = Parser;\n\n},{\"./identifier\":2,\"./options\":8,\"./tokentype\":14,\"./whitespace\":16}],11:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nvar _identifier = _dereq_(\"./identifier\");\n\nvar pp = _state.Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp.parseTopLevel = function (node) {\n  var first = true;\n  if (!node.body) node.body = [];\n  while (this.type !== _tokentype.types.eof) {\n    var stmt = this.parseStatement(true, true);\n    node.body.push(stmt);\n    if (first) {\n      if (this.isUseStrict(stmt)) this.setStrict(true);\n      first = false;\n    }\n  }\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\");\n};\n\nvar loopLabel = { kind: \"loop\" },\n    switchLabel = { kind: \"switch\" };\n\npp.isLet = function () {\n  if (this.type !== _tokentype.types.name || this.options.ecmaVersion < 6 || this.value != \"let\") return false;\n  _whitespace.skipWhiteSpace.lastIndex = this.pos;\n  var skip = _whitespace.skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length,\n      nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh == 123) return true; // '{' and '['\n  if (_identifier.isIdentifierStart(nextCh, true)) {\n    for (var pos = next + 1; _identifier.isIdentifierChar(this.input.charCodeAt(pos, true)); ++pos) {}\n    var ident = this.input.slice(next, pos);\n    if (!this.isKeyword(ident)) return true;\n  }\n  return false;\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp.parseStatement = function (declaration, topLevel) {\n  var starttype = this.type,\n      node = this.startNode(),\n      kind = undefined;\n\n  if (this.isLet()) {\n    starttype = _tokentype.types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n    case _tokentype.types._break:case _tokentype.types._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n    case _tokentype.types._debugger:\n      return this.parseDebuggerStatement(node);\n    case _tokentype.types._do:\n      return this.parseDoStatement(node);\n    case _tokentype.types._for:\n      return this.parseForStatement(node);\n    case _tokentype.types._function:\n      if (!declaration && this.options.ecmaVersion >= 6) this.unexpected();\n      return this.parseFunctionStatement(node);\n    case _tokentype.types._class:\n      if (!declaration) this.unexpected();\n      return this.parseClass(node, true);\n    case _tokentype.types._if:\n      return this.parseIfStatement(node);\n    case _tokentype.types._return:\n      return this.parseReturnStatement(node);\n    case _tokentype.types._switch:\n      return this.parseSwitchStatement(node);\n    case _tokentype.types._throw:\n      return this.parseThrowStatement(node);\n    case _tokentype.types._try:\n      return this.parseTryStatement(node);\n    case _tokentype.types._const:case _tokentype.types._var:\n      kind = kind || this.value;\n      if (!declaration && kind != \"var\") this.unexpected();\n      return this.parseVarStatement(node, kind);\n    case _tokentype.types._while:\n      return this.parseWhileStatement(node);\n    case _tokentype.types._with:\n      return this.parseWithStatement(node);\n    case _tokentype.types.braceL:\n      return this.parseBlock();\n    case _tokentype.types.semi:\n      return this.parseEmptyStatement(node);\n    case _tokentype.types._export:\n    case _tokentype.types._import:\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) this.raise(this.start, \"'import' and 'export' may only appear at the top level\");\n        if (!this.inModule) this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n      }\n      return starttype === _tokentype.types._import ? this.parseImport(node) : this.parseExport(node);\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    default:\n      var maybeName = this.value,\n          expr = this.parseExpression();\n      if (starttype === _tokentype.types.name && expr.type === \"Identifier\" && this.eat(_tokentype.types.colon)) return this.parseLabeledStatement(node, maybeName, expr);else return this.parseExpressionStatement(node, expr);\n  }\n};\n\npp.parseBreakContinueStatement = function (node, keyword) {\n  var isBreak = keyword == \"break\";\n  this.next();\n  if (this.eat(_tokentype.types.semi) || this.insertSemicolon()) node.label = null;else if (this.type !== _tokentype.types.name) this.unexpected();else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  for (var i = 0; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n      if (node.label && isBreak) break;\n    }\n  }\n  if (i === this.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword);\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n};\n\npp.parseDebuggerStatement = function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\");\n};\n\npp.parseDoStatement = function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(_tokentype.types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6) this.eat(_tokentype.types.semi);else this.semicolon();\n  return this.finishNode(node, \"DoWhileStatement\");\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp.parseForStatement = function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  this.expect(_tokentype.types.parenL);\n  if (this.type === _tokentype.types.semi) return this.parseFor(node, null);\n  var isLet = this.isLet();\n  if (this.type === _tokentype.types._var || this.type === _tokentype.types._const || isLet) {\n    var _init = this.startNode(),\n        kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(_init, true, kind);\n    this.finishNode(_init, \"VariableDeclaration\");\n    if ((this.type === _tokentype.types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && _init.declarations.length === 1 && !(kind !== \"var\" && _init.declarations[0].init)) return this.parseForIn(node, _init);\n    return this.parseFor(node, _init);\n  }\n  var refDestructuringErrors = { shorthandAssign: 0, trailingComma: 0 };\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === _tokentype.types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n    this.toAssignable(init);\n    this.checkLVal(init);\n    return this.parseForIn(node, init);\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  return this.parseFor(node, init);\n};\n\npp.parseFunctionStatement = function (node) {\n  this.next();\n  return this.parseFunction(node, true);\n};\n\npp.parseIfStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  node.consequent = this.parseStatement(false);\n  node.alternate = this.eat(_tokentype.types._else) ? this.parseStatement(false) : null;\n  return this.finishNode(node, \"IfStatement\");\n};\n\npp.parseReturnStatement = function (node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction) this.raise(this.start, \"'return' outside of function\");\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(_tokentype.types.semi) || this.insertSemicolon()) node.argument = null;else {\n    node.argument = this.parseExpression();this.semicolon();\n  }\n  return this.finishNode(node, \"ReturnStatement\");\n};\n\npp.parseSwitchStatement = function (node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(_tokentype.types.braceL);\n  this.labels.push(switchLabel);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  for (var cur, sawDefault = false; this.type != _tokentype.types.braceR;) {\n    if (this.type === _tokentype.types._case || this.type === _tokentype.types._default) {\n      var isCase = this.type === _tokentype.types._case;\n      if (cur) this.finishNode(cur, \"SwitchCase\");\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\");\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(_tokentype.types.colon);\n    } else {\n      if (!cur) this.unexpected();\n      cur.consequent.push(this.parseStatement(true));\n    }\n  }\n  if (cur) this.finishNode(cur, \"SwitchCase\");\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\");\n};\n\npp.parseThrowStatement = function (node) {\n  this.next();\n  if (_whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) this.raise(this.lastTokEnd, \"Illegal newline after throw\");\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\");\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp.parseTryStatement = function (node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === _tokentype.types._catch) {\n    var clause = this.startNode();\n    this.next();\n    this.expect(_tokentype.types.parenL);\n    clause.param = this.parseBindingAtom();\n    this.checkLVal(clause.param, true);\n    this.expect(_tokentype.types.parenR);\n    clause.body = this.parseBlock();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(_tokentype.types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer) this.raise(node.start, \"Missing catch or finally clause\");\n  return this.finishNode(node, \"TryStatement\");\n};\n\npp.parseVarStatement = function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\");\n};\n\npp.parseWhileStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\");\n};\n\npp.parseWithStatement = function (node) {\n  if (this.strict) this.raise(this.start, \"'with' in strict mode\");\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\");\n};\n\npp.parseEmptyStatement = function (node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\");\n};\n\npp.parseLabeledStatement = function (node, maybeName, expr) {\n  for (var i = 0; i < this.labels.length; ++i) {\n    if (this.labels[i].name === maybeName) this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  }var kind = this.type.isLoop ? \"loop\" : this.type === _tokentype.types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label = this.labels[i];\n    if (label.statementStart == node.start) {\n      label.statementStart = this.start;\n      label.kind = kind;\n    } else break;\n  }\n  this.labels.push({ name: maybeName, kind: kind, statementStart: this.start });\n  node.body = this.parseStatement(true);\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\");\n};\n\npp.parseExpressionStatement = function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\");\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp.parseBlock = function (allowStrict) {\n  var node = this.startNode(),\n      first = true,\n      oldStrict = undefined;\n  node.body = [];\n  this.expect(_tokentype.types.braceL);\n  while (!this.eat(_tokentype.types.braceR)) {\n    var stmt = this.parseStatement(true);\n    node.body.push(stmt);\n    if (first && allowStrict && this.isUseStrict(stmt)) {\n      oldStrict = this.strict;\n      this.setStrict(this.strict = true);\n    }\n    first = false;\n  }\n  if (oldStrict === false) this.setStrict(false);\n  return this.finishNode(node, \"BlockStatement\");\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp.parseFor = function (node, init) {\n  node.init = init;\n  this.expect(_tokentype.types.semi);\n  node.test = this.type === _tokentype.types.semi ? null : this.parseExpression();\n  this.expect(_tokentype.types.semi);\n  node.update = this.type === _tokentype.types.parenR ? null : this.parseExpression();\n  this.expect(_tokentype.types.parenR);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\");\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp.parseForIn = function (node, init) {\n  var type = this.type === _tokentype.types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  node.left = init;\n  node.right = this.parseExpression();\n  this.expect(_tokentype.types.parenR);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type);\n};\n\n// Parse a list of variable declarations.\n\npp.parseVar = function (node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl);\n    if (this.eat(_tokentype.types.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === _tokentype.types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      this.unexpected();\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this.type === _tokentype.types._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(_tokentype.types.comma)) break;\n  }\n  return node;\n};\n\npp.parseVarId = function (decl) {\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, true);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp.parseFunction = function (node, isStatement, allowExpressionBody) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6) node.generator = this.eat(_tokentype.types.star);\n  var oldInGen = this.inGenerator;\n  this.inGenerator = node.generator;\n  if (isStatement || this.type === _tokentype.types.name) node.id = this.parseIdent();\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n  this.inGenerator = oldInGen;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n};\n\npp.parseFunctionParams = function (node) {\n  this.expect(_tokentype.types.parenL);\n  node.params = this.parseBindingList(_tokentype.types.parenR, false, false, true);\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp.parseClass = function (node, isStatement) {\n  this.next();\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(_tokentype.types.braceL);\n  while (!this.eat(_tokentype.types.braceR)) {\n    if (this.eat(_tokentype.types.semi)) continue;\n    var method = this.startNode();\n    var isGenerator = this.eat(_tokentype.types.star);\n    var isMaybeStatic = this.type === _tokentype.types.name && this.value === \"static\";\n    this.parsePropertyName(method);\n    method[\"static\"] = isMaybeStatic && this.type !== _tokentype.types.parenL;\n    if (method[\"static\"]) {\n      if (isGenerator) this.unexpected();\n      isGenerator = this.eat(_tokentype.types.star);\n      this.parsePropertyName(method);\n    }\n    method.kind = \"method\";\n    var isGetSet = false;\n    if (!method.computed) {\n      var key = method.key;\n\n      if (!isGenerator && key.type === \"Identifier\" && this.type !== _tokentype.types.parenL && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true;\n        method.kind = key.name;\n        key = this.parsePropertyName(method);\n      }\n      if (!method[\"static\"] && (key.type === \"Identifier\" && key.name === \"constructor\" || key.type === \"Literal\" && key.value === \"constructor\")) {\n        if (hadConstructor) this.raise(key.start, \"Duplicate constructor in the same class\");\n        if (isGetSet) this.raise(key.start, \"Constructor can't have get/set modifier\");\n        if (isGenerator) this.raise(key.start, \"Constructor can't be a generator\");\n        method.kind = \"constructor\";\n        hadConstructor = true;\n      }\n    }\n    this.parseClassMethod(classBody, method, isGenerator);\n    if (isGetSet) {\n      var paramCount = method.kind === \"get\" ? 0 : 1;\n      if (method.value.params.length !== paramCount) {\n        var start = method.value.start;\n        if (method.kind === \"get\") this.raiseRecoverable(start, \"getter should have no params\");else this.raiseRecoverable(start, \"setter should have exactly one param\");\n      }\n      if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\") this.raise(method.value.params[0].start, \"Setter cannot use rest params\");\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n};\n\npp.parseClassMethod = function (classBody, method, isGenerator) {\n  method.value = this.parseMethod(isGenerator);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp.parseClassId = function (node, isStatement) {\n  node.id = this.type === _tokentype.types.name ? this.parseIdent() : isStatement ? this.unexpected() : null;\n};\n\npp.parseClassSuper = function (node) {\n  node.superClass = this.eat(_tokentype.types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp.parseExport = function (node) {\n  this.next();\n  // export * from '...'\n  if (this.eat(_tokentype.types.star)) {\n    this.expectContextual(\"from\");\n    node.source = this.type === _tokentype.types.string ? this.parseExprAtom() : this.unexpected();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\");\n  }\n  if (this.eat(_tokentype.types._default)) {\n    // export default ...\n    var parens = this.type == _tokentype.types.parenL;\n    var expr = this.parseMaybeAssign();\n    var needsSemi = true;\n    if (!parens && (expr.type == \"FunctionExpression\" || expr.type == \"ClassExpression\")) {\n      needsSemi = false;\n      if (expr.id) {\n        expr.type = expr.type == \"FunctionExpression\" ? \"FunctionDeclaration\" : \"ClassDeclaration\";\n      }\n    }\n    node.declaration = expr;\n    if (needsSemi) this.semicolon();\n    return this.finishNode(node, \"ExportDefaultDeclaration\");\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    node.specifiers = [];\n    node.source = null;\n  } else {\n    // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers();\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === _tokentype.types.string ? this.parseExprAtom() : this.unexpected();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0; i < node.specifiers.length; i++) {\n        if (this.keywords.test(node.specifiers[i].local.name) || this.reservedWords.test(node.specifiers[i].local.name)) {\n          this.unexpected(node.specifiers[i].local.start);\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\");\n};\n\npp.shouldParseExportStatement = function () {\n  return this.type.keyword || this.isLet();\n};\n\n// Parses a comma-separated list of module exports.\n\npp.parseExportSpecifiers = function () {\n  var nodes = [],\n      first = true;\n  // export { x, y as z } [from '...']\n  this.expect(_tokentype.types.braceL);\n  while (!this.eat(_tokentype.types.braceR)) {\n    if (!first) {\n      this.expect(_tokentype.types.comma);\n      if (this.afterTrailingComma(_tokentype.types.braceR)) break;\n    } else first = false;\n\n    var node = this.startNode();\n    node.local = this.parseIdent(this.type === _tokentype.types._default);\n    node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes;\n};\n\n// Parses import declaration.\n\npp.parseImport = function (node) {\n  this.next();\n  // import '...'\n  if (this.type === _tokentype.types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === _tokentype.types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\");\n};\n\n// Parses a comma-separated list of module imports.\n\npp.parseImportSpecifiers = function () {\n  var nodes = [],\n      first = true;\n  if (this.type === _tokentype.types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, true);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(_tokentype.types.comma)) return nodes;\n  }\n  if (this.type === _tokentype.types.star) {\n    var node = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, true);\n    nodes.push(this.finishNode(node, \"ImportNamespaceSpecifier\"));\n    return nodes;\n  }\n  this.expect(_tokentype.types.braceL);\n  while (!this.eat(_tokentype.types.braceR)) {\n    if (!first) {\n      this.expect(_tokentype.types.comma);\n      if (this.afterTrailingComma(_tokentype.types.braceR)) break;\n    } else first = false;\n\n    var node = this.startNode();\n    node.imported = this.parseIdent(true);\n    if (this.eatContextual(\"as\")) {\n      node.local = this.parseIdent();\n    } else {\n      node.local = node.imported;\n      if (this.isKeyword(node.local.name)) this.unexpected(node.local.start);\n      if (this.reservedWordsStrict.test(node.local.name)) this.raise(node.local.start, \"The keyword '\" + node.local.name + \"' is reserved\");\n    }\n    this.checkLVal(node.local, true);\n    nodes.push(this.finishNode(node, \"ImportSpecifier\"));\n  }\n  return nodes;\n};\n\n},{\"./identifier\":2,\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],12:[function(_dereq_,module,exports){\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _state = _dereq_(\"./state\");\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override) {\n  _classCallCheck(this, TokContext);\n\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n};\n\nexports.TokContext = TokContext;\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", true),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) {\n    return p.readTmplToken();\n  }),\n  f_expr: new TokContext(\"function\", true)\n};\n\nexports.types = types;\nvar pp = _state.Parser.prototype;\n\npp.initialContext = function () {\n  return [types.b_stat];\n};\n\npp.braceIsBlock = function (prevType) {\n  if (prevType === _tokentype.types.colon) {\n    var _parent = this.curContext();\n    if (_parent === types.b_stat || _parent === types.b_expr) return !_parent.isExpr;\n  }\n  if (prevType === _tokentype.types._return) return _whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n  if (prevType === _tokentype.types._else || prevType === _tokentype.types.semi || prevType === _tokentype.types.eof || prevType === _tokentype.types.parenR) return true;\n  if (prevType == _tokentype.types.braceL) return this.curContext() === types.b_stat;\n  return !this.exprAllowed;\n};\n\npp.updateContext = function (prevType) {\n  var update = undefined,\n      type = this.type;\n  if (type.keyword && prevType == _tokentype.types.dot) this.exprAllowed = false;else if (update = type.updateContext) update.call(this, prevType);else this.exprAllowed = type.beforeExpr;\n};\n\n// Token-specific context update code\n\n_tokentype.types.parenR.updateContext = _tokentype.types.braceR.updateContext = function () {\n  if (this.context.length == 1) {\n    this.exprAllowed = true;\n    return;\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext() === types.f_expr) {\n    this.context.pop();\n    this.exprAllowed = false;\n  } else if (out === types.b_tmpl) {\n    this.exprAllowed = true;\n  } else {\n    this.exprAllowed = !out.isExpr;\n  }\n};\n\n_tokentype.types.braceL.updateContext = function (prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\n_tokentype.types.dollarBraceL.updateContext = function () {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\n_tokentype.types.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === _tokentype.types._if || prevType === _tokentype.types._for || prevType === _tokentype.types._with || prevType === _tokentype.types._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\n_tokentype.types.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\n_tokentype.types._function.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== _tokentype.types.semi && prevType !== _tokentype.types._else && (prevType !== _tokentype.types.colon || this.curContext() !== types.b_stat)) this.context.push(types.f_expr);\n  this.exprAllowed = false;\n};\n\n_tokentype.types.backQuote.updateContext = function () {\n  if (this.curContext() === types.q_tmpl) this.context.pop();else this.context.push(types.q_tmpl);\n  this.exprAllowed = false;\n};\n\n},{\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],13:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _identifier = _dereq_(\"./identifier\");\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar _locutil = _dereq_(\"./locutil\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  _classCallCheck(this, Token);\n\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations) this.loc = new _locutil.SourceLocation(p, p.startLoc, p.endLoc);\n  if (p.options.ranges) this.range = [p.start, p.end];\n}\n\n// ## Tokenizer\n\n;\n\nexports.Token = Token;\nvar pp = _state.Parser.prototype;\n\n// Are we running under Rhino?\nvar isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\";\n\n// Move to the next token\n\npp.next = function () {\n  if (this.options.onToken) this.options.onToken(new Token(this));\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function () {\n  this.next();\n  return new Token(this);\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\") pp[Symbol.iterator] = function () {\n  var self = this;\n  return { next: function next() {\n      var token = self.getToken();\n      return {\n        done: token.type === _tokentype.types.eof,\n        value: token\n      };\n    } };\n};\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp.setStrict = function (strict) {\n  this.strict = strict;\n  if (this.type !== _tokentype.types.num && this.type !== _tokentype.types.string) return;\n  this.pos = this.start;\n  if (this.options.locations) {\n    while (this.pos < this.lineStart) {\n      this.lineStart = this.input.lastIndexOf(\"\\n\", this.lineStart - 2) + 1;\n      --this.curLine;\n    }\n  }\n  this.nextToken();\n};\n\npp.curContext = function () {\n  return this.context[this.context.length - 1];\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function () {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) this.skipSpace();\n\n  this.start = this.pos;\n  if (this.options.locations) this.startLoc = this.curPosition();\n  if (this.pos >= this.input.length) return this.finishToken(_tokentype.types.eof);\n\n  if (curContext.override) return curContext.override(this);else this.readToken(this.fullCharCodeAtPos());\n};\n\npp.readToken = function (code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (_identifier.isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */) return this.readWord();\n\n  return this.getTokenFromCode(code);\n};\n\npp.fullCharCodeAtPos = function () {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) return code;\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00;\n};\n\npp.skipBlockComment = function () {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos,\n      end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) this.raise(this.pos - 2, \"Unterminated comment\");\n  this.pos = end + 2;\n  if (this.options.locations) {\n    _whitespace.lineBreakG.lastIndex = start;\n    var match = undefined;\n    while ((match = _whitespace.lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this.curLine;\n      this.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment) this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());\n};\n\npp.skipLineComment = function (startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n    ++this.pos;\n    ch = this.input.charCodeAt(this.pos);\n  }\n  if (this.options.onComment) this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function () {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n      case 32:case 160:\n        // ' '\n        ++this.pos;\n        break;\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10:case 8232:case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break;\n      case 47:\n        // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n          case 42:\n            // '*'\n            this.skipBlockComment();\n            break;\n          case 47:\n            this.skipLineComment(2);\n            break;\n          default:\n            break loop;\n        }\n        break;\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && _whitespace.nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop;\n        }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function (type, val) {\n  this.end = this.pos;\n  if (this.options.locations) this.endLoc = this.curPosition();\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function () {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) return this.readNumber(true);\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n    // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(_tokentype.types.ellipsis);\n  } else {\n    ++this.pos;\n    return this.finishToken(_tokentype.types.dot);\n  }\n};\n\npp.readToken_slash = function () {\n  // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) {\n    ++this.pos;return this.readRegexp();\n  }\n  if (next === 61) return this.finishOp(_tokentype.types.assign, 2);\n  return this.finishOp(_tokentype.types.slash, 1);\n};\n\npp.readToken_mult_modulo_exp = function (code) {\n  // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? _tokentype.types.star : _tokentype.types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && next === 42) {\n    ++size;\n    tokentype = _tokentype.types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) return this.finishOp(_tokentype.types.assign, size + 1);\n  return this.finishOp(tokentype, size);\n};\n\npp.readToken_pipe_amp = function (code) {\n  // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) return this.finishOp(code === 124 ? _tokentype.types.logicalOR : _tokentype.types.logicalAND, 2);\n  if (next === 61) return this.finishOp(_tokentype.types.assign, 2);\n  return this.finishOp(code === 124 ? _tokentype.types.bitwiseOR : _tokentype.types.bitwiseAND, 1);\n};\n\npp.readToken_caret = function () {\n  // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) return this.finishOp(_tokentype.types.assign, 2);\n  return this.finishOp(_tokentype.types.bitwiseXOR, 1);\n};\n\npp.readToken_plus_min = function (code) {\n  // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 && _whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken();\n    }\n    return this.finishOp(_tokentype.types.incDec, 2);\n  }\n  if (next === 61) return this.finishOp(_tokentype.types.assign, 2);\n  return this.finishOp(_tokentype.types.plusMin, 1);\n};\n\npp.readToken_lt_gt = function (code) {\n  // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp(_tokentype.types.assign, size + 1);\n    return this.finishOp(_tokentype.types.bitShift, size);\n  }\n  if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 && this.input.charCodeAt(this.pos + 3) == 45) {\n    if (this.inModule) this.unexpected();\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken();\n  }\n  if (next === 61) size = 2;\n  return this.finishOp(_tokentype.types.relational, size);\n};\n\npp.readToken_eq_excl = function (code) {\n  // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) return this.finishOp(_tokentype.types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n    // '=>'\n    this.pos += 2;\n    return this.finishToken(_tokentype.types.arrow);\n  }\n  return this.finishOp(code === 61 ? _tokentype.types.eq : _tokentype.types.prefix, 1);\n};\n\npp.getTokenFromCode = function (code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46:\n      // '.'\n      return this.readToken_dot();\n\n    // Punctuation tokens.\n    case 40:\n      ++this.pos;return this.finishToken(_tokentype.types.parenL);\n    case 41:\n      ++this.pos;return this.finishToken(_tokentype.types.parenR);\n    case 59:\n      ++this.pos;return this.finishToken(_tokentype.types.semi);\n    case 44:\n      ++this.pos;return this.finishToken(_tokentype.types.comma);\n    case 91:\n      ++this.pos;return this.finishToken(_tokentype.types.bracketL);\n    case 93:\n      ++this.pos;return this.finishToken(_tokentype.types.bracketR);\n    case 123:\n      ++this.pos;return this.finishToken(_tokentype.types.braceL);\n    case 125:\n      ++this.pos;return this.finishToken(_tokentype.types.braceR);\n    case 58:\n      ++this.pos;return this.finishToken(_tokentype.types.colon);\n    case 63:\n      ++this.pos;return this.finishToken(_tokentype.types.question);\n\n    case 96:\n      // '`'\n      if (this.options.ecmaVersion < 6) break;\n      ++this.pos;\n      return this.finishToken(_tokentype.types.backQuote);\n\n    case 48:\n      // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) return this.readRadixNumber(16); // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) return this.readRadixNumber(8); // '0o', '0O' - octal number\n        if (next === 98 || next === 66) return this.readRadixNumber(2); // '0b', '0B' - binary number\n      }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:\n      // 1-9\n      return this.readNumber(false);\n\n    // Quotes produce strings.\n    case 34:case 39:\n      // '\"', \"'\"\n      return this.readString(code);\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47:\n      // '/'\n      return this.readToken_slash();\n\n    case 37:case 42:\n      // '%*'\n      return this.readToken_mult_modulo_exp(code);\n\n    case 124:case 38:\n      // '|&'\n      return this.readToken_pipe_amp(code);\n\n    case 94:\n      // '^'\n      return this.readToken_caret();\n\n    case 43:case 45:\n      // '+-'\n      return this.readToken_plus_min(code);\n\n    case 60:case 62:\n      // '<>'\n      return this.readToken_lt_gt(code);\n\n    case 61:case 33:\n      // '=!'\n      return this.readToken_eq_excl(code);\n\n    case 126:\n      // '~'\n      return this.finishOp(_tokentype.types.prefix, 1);\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function (type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str);\n};\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags);\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message);\n      throw e;\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"￿\", \"u\");\n\npp.readRegexp = function () {\n  var _this = this;\n\n  var escaped = undefined,\n      inClass = undefined,\n      start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(start, \"Unterminated regular expression\");\n    var ch = this.input.charAt(this.pos);\n    if (_whitespace.lineBreak.test(ch)) this.raise(start, \"Unterminated regular expression\");\n    if (!escaped) {\n      if (ch === \"[\") inClass = true;else if (ch === \"]\" && inClass) inClass = false;else if (ch === \"/\" && !inClass) break;\n      escaped = ch === \"\\\\\";\n    } else escaped = false;\n    ++this.pos;\n  }\n  var content = this.input.slice(start, this.pos);\n  ++this.pos;\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  var mods = this.readWord1();\n  var tmp = content;\n  if (mods) {\n    var validFlags = /^[gim]*$/;\n    if (this.options.ecmaVersion >= 6) validFlags = /^[gimuy]*$/;\n    if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\");\n    if (mods.indexOf('u') >= 0 && !regexpUnicodeSupport) {\n      // Replace each astral symbol and every Unicode escape sequence that\n      // possibly represents an astral symbol or a paired surrogate with a\n      // single ASCII symbol to avoid throwing on regular expressions that\n      // are only valid in combination with the `/u` flag.\n      // Note: replacing with the ASCII symbol `x` might cause false\n      // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n      // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n      // be replaced by `[x-b]` which throws an error.\n      tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {\n        code = Number(\"0x\" + code);\n        if (code > 0x10FFFF) _this.raise(start + offset + 3, \"Code point out of bounds\");\n        return \"x\";\n      });\n      tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\");\n    }\n  }\n  // Detect invalid regular expressions.\n  var value = null;\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, undefined, start, this);\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods);\n  }\n  return this.finishToken(_tokentype.types.regexp, { pattern: content, flags: mods, value: value });\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function (radix, len) {\n  var start = this.pos,\n      total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this.input.charCodeAt(this.pos),\n        val = undefined;\n    if (code >= 97) val = code - 97 + 10; // a\n    else if (code >= 65) val = code - 65 + 10; // A\n      else if (code >= 48 && code <= 57) val = code - 48; // 0-9\n        else val = Infinity;\n    if (val >= radix) break;\n    ++this.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) return null;\n\n  return total;\n};\n\npp.readRadixNumber = function (radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) this.raise(this.start + 2, \"Expected number in radix \" + radix);\n  if (_identifier.isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\");\n  return this.finishToken(_tokentype.types.num, val);\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function (startsWithDot) {\n  var start = this.pos,\n      isFloat = false,\n      octal = this.input.charCodeAt(this.pos) === 48;\n  if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\");\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46) {\n    // '.'\n    ++this.pos;\n    this.readInt(10);\n    isFloat = true;\n    next = this.input.charCodeAt(this.pos);\n  }\n  if (next === 69 || next === 101) {\n    // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) ++this.pos; // '+-'\n    if (this.readInt(10) === null) this.raise(start, \"Invalid number\");\n    isFloat = true;\n  }\n  if (_identifier.isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\");\n\n  var str = this.input.slice(start, this.pos),\n      val = undefined;\n  if (isFloat) val = parseFloat(str);else if (!octal || str.length === 1) val = parseInt(str, 10);else if (/[89]/.test(str) || this.strict) this.raise(start, \"Invalid number\");else val = parseInt(str, 8);\n  return this.finishToken(_tokentype.types.num, val);\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function () {\n  var ch = this.input.charCodeAt(this.pos),\n      code = undefined;\n\n  if (ch === 123) {\n    if (this.options.ecmaVersion < 6) this.unexpected();\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf('}', this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) this.raise(codePos, \"Code point out of bounds\");\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code;\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) return String.fromCharCode(code);\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);\n}\n\npp.readString = function (quote) {\n  var out = \"\",\n      chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated string constant\");\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) break;\n    if (ch === 92) {\n      // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else {\n      if (_whitespace.isNewLine(ch)) this.raise(this.start, \"Unterminated string constant\");\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(_tokentype.types.string, out);\n};\n\n// Reads template string tokens.\n\npp.readTmplToken = function () {\n  var out = \"\",\n      chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated template\");\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {\n      // '`', '${'\n      if (this.pos === this.start && this.type === _tokentype.types.template) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(_tokentype.types.dollarBraceL);\n        } else {\n          ++this.pos;\n          return this.finishToken(_tokentype.types.backQuote);\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(_tokentype.types.template, out);\n    }\n    if (ch === 92) {\n      // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (_whitespace.isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) ++this.pos;\n        case 10:\n          out += \"\\n\";\n          break;\n        default:\n          out += String.fromCharCode(ch);\n          break;\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function (inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n    case 110:\n      return \"\\n\"; // 'n' -> '\\n'\n    case 114:\n      return \"\\r\"; // 'r' -> '\\r'\n    case 120:\n      return String.fromCharCode(this.readHexChar(2)); // 'x'\n    case 117:\n      return codePointToString(this.readCodePoint()); // 'u'\n    case 116:\n      return \"\\t\"; // 't' -> '\\t'\n    case 98:\n      return \"\\b\"; // 'b' -> '\\b'\n    case 118:\n      return \"\\u000b\"; // 'v' -> '\\u000b'\n    case 102:\n      return \"\\f\"; // 'f' -> '\\f'\n    case 13:\n      if (this.input.charCodeAt(this.pos) === 10) ++this.pos; // '\\r\\n'\n    case 10:\n      // ' \\n'\n      if (this.options.locations) {\n        this.lineStart = this.pos;++this.curLine;\n      }\n      return \"\";\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n          this.raise(this.pos - 2, \"Octal literal in strict mode\");\n        }\n        this.pos += octalStr.length - 1;\n        return String.fromCharCode(octal);\n      }\n      return String.fromCharCode(ch);\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function (len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) this.raise(codePos, \"Bad character escape sequence\");\n  return n;\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function () {\n  this.containsEsc = false;\n  var word = \"\",\n      first = true,\n      chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (_identifier.isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) {\n      // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) != 117) // \"u\"\n        this.raise(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? _identifier.isIdentifierStart : _identifier.isIdentifierChar)(esc, astral)) this.raise(escStart, \"Invalid Unicode escape\");\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break;\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos);\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function () {\n  var word = this.readWord1();\n  var type = _tokentype.types.name;\n  if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word)) type = _tokentype.keywords[word];\n  return this.finishToken(type, word);\n};\n\n},{\"./identifier\":2,\"./locutil\":5,\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],14:[function(_dereq_,module,exports){\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TokenType = function TokenType(label) {\n  var conf = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  _classCallCheck(this, TokenType);\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nexports.TokenType = TokenType;\n\nfunction binop(name, prec) {\n  return new TokenType(name, { beforeExpr: true, binop: prec });\n}\nvar beforeExpr = { beforeExpr: true },\n    startsExpr = { startsExpr: true };\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr: true, startsExpr: true }),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", { beforeExpr: true, startsExpr: true }),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", { beforeExpr: true, startsExpr: true }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr: true, startsExpr: true }),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr: true, isAssign: true }),\n  assign: new TokenType(\"_=\", { beforeExpr: true, isAssign: true }),\n  incDec: new TokenType(\"++/--\", { prefix: true, postfix: true, startsExpr: true }),\n  prefix: new TokenType(\"prefix\", { beforeExpr: true, prefix: true, startsExpr: true }),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=\", 6),\n  relational: binop(\"</>\", 7),\n  bitShift: binop(\"<</>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr: true, binop: 9, prefix: true, startsExpr: true }),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", { beforeExpr: true })\n};\n\nexports.types = types;\n// Map keyword names to token types.\n\nvar keywords = {};\n\nexports.keywords = keywords;\n// Succinct definitions of keyword token types\nfunction kw(name) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  options.keyword = name;\n  keywords[name] = types[\"_\" + name] = new TokenType(name, options);\n}\n\nkw(\"break\");\nkw(\"case\", beforeExpr);\nkw(\"catch\");\nkw(\"continue\");\nkw(\"debugger\");\nkw(\"default\", beforeExpr);\nkw(\"do\", { isLoop: true, beforeExpr: true });\nkw(\"else\", beforeExpr);\nkw(\"finally\");\nkw(\"for\", { isLoop: true });\nkw(\"function\", startsExpr);\nkw(\"if\");\nkw(\"return\", beforeExpr);\nkw(\"switch\");\nkw(\"throw\", beforeExpr);\nkw(\"try\");\nkw(\"var\");\nkw(\"const\");\nkw(\"while\", { isLoop: true });\nkw(\"with\");\nkw(\"new\", { beforeExpr: true, startsExpr: true });\nkw(\"this\", startsExpr);\nkw(\"super\", startsExpr);\nkw(\"class\");\nkw(\"extends\", beforeExpr);\nkw(\"export\");\nkw(\"import\");\nkw(\"null\", startsExpr);\nkw(\"true\", startsExpr);\nkw(\"false\", startsExpr);\nkw(\"in\", { beforeExpr: true, binop: 7 });\nkw(\"instanceof\", { beforeExpr: true, binop: 7 });\nkw(\"typeof\", { beforeExpr: true, prefix: true, startsExpr: true });\nkw(\"void\", { beforeExpr: true, prefix: true, startsExpr: true });\nkw(\"delete\", { beforeExpr: true, prefix: true, startsExpr: true });\n\n},{}],15:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.has = has;\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === \"[object Array]\";\n}\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return Object.prototype.hasOwnProperty.call(obj, propName);\n}\n\n},{}],16:[function(_dereq_,module,exports){\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.isNewLine = isNewLine;\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nexports.lineBreak = lineBreak;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nexports.lineBreakG = lineBreakG;\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code == 0x2029;\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nexports.nonASCIIwhitespace = nonASCIIwhitespace;\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nexports.skipWhiteSpace = skipWhiteSpace;\n\n},{}]},{},[3])(3)\n});","module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n","'use strict';\n\nvar XHTMLEntities = require('./xhtml');\n\nvar hexNumber = /^[\\da-fA-F]+$/;\nvar decimalNumber = /^\\d+$/;\n\nmodule.exports = function(acorn) {\n  var tt = acorn.tokTypes;\n  var tc = acorn.tokContexts;\n\n  tc.j_oTag = new acorn.TokContext('<tag', false);\n  tc.j_cTag = new acorn.TokContext('</tag', false);\n  tc.j_expr = new acorn.TokContext('<tag>...</tag>', true, true);\n\n  tt.jsxName = new acorn.TokenType('jsxName');\n  tt.jsxText = new acorn.TokenType('jsxText', {beforeExpr: true});\n  tt.jsxTagStart = new acorn.TokenType('jsxTagStart');\n  tt.jsxTagEnd = new acorn.TokenType('jsxTagEnd');\n\n  tt.jsxTagStart.updateContext = function() {\n    this.context.push(tc.j_expr); // treat as beginning of JSX expression\n    this.context.push(tc.j_oTag); // start opening tag context\n    this.exprAllowed = false;\n  };\n  tt.jsxTagEnd.updateContext = function(prevType) {\n    var out = this.context.pop();\n    if (out === tc.j_oTag && prevType === tt.slash || out === tc.j_cTag) {\n      this.context.pop();\n      this.exprAllowed = this.curContext() === tc.j_expr;\n    } else {\n      this.exprAllowed = true;\n    }\n  };\n\n  var pp = acorn.Parser.prototype;\n\n  // Reads inline JSX contents token.\n\n  pp.jsx_readToken = function() {\n    var out = '', chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length)\n        this.raise(this.start, 'Unterminated JSX contents');\n      var ch = this.input.charCodeAt(this.pos);\n\n      switch (ch) {\n      case 60: // '<'\n      case 123: // '{'\n        if (this.pos === this.start) {\n          if (ch === 60 && this.exprAllowed) {\n            ++this.pos;\n            return this.finishToken(tt.jsxTagStart);\n          }\n          return this.getTokenFromCode(ch);\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(tt.jsxText, out);\n\n      case 38: // '&'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.jsx_readEntity();\n        chunkStart = this.pos;\n        break;\n\n      default:\n        if (acorn.isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(true);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n    }\n  };\n\n  pp.jsx_readNewLine = function(normalizeCRLF) {\n    var ch = this.input.charCodeAt(this.pos);\n    var out;\n    ++this.pos;\n    if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n      ++this.pos;\n      out = normalizeCRLF ? '\\n' : '\\r\\n';\n    } else {\n      out = String.fromCharCode(ch);\n    }\n    if (this.options.locations) {\n      ++this.curLine;\n      this.lineStart = this.pos;\n    }\n\n    return out;\n  };\n\n  pp.jsx_readString = function(quote) {\n    var out = '', chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length)\n        this.raise(this.start, 'Unterminated string constant');\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) break;\n      if (ch === 38) { // '&'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.jsx_readEntity();\n        chunkStart = this.pos;\n      } else if (acorn.isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.jsx_readNewLine(false);\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(tt.string, out);\n  };\n\n  pp.jsx_readEntity = function() {\n    var str = '', count = 0, entity;\n    var ch = this.input[this.pos];\n    if (ch !== '&')\n      this.raise(this.pos, 'Entity must start with an ampersand');\n    var startPos = ++this.pos;\n    while (this.pos < this.input.length && count++ < 10) {\n      ch = this.input[this.pos++];\n      if (ch === ';') {\n        if (str[0] === '#') {\n          if (str[1] === 'x') {\n            str = str.substr(2);\n            if (hexNumber.test(str))\n              entity = String.fromCharCode(parseInt(str, 16));\n          } else {\n            str = str.substr(1);\n            if (decimalNumber.test(str))\n              entity = String.fromCharCode(parseInt(str, 10));\n          }\n        } else {\n          entity = XHTMLEntities[str];\n        }\n        break;\n      }\n      str += ch;\n    }\n    if (!entity) {\n      this.pos = startPos;\n      return '&';\n    }\n    return entity;\n  };\n\n\n  // Read a JSX identifier (valid tag or attribute name).\n  //\n  // Optimized version since JSX identifiers can't contain\n  // escape characters and so can be read as single slice.\n  // Also assumes that first character was already checked\n  // by isIdentifierStart in readToken.\n\n  pp.jsx_readWord = function() {\n    var ch, start = this.pos;\n    do {\n      ch = this.input.charCodeAt(++this.pos);\n    } while (acorn.isIdentifierChar(ch) || ch === 45); // '-'\n    return this.finishToken(tt.jsxName, this.input.slice(start, this.pos));\n  };\n\n  // Transforms JSX element name to string.\n\n  function getQualifiedJSXName(object) {\n    if (object.type === 'JSXIdentifier')\n      return object.name;\n\n    if (object.type === 'JSXNamespacedName')\n      return object.namespace.name + ':' + object.name.name;\n\n    if (object.type === 'JSXMemberExpression')\n      return getQualifiedJSXName(object.object) + '.' +\n      getQualifiedJSXName(object.property);\n  }\n\n  // Parse next token as JSX identifier\n\n  pp.jsx_parseIdentifier = function() {\n    var node = this.startNode();\n    if (this.type === tt.jsxName)\n      node.name = this.value;\n    else if (this.type.keyword)\n      node.name = this.type.keyword;\n    else\n      this.unexpected();\n    this.next();\n    return this.finishNode(node, 'JSXIdentifier');\n  };\n\n  // Parse namespaced identifier.\n\n  pp.jsx_parseNamespacedName = function() {\n    var startPos = this.start, startLoc = this.startLoc;\n    var name = this.jsx_parseIdentifier();\n    if (!this.options.plugins.jsx.allowNamespaces || !this.eat(tt.colon)) return name;\n    var node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsx_parseIdentifier();\n    return this.finishNode(node, 'JSXNamespacedName');\n  };\n\n  // Parses element name in any form - namespaced, member\n  // or single identifier.\n\n  pp.jsx_parseElementName = function() {\n    var startPos = this.start, startLoc = this.startLoc;\n    var node = this.jsx_parseNamespacedName();\n    if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !this.options.plugins.jsx.allowNamespacedObjects) {\n      this.unexpected();\n    }\n    while (this.eat(tt.dot)) {\n      var newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsx_parseIdentifier();\n      node = this.finishNode(newNode, 'JSXMemberExpression');\n    }\n    return node;\n  };\n\n  // Parses any type of JSX attribute value.\n\n  pp.jsx_parseAttributeValue = function() {\n    switch (this.type) {\n    case tt.braceL:\n      var node = this.jsx_parseExpressionContainer();\n      if (node.expression.type === 'JSXEmptyExpression')\n        this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n      return node;\n\n    case tt.jsxTagStart:\n    case tt.string:\n      return this.parseExprAtom();\n\n    default:\n      this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n    }\n  };\n\n  // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n  // and so it should start at the end of last read token (left brace) and finish\n  // at the beginning of the next one (right brace).\n\n  pp.jsx_parseEmptyExpression = function() {\n    var node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n    return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n  };\n\n  // Parses JSX expression enclosed into curly brackets.\n\n\n  pp.jsx_parseExpressionContainer = function() {\n    var node = this.startNode();\n    this.next();\n    node.expression = this.type === tt.braceR\n      ? this.jsx_parseEmptyExpression()\n      : this.parseExpression();\n    this.expect(tt.braceR);\n    return this.finishNode(node, 'JSXExpressionContainer');\n  };\n\n  // Parses following JSX attribute name-value pair.\n\n  pp.jsx_parseAttribute = function() {\n    var node = this.startNode();\n    if (this.eat(tt.braceL)) {\n      this.expect(tt.ellipsis);\n      node.argument = this.parseMaybeAssign();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXSpreadAttribute');\n    }\n    node.name = this.jsx_parseNamespacedName();\n    node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n    return this.finishNode(node, 'JSXAttribute');\n  };\n\n  // Parses JSX opening tag starting after '<'.\n\n  pp.jsx_parseOpeningElementAt = function(startPos, startLoc) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.attributes = [];\n    node.name = this.jsx_parseElementName();\n    while (this.type !== tt.slash && this.type !== tt.jsxTagEnd)\n      node.attributes.push(this.jsx_parseAttribute());\n    node.selfClosing = this.eat(tt.slash);\n    this.expect(tt.jsxTagEnd);\n    return this.finishNode(node, 'JSXOpeningElement');\n  };\n\n  // Parses JSX closing tag starting after '</'.\n\n  pp.jsx_parseClosingElementAt = function(startPos, startLoc) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.name = this.jsx_parseElementName();\n    this.expect(tt.jsxTagEnd);\n    return this.finishNode(node, 'JSXClosingElement');\n  };\n\n  // Parses entire JSX element, including it's opening tag\n  // (starting after '<'), attributes, contents and closing tag.\n\n  pp.jsx_parseElementAt = function(startPos, startLoc) {\n    var node = this.startNodeAt(startPos, startLoc);\n    var children = [];\n    var openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n    var closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.type) {\n        case tt.jsxTagStart:\n          startPos = this.start; startLoc = this.startLoc;\n          this.next();\n          if (this.eat(tt.slash)) {\n            closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n            break contents;\n          }\n          children.push(this.jsx_parseElementAt(startPos, startLoc));\n          break;\n\n        case tt.jsxText:\n          children.push(this.parseExprAtom());\n          break;\n\n        case tt.braceL:\n          children.push(this.jsx_parseExpressionContainer());\n          break;\n\n        default:\n          this.unexpected();\n        }\n      }\n      if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n        this.raise(\n          closingElement.start,\n          'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n      }\n    }\n\n    node.openingElement = openingElement;\n    node.closingElement = closingElement;\n    node.children = children;\n    if (this.type === tt.relational && this.value === \"<\") {\n      this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n    }\n    return this.finishNode(node, 'JSXElement');\n  };\n\n  // Parses entire JSX element from current position.\n\n  pp.jsx_parseElement = function() {\n    var startPos = this.start, startLoc = this.startLoc;\n    this.next();\n    return this.jsx_parseElementAt(startPos, startLoc);\n  };\n\n  acorn.plugins.jsx = function(instance, opts) {\n    if (!opts) {\n      return;\n    }\n\n    if (typeof opts !== 'object') {\n      opts = {};\n    }\n\n    instance.options.plugins.jsx = {\n      allowNamespaces: opts.allowNamespaces !== false,\n      allowNamespacedObjects: !!opts.allowNamespacedObjects\n    };\n\n    instance.extend('parseExprAtom', function(inner) {\n      return function(refShortHandDefaultPos) {\n        if (this.type === tt.jsxText)\n          return this.parseLiteral(this.value);\n        else if (this.type === tt.jsxTagStart)\n          return this.jsx_parseElement();\n        else\n          return inner.call(this, refShortHandDefaultPos);\n      };\n    });\n\n    instance.extend('readToken', function(inner) {\n      return function(code) {\n        var context = this.curContext();\n\n        if (context === tc.j_expr) return this.jsx_readToken();\n\n        if (context === tc.j_oTag || context === tc.j_cTag) {\n          if (acorn.isIdentifierStart(code)) return this.jsx_readWord();\n\n          if (code == 62) {\n            ++this.pos;\n            return this.finishToken(tt.jsxTagEnd);\n          }\n\n          if ((code === 34 || code === 39) && context == tc.j_oTag)\n            return this.jsx_readString(code);\n        }\n\n        if (code === 60 && this.exprAllowed) {\n          ++this.pos;\n          return this.finishToken(tt.jsxTagStart);\n        }\n        return inner.call(this, code);\n      };\n    });\n\n    instance.extend('updateContext', function(inner) {\n      return function(prevType) {\n        if (this.type == tt.braceL) {\n          var curContext = this.curContext();\n          if (curContext == tc.j_oTag) this.context.push(tc.b_expr);\n          else if (curContext == tc.j_expr) this.context.push(tc.b_tmpl);\n          else inner.call(this, prevType);\n          this.exprAllowed = true;\n        } else if (this.type === tt.slash && prevType === tt.jsxTagStart) {\n          this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n          this.context.push(tc.j_cTag); // reconsider as closing tag context\n          this.exprAllowed = false;\n        } else {\n          return inner.call(this, prevType);\n        }\n      };\n    });\n  };\n\n  return acorn;\n};\n","'use strict';\n\nmodule.exports = require('./inject')(require('acorn'));\n","'use strict';\n\nmodule.exports = function(acorn) {\n  var tt = acorn.tokTypes;\n  var pp = acorn.Parser.prototype;\n\n  // this is the same parseObj that acorn has with...\n  function parseObj(isPattern, refDestructuringErrors) {\n    let node = this.startNode(), first = true, propHash = {}\n    node.properties = []\n    this.next()\n    while (!this.eat(tt.braceR)) {\n      if (!first) {\n        this.expect(tt.comma)\n        if (this.afterTrailingComma(tt.braceR)) break\n      } else first = false\n\n      let prop = this.startNode(), isGenerator, startPos, startLoc\n      if (this.options.ecmaVersion >= 6) {\n        // ...the spread logic borrowed from babylon :)\n        if (this.type === tt.ellipsis) {\n          prop = this.parseSpread()\n          prop.type = isPattern ? \"RestProperty\" : \"SpreadProperty\"\n          node.properties.push(prop)\n          continue\n        }\n\n        prop.method = false\n        prop.shorthand = false\n        if (isPattern || refDestructuringErrors) {\n          startPos = this.start\n          startLoc = this.startLoc\n        }\n        if (!isPattern)\n          isGenerator = this.eat(tt.star)\n      }\n      this.parsePropertyName(prop)\n      this.parsePropertyValue(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors)\n      this.checkPropClash(prop, propHash)\n      node.properties.push(this.finishNode(prop, \"Property\"))\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  }\n\n  acorn.plugins.objectSpread = function objectSpreadPlugin(instance) {\n    pp.parseObj = parseObj;\n  };\n\n  return acorn;\n};\n","var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nexport function decode ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function encode ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n","import { encode } from 'vlq';\n\nfunction Chunk ( start, end, content ) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.original = content;\n\n\tthis.intro = '';\n\tthis.outro = '';\n\n\tthis.content = content;\n\tthis.storeName = false;\n\tthis.edited = false;\n\n\t// we make these non-enumerable, for sanity while debugging\n\tObject.defineProperties( this, {\n\t\tprevious: { writable: true, value: null },\n\t\tnext: { writable: true, value: null }\n\t});\n}\n\nChunk.prototype = {\n\tappend: function append ( content ) {\n\t\tthis.outro += content;\n\t},\n\n\tclone: function clone () {\n\t\tvar chunk = new Chunk( this.start, this.end, this.original );\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t},\n\n\tcontains: function contains ( index ) {\n\t\treturn this.start < index && index < this.end;\n\t},\n\n\teachNext: function eachNext ( fn ) {\n\t\tvar chunk = this;\n\t\twhile ( chunk ) {\n\t\t\tfn( chunk );\n\t\t\tchunk = chunk.next;\n\t\t}\n\t},\n\n\teachPrevious: function eachPrevious ( fn ) {\n\t\tvar chunk = this;\n\t\twhile ( chunk ) {\n\t\t\tfn( chunk );\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t},\n\n\tedit: function edit ( content, storeName ) {\n\t\tthis.content = content;\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( content ) {\n\t\tthis.intro = content + this.intro;\n\t},\n\n\tsplit: function split ( index ) {\n\t\tvar sliceIndex = index - this.start;\n\n\t\tvar originalBefore = this.original.slice( 0, sliceIndex );\n\t\tvar originalAfter = this.original.slice( sliceIndex );\n\n\t\tthis.original = originalBefore;\n\n\t\tvar newChunk = new Chunk( index, this.end, originalAfter );\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif ( this.edited ) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit( '', false );\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif ( newChunk.next ) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t},\n\n\ttoString: function toString () {\n\t\treturn this.intro + this.content + this.outro;\n\t},\n\n\ttrimEnd: function trimEnd ( rx ) {\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) return true;\n\n\t\tvar trimmed = this.content.replace( rx, '' );\n\n\t\tif ( trimmed.length ) {\n\t\t\tif ( trimmed !== this.content ) {\n\t\t\t\tthis.split( this.start + trimmed.length ).edit( '', false );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit( '', false );\n\n\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\tif ( this.intro.length ) return true;\n\t\t}\n\t},\n\n\ttrimStart: function trimStart ( rx ) {\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) return true;\n\n\t\tvar trimmed = this.content.replace( rx, '' );\n\n\t\tif ( trimmed.length ) {\n\t\t\tif ( trimmed !== this.content ) {\n\t\t\t\tthis.split( this.end - trimmed.length );\n\t\t\t\tthis.edit( '', false );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit( '', false );\n\n\t\t\tthis.outro = this.outro.replace( rx, '' );\n\t\t\tif ( this.outro.length ) return true;\n\t\t}\n\t}\n};\n\nvar _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t_btoa = function ( str ) { return new Buffer( str ).toString( 'base64' ); };\n} else {\n\t_btoa = function () {\n\t\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n\t};\n}\n\nvar btoa = _btoa;\n\nfunction SourceMap ( properties ) {\n\tthis.version = 3;\n\n\tthis.file           = properties.file;\n\tthis.sources        = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names          = properties.names;\n\tthis.mappings       = properties.mappings;\n}\n\nSourceMap.prototype = {\n\ttoString: function toString () {\n\t\treturn JSON.stringify( this );\n\t},\n\n\ttoUrl: function toUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n};\n\nfunction guessIndent ( code ) {\n\tvar lines = code.split( '\\n' );\n\n\tvar tabbed = lines.filter( function ( line ) { return /^\\t+/.test( line ); } );\n\tvar spaced = lines.filter( function ( line ) { return /^ {2,}/.test( line ); } );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tvar min = spaced.reduce( function ( previous, current ) {\n\t\tvar numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n\nfunction getLocator ( source ) {\n\tvar originalLines = source.split( '\\n' );\n\n\tvar start = 0;\n\tvar lineRanges = originalLines.map( function ( line, i ) {\n\t\tvar end = start + line.length + 1;\n\t\tvar range = { start: start, end: end, line: i };\n\n\t\tstart = end;\n\t\treturn range;\n\t});\n\n\tvar i = 0;\n\n\tfunction rangeContains ( range, index ) {\n\t\treturn range.start <= index && index < range.end;\n\t}\n\n\tfunction getLocation ( range, index ) {\n\t\treturn { line: range.line, column: index - range.start };\n\t}\n\n\treturn function locate ( index ) {\n\t\tvar range = lineRanges[i];\n\n\t\tvar d = index >= range.end ? 1 : -1;\n\n\t\twhile ( range ) {\n\t\t\tif ( rangeContains( range, index ) ) return getLocation( range, index );\n\n\t\t\ti += d;\n\t\t\trange = lineRanges[i];\n\t\t}\n\t};\n}\n\nfunction encodeMappings ( original, intro, chunk, hires, sourcemapLocations, sourceIndex, offsets, names ) {\n\tvar rawLines = [];\n\n\tvar generatedCodeLine = intro.split( '\\n' ).length - 1;\n\tvar rawSegments = rawLines[ generatedCodeLine ] = [];\n\n\tvar generatedCodeColumn = 0;\n\n\tvar locate = getLocator( original );\n\n\tfunction addEdit ( content, original, loc, nameIndex, i ) {\n\t\tif ( i || content.length ) {\n\t\t\trawSegments.push({\n\t\t\t\tgeneratedCodeLine: generatedCodeLine,\n\t\t\t\tgeneratedCodeColumn: generatedCodeColumn,\n\t\t\t\tsourceCodeLine: loc.line,\n\t\t\t\tsourceCodeColumn: loc.column,\n\t\t\t\tsourceCodeName: nameIndex,\n\t\t\t\tsourceIndex: sourceIndex\n\t\t\t});\n\t\t}\n\n\t\tvar lines = content.split( '\\n' );\n\t\tvar lastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tgeneratedCodeLine += lines.length;\n\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\tgeneratedCodeColumn = lastLine.length;\n\t\t} else {\n\t\t\tgeneratedCodeColumn += lastLine.length;\n\t\t}\n\n\t\tlines = original.split( '\\n' );\n\t\tlastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tloc.line += lines.length;\n\t\t\tloc.column = lastLine.length;\n\t\t} else {\n\t\t\tloc.column += lastLine.length;\n\t\t}\n\t}\n\n\tfunction addUneditedChunk ( chunk, loc ) {\n\t\tvar originalCharIndex = chunk.start;\n\t\tvar first = true;\n\n\t\twhile ( originalCharIndex < chunk.end ) {\n\t\t\tif ( hires || first || sourcemapLocations[ originalCharIndex ] ) {\n\t\t\t\trawSegments.push({\n\t\t\t\t\tgeneratedCodeLine: generatedCodeLine,\n\t\t\t\t\tgeneratedCodeColumn: generatedCodeColumn,\n\t\t\t\t\tsourceCodeLine: loc.line,\n\t\t\t\t\tsourceCodeColumn: loc.column,\n\t\t\t\t\tsourceCodeName: -1,\n\t\t\t\t\tsourceIndex: sourceIndex\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ( original[ originalCharIndex ] === '\\n' ) {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tgeneratedCodeLine += 1;\n\t\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\t\tgeneratedCodeColumn = 0;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tgeneratedCodeColumn += 1;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t\tfirst = false;\n\t\t}\n\t}\n\n\twhile ( chunk ) {\n\t\tvar loc = locate( chunk.start );\n\n\t\tif ( chunk.intro.length ) {\n\t\t\taddEdit( chunk.intro, '', loc, -1, !!chunk.previous );\n\t\t}\n\n\t\tif ( chunk.edited ) {\n\t\t\taddEdit( chunk.content, chunk.original, loc, chunk.storeName ? names.indexOf( chunk.original ) : -1, !!chunk.previous );\n\t\t} else {\n\t\t\taddUneditedChunk( chunk, loc );\n\t\t}\n\n\t\tif ( chunk.outro.length ) {\n\t\t\taddEdit( chunk.outro, '', loc, -1, !!chunk.previous );\n\t\t}\n\n\t\tvar nextChunk = chunk.next;\n\t\tchunk = nextChunk;\n\t}\n\n\toffsets.sourceIndex = offsets.sourceIndex || 0;\n\toffsets.sourceCodeLine = offsets.sourceCodeLine || 0;\n\toffsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;\n\toffsets.sourceCodeName = offsets.sourceCodeName || 0;\n\n\tvar encoded = rawLines.map( function ( segments ) {\n\t\tvar generatedCodeColumn = 0;\n\n\t\treturn segments.map( function ( segment ) {\n\t\t\tvar arr = [\n\t\t\t\tsegment.generatedCodeColumn - generatedCodeColumn,\n\t\t\t\tsegment.sourceIndex - offsets.sourceIndex,\n\t\t\t\tsegment.sourceCodeLine - offsets.sourceCodeLine,\n\t\t\t\tsegment.sourceCodeColumn - offsets.sourceCodeColumn\n\t\t\t];\n\n\t\t\tgeneratedCodeColumn = segment.generatedCodeColumn;\n\t\t\toffsets.sourceIndex = segment.sourceIndex;\n\t\t\toffsets.sourceCodeLine = segment.sourceCodeLine;\n\t\t\toffsets.sourceCodeColumn = segment.sourceCodeColumn;\n\n\t\t\tif ( ~segment.sourceCodeName ) {\n\t\t\t\tarr.push( segment.sourceCodeName - offsets.sourceCodeName );\n\t\t\t\toffsets.sourceCodeName = segment.sourceCodeName;\n\t\t\t}\n\n\t\t\treturn encode( arr );\n\t\t}).join( ',' );\n\t}).join( ';' );\n\n\treturn encoded;\n}\n\nfunction getRelativePath ( from, to ) {\n\tvar fromParts = from.split( /[\\/\\\\]/ );\n\tvar toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tvar i = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n\nvar toString = Object.prototype.toString;\n\nfunction isObject ( thing ) {\n\treturn toString.call( thing ) === '[object Object]';\n}\n\nfunction MagicString ( string, options ) {\n\tif ( options === void 0 ) options = {};\n\n\tvar chunk = new Chunk( 0, string.length, string );\n\n\tObject.defineProperties( this, {\n\t\toriginal:              { writable: true, value: string },\n\t\toutro:                 { writable: true, value: '' },\n\t\tintro:                 { writable: true, value: '' },\n\t\tfirstChunk:            { writable: true, value: chunk },\n\t\tlastChunk:             { writable: true, value: chunk },\n\t\tlastSearchedChunk:     { writable: true, value: chunk },\n\t\tbyStart:               { writable: true, value: {} },\n\t\tbyEnd:                 { writable: true, value: {} },\n\t\tfilename:              { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\tstoredNames:           { writable: true, value: {} },\n\t\tindentStr:             { writable: true, value: guessIndent( string ) }\n\t});\n\n\tif ( false ) {}\n\n\tthis.byStart[ 0 ] = chunk;\n\tthis.byEnd[ string.length ] = chunk;\n}\n\nMagicString.prototype = {\n\taddSourcemapLocation: function addSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t},\n\n\tappend: function append ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t},\n\n\tclone: function clone () {\n\t\tvar cloned = new MagicString( this.original, { filename: this.filename });\n\n\t\tvar originalChunk = this.firstChunk;\n\t\tvar clonedChunk = cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone();\n\n\t\twhile ( originalChunk ) {\n\t\t\tcloned.byStart[ clonedChunk.start ] = clonedChunk;\n\t\t\tcloned.byEnd[ clonedChunk.end ] = clonedChunk;\n\n\t\t\tvar nextOriginalChunk = originalChunk.next;\n\t\t\tvar nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif ( nextClonedChunk ) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tcloned.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?\n\t\t\t\t[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :\n\t\t\t\tthis.indentExclusionRanges.map( function ( range ) { return [ range.start, range.end ]; } );\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( function ( loc ) {\n\t\t\tcloned.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn cloned;\n\t},\n\n\tgenerateMap: function generateMap ( options ) {\n\t\toptions = options || {};\n\n\t\tvar names = Object.keys( this.storedNames );\n\n\t\tif ( false ) {}\n\t\tvar map = new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames: names,\n\t\t\tmappings: this.getMappings( options.hires, 0, {}, names )\n\t\t});\n\t\tif ( false ) {}\n\n\t\treturn map;\n\t},\n\n\tgetIndentString: function getIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t},\n\n\tgetMappings: function getMappings ( hires, sourceIndex, offsets, names ) {\n\t\treturn encodeMappings( this.original, this.intro, this.firstChunk, hires, this.sourcemapLocations, sourceIndex, offsets, names );\n\t},\n\n\tindent: function indent ( indentStr, options ) {\n\t\tvar this$1 = this;\n\n\t\tvar pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( isObject( indentStr ) ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tvar isExcluded = {};\n\n\t\tif ( options.exclude ) {\n\t\t\tvar exclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\t\t\texclusions.forEach( function ( exclusion ) {\n\t\t\t\tfor ( var i = exclusion[0]; i < exclusion[1]; i += 1 ) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar shouldIndentNextCharacter = options.indentStart !== false;\n\t\tvar replacer = function ( match ) {\n\t\t\tif ( shouldIndentNextCharacter ) return (\"\" + indentStr + match);\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace( pattern, replacer );\n\n\t\tvar charIndex = 0;\n\n\t\tvar chunk = this.firstChunk;\n\n\t\twhile ( chunk ) {\n\t\t\tvar end = chunk.end;\n\n\t\t\tif ( chunk.edited ) {\n\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\tchunk.content = chunk.content.replace( pattern, replacer );\n\n\t\t\t\t\tif ( chunk.content.length ) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[ chunk.content.length - 1 ] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile ( charIndex < end ) {\n\t\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\t\tvar char = this$1.original[ charIndex ];\n\n\t\t\t\t\t\tif ( char === '\\n' ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if ( char !== '\\r' && shouldIndentNextCharacter ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif ( charIndex === chunk.start ) {\n\t\t\t\t\t\t\t\tchunk.prepend( indentStr );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar rhs = chunk.split( charIndex );\n\t\t\t\t\t\t\t\trhs.prepend( indentStr );\n\n\t\t\t\t\t\t\t\tthis$1.byStart[ charIndex ] = rhs;\n\t\t\t\t\t\t\t\tthis$1.byEnd[ charIndex ] = chunk;\n\n\t\t\t\t\t\t\t\tchunk = rhs;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace( pattern, replacer );\n\n\t\treturn this;\n\t},\n\n\tinsert: function insert () {\n\t\tthrow new Error( 'magicString.insert(...) is deprecated. Use insertRight(...) or insertLeft(...)' );\n\t},\n\n\tinsertLeft: function insertLeft ( index, content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'inserted content must be a string' );\n\n\t\tif ( false ) {}\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byEnd[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.append( content );\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\n\t\tif ( false ) {}\n\t\treturn this;\n\t},\n\n\tinsertRight: function insertRight ( index, content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'inserted content must be a string' );\n\n\t\tif ( false ) {}\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byStart[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.prepend( content );\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\n\t\tif ( false ) {}\n\t\treturn this;\n\t},\n\n\tmove: function move ( start, end, index ) {\n\t\tif ( index >= start && index <= end ) throw new Error( 'Cannot move a selection inside itself' );\n\n\t\tif ( false ) {}\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\t\tthis._split( index );\n\n\t\tvar first = this.byStart[ start ];\n\t\tvar last = this.byEnd[ end ];\n\n\t\tvar oldLeft = first.previous;\n\t\tvar oldRight = last.next;\n\n\t\tvar newRight = this.byStart[ index ];\n\t\tif ( !newRight && last === this.lastChunk ) return this;\n\t\tvar newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif ( oldLeft ) oldLeft.next = oldRight;\n\t\tif ( oldRight ) oldRight.previous = oldLeft;\n\n\t\tif ( newLeft ) newLeft.next = first;\n\t\tif ( newRight ) newRight.previous = last;\n\n\t\tif ( !first.previous ) this.firstChunk = last.next;\n\t\tif ( !last.next ) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight;\n\n\t\tif ( !newLeft ) this.firstChunk = first;\n\t\tif ( !newRight ) this.lastChunk = last;\n\n\t\tif ( false ) {}\n\t\treturn this;\n\t},\n\n\toverwrite: function overwrite ( start, end, content, storeName ) {\n\t\tvar this$1 = this;\n\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'replacement content must be a string' );\n\n\t\twhile ( start < 0 ) start += this$1.original.length;\n\t\twhile ( end < 0 ) end += this$1.original.length;\n\n\t\tif ( end > this.original.length ) throw new Error( 'end is out of bounds' );\n\t\tif ( start === end ) throw new Error( 'Cannot overwrite a zero-length range – use insertLeft or insertRight instead' );\n\n\t\tif ( false ) {}\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\n\t\tif ( storeName ) {\n\t\t\tvar original = this.original.slice( start, end );\n\t\t\tthis.storedNames[ original ] = true;\n\t\t}\n\n\t\tvar first = this.byStart[ start ];\n\t\tvar last = this.byEnd[ end ];\n\n\t\tif ( first ) {\n\t\t\tfirst.edit( content, storeName );\n\n\t\t\tif ( first !== last ) {\n\t\t\t\tfirst.outro = '';\n\n\t\t\t\tvar chunk = first.next;\n\t\t\t\twhile ( chunk !== last ) {\n\t\t\t\t\tchunk.edit( '', false );\n\t\t\t\t\tchunk.intro = chunk.outro = '';\n\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tchunk.edit( '', false );\n\t\t\t\tchunk.intro = '';\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\t// must be inserting at the end\n\t\t\tvar newChunk = new Chunk( start, end, '' ).edit( content, storeName );\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\n\t\tif ( false ) {}\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t},\n\n\tremove: function remove ( start, end ) {\n\t\tvar this$1 = this;\n\n\t\twhile ( start < 0 ) start += this$1.original.length;\n\t\twhile ( end < 0 ) end += this$1.original.length;\n\n\t\tif ( start === end ) return this;\n\n\t\tif ( start < 0 || end > this.original.length ) throw new Error( 'Character is out of bounds' );\n\t\tif ( start > end ) throw new Error( 'end must be greater than start' );\n\n\t\treturn this.overwrite( start, end, '', false );\n\t},\n\n\tslice: function slice ( start, end ) {\n\t\tvar this$1 = this;\n\t\tif ( start === void 0 ) start = 0;\n\t\tif ( end === void 0 ) end = this.original.length;\n\n\t\twhile ( start < 0 ) start += this$1.original.length;\n\t\twhile ( end < 0 ) end += this$1.original.length;\n\n\t\tvar result = '';\n\n\t\t// find start chunk\n\t\tvar chunk = this.firstChunk;\n\t\twhile ( chunk && ( chunk.start > start || chunk.end <= start ) ) {\n\n\t\t\t// found end chunk before start\n\t\t\tif ( chunk.start < end && chunk.end >= end ) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif ( chunk && chunk.edited && chunk.start !== start ) throw new Error((\"Cannot use replaced character \" + start + \" as slice start anchor.\"));\n\n\t\tvar startChunk = chunk;\n\t\twhile ( chunk ) {\n\t\t\tif ( chunk.intro && ( startChunk !== chunk || chunk.start === start ) ) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tvar containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif ( containsEnd && chunk.edited && chunk.end !== end ) throw new Error((\"Cannot use replaced character \" + end + \" as slice end anchor.\"));\n\n\t\t\tvar sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tvar sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice( sliceStart, sliceEnd );\n\n\t\t\tif ( chunk.outro && ( !containsEnd || chunk.end === end ) ) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif ( containsEnd ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t// TODO deprecate this? not really very useful\n\tsnip: function snip ( start, end ) {\n\t\tvar clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t},\n\n\t_split: function _split ( index ) {\n\t\tvar this$1 = this;\n\n\t\tif ( this.byStart[ index ] || this.byEnd[ index ] ) return;\n\n\t\tif ( false ) {}\n\n\t\tvar chunk = this.lastSearchedChunk;\n\t\tvar searchForward = index > chunk.end;\n\n\t\twhile ( true ) {\n\t\t\tif ( chunk.contains( index ) ) return this$1._splitChunk( chunk, index );\n\n\t\t\tchunk = searchForward ?\n\t\t\t\tthis$1.byStart[ chunk.end ] :\n\t\t\t\tthis$1.byEnd[ chunk.start ];\n\t\t}\n\t},\n\n\t_splitChunk: function _splitChunk ( chunk, index ) {\n\t\tif ( chunk.edited && chunk.content.length ) { // zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tvar loc = getLocator( this.original )( index );\n\t\t\tthrow new Error( (\"Cannot split a chunk that has already been edited (\" + (loc.line) + \":\" + (loc.column) + \" – \\\"\" + (chunk.original) + \"\\\")\") );\n\t\t}\n\n\t\tvar newChunk = chunk.split( index );\n\n\t\tthis.byEnd[ index ] = chunk;\n\t\tthis.byStart[ index ] = newChunk;\n\t\tthis.byEnd[ newChunk.end ] = newChunk;\n\n\t\tif ( chunk === this.lastChunk ) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\tif ( false ) {}\n\t\treturn true;\n\t},\n\n\ttoString: function toString () {\n\t\tvar str = this.intro;\n\n\t\tvar chunk = this.firstChunk;\n\t\twhile ( chunk ) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t},\n\n\ttrimLines: function trimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim: function trim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimEnd: function trimEnd ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) return this;\n\n\t\tvar chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tvar end = chunk.end;\n\t\t\tvar aborted = chunk.trimEnd( rx );\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif ( chunk.end !== end ) {\n\t\t\t\tthis$1.lastChunk = chunk.next;\n\n\t\t\t\tthis$1.byEnd[ chunk.end ] = chunk;\n\t\t\t\tthis$1.byStart[ chunk.next.start ] = chunk.next;\n\t\t\t}\n\n\t\t\tif ( aborted ) return this$1;\n\t\t\tchunk = chunk.previous;\n\t\t} while ( chunk );\n\n\t\treturn this;\n\t},\n\n\ttrimStart: function trimStart ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) return this;\n\n\t\tvar chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tvar end = chunk.end;\n\t\t\tvar aborted = chunk.trimStart( rx );\n\n\t\t\tif ( chunk.end !== end ) {\n\t\t\t\t// special case...\n\t\t\t\tif ( chunk === this$1.lastChunk ) this$1.lastChunk = chunk.next;\n\n\t\t\t\tthis$1.byEnd[ chunk.end ] = chunk;\n\t\t\t\tthis$1.byStart[ chunk.next.start ] = chunk.next;\n\t\t\t}\n\n\t\t\tif ( aborted ) return this$1;\n\t\t\tchunk = chunk.next;\n\t\t} while ( chunk );\n\n\t\treturn this;\n\t}\n};\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\n\nfunction Bundle ( options ) {\n\tif ( options === void 0 ) options = {};\n\n\tthis.intro = options.intro || '';\n\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\tthis.sources = [];\n\n\tthis.uniqueSources = [];\n\tthis.uniqueSourceIndexByFilename = {};\n}\n\nBundle.prototype = {\n\taddSource: function addSource ( source ) {\n\t\tif ( source instanceof MagicString ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( !isObject( source ) || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( function ( option ) {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) source[ option ] = source.content[ option ];\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tvar uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( (\"Illegal source: same filename (\" + (source.filename) + \"), different contents\") );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t},\n\n\tappend: function append ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t},\n\n\tclone: function clone () {\n\t\tvar bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( function ( source ) {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t},\n\n\tgenerateMap: function generateMap ( options ) {\n\t\tvar this$1 = this;\n\n\t\tvar offsets = {};\n\n\t\tvar names = [];\n\t\tthis.sources.forEach( function ( source ) {\n\t\t\tObject.keys( source.content.storedNames ).forEach( function ( name ) {\n\t\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t\t});\n\t\t});\n\n\t\tvar encoded = (\n\t\t\tgetSemis( this.intro ) +\n\t\t\tthis.sources.map( function ( source, i ) {\n\t\t\t\tvar prefix = ( i > 0 ) ? ( getSemis( source.separator ) || ',' ) : '';\n\t\t\t\tvar mappings;\n\n\t\t\t\t// we don't bother encoding sources without a filename\n\t\t\t\tif ( !source.filename ) {\n\t\t\t\t\tmappings = getSemis( source.content.toString() );\n\t\t\t\t} else {\n\t\t\t\t\tvar sourceIndex = this$1.uniqueSourceIndexByFilename[ source.filename ];\n\t\t\t\t\tmappings = source.content.getMappings( options.hires, sourceIndex, offsets, names );\n\t\t\t\t}\n\n\t\t\t\treturn prefix + mappings;\n\t\t\t}).join( '' )\n\t\t);\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( function ( source ) {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( function ( source ) {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames: names,\n\t\t\tmappings: encoded\n\t\t});\n\t},\n\n\tgetIndentString: function getIndentString () {\n\t\tvar indentStringCounts = {};\n\n\t\tthis.sources.forEach( function ( source ) {\n\t\t\tvar indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) return;\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( function ( a, b ) {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t},\n\n\tindent: function indent ( indentStr ) {\n\t\tvar this$1 = this;\n\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\tvar trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart: indentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\t// TODO this is a very slow way to determine this\n\t\t\ttrailingNewline = source.content.toString().slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, function ( match, index ) {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t},\n\n\ttoString: function toString () {\n\t\tvar this$1 = this;\n\n\t\tvar body = this.sources.map( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body;\n\t},\n\n\ttrimLines: function trimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim: function trim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimStart: function trimStart ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tvar source;\n\t\t\tvar i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this$1.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart( charType );\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttrimEnd: function trimEnd ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tvar source;\n\t\tvar i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this$1.sources[i];\n\n\t\t\tif ( !source ) {\n\t\t\t\tthis$1.intro = this$1.intro.replace( rx, '' );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsource.content.trimEnd( charType );\n\t\t\ti -= 1;\n\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\n\t\treturn this;\n\t}\n};\n\nfunction getSemis ( str ) {\n\treturn new Array( str.split( '\\n' ).length ).join( ';' );\n}\n\nMagicString.Bundle = Bundle;\n\nexport default MagicString;\n//# sourceMappingURL=magic-string.es6.js.map","export default {\n\tProgram: [ 'body' ],\n\tLiteral: []\n};\n","import wrap from './wrap.js';\nimport keys from './keys.js';\n\n// used for debugging, without the noise created by\n// circular references\nfunction toJSON ( node ) {\n\tvar obj = {};\n\n\tObject.keys( node ).forEach( key => {\n\t\tif ( key === 'parent' || key === 'program' || key === 'keys' || key === '__wrapped' ) return;\n\n\t\tif ( Array.isArray( node[ key ] ) ) {\n\t\t\tobj[ key ] = node[ key ].map( toJSON );\n\t\t} else if ( node[ key ] && node[ key ].toJSON ) {\n\t\t\tobj[ key ] = node[ key ].toJSON();\n\t\t} else {\n\t\t\tobj[ key ] = node[ key ];\n\t\t}\n\t});\n\n\treturn obj;\n}\n\nexport default class Node {\n\tconstructor ( raw, parent ) {\n\t\traw.parent = parent;\n\t\traw.program = parent.program || parent;\n\t\traw.depth = parent.depth + 1;\n\t\traw.keys = keys[ raw.type ];\n\t\traw.indentation = undefined;\n\n\t\tfor ( const key of keys[ raw.type ] ) {\n\t\t\twrap( raw[ key ], raw );\n\t\t}\n\n\t\traw.program.magicString.addSourcemapLocation( raw.start );\n\t\traw.program.magicString.addSourcemapLocation( raw.end );\n\t}\n\n\tancestor ( level ) {\n\t\tlet node = this;\n\t\twhile ( level-- ) {\n\t\t\tnode = node.parent;\n\t\t\tif ( !node ) return null;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tcontains ( node ) {\n\t\twhile ( node ) {\n\t\t\tif ( node === this ) return true;\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfindLexicalBoundary () {\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindNearest ( type ) {\n\t\tif ( typeof type === 'string' ) type = new RegExp( `^${type}$` );\n\t\tif ( type.test( this.type ) ) return this;\n\t\treturn this.parent.findNearest( type );\n\t}\n\n\tfindScope ( functionScope ) {\n\t\treturn this.parent.findScope( functionScope );\n\t}\n\n\tgetIndentation () {\n\t\treturn this.parent.getIndentation();\n\t}\n\n\tinitialise ( transforms ) {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\tvalue.forEach( node => node && node.initialise( transforms ) );\n\t\t\t} else if ( value && typeof value === 'object' ) {\n\t\t\t\tvalue.initialise( transforms );\n\t\t\t}\n\t\t}\n\t}\n\n\ttoJSON () {\n\t\treturn toJSON( this );\n\t}\n\n\ttoString () {\n\t\treturn this.program.magicString.original.slice( this.start, this.end );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tfor ( const key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\tvalue.forEach( node => node && node.transpile( code, transforms ) );\n\t\t\t} else if ( value && typeof value === 'object' ) {\n\t\t\t\tvalue.transpile( code, transforms );\n\t\t\t}\n\t\t}\n\t}\n}\n","export function isArguments ( node ) {\n\treturn node.type === 'Identifier' && node.name === 'arguments';\n}\n\nexport default function spread ( code, elements, start, argumentsArrayAlias ) {\n\tlet i = elements.length;\n\tlet firstSpreadIndex = -1;\n\n\twhile ( i-- ) {\n\t\tconst element = elements[i];\n\t\tif ( element && element.type === 'SpreadElement' ) {\n\t\t\tif ( isArguments( element.argument ) ) {\n\t\t\t\tcode.overwrite( element.argument.start, element.argument.end, argumentsArrayAlias );\n\t\t\t}\n\n\t\t\tfirstSpreadIndex = i;\n\t\t}\n\t}\n\n\tif ( firstSpreadIndex === -1 ) return false; // false indicates no spread elements\n\n\tlet element = elements[ firstSpreadIndex ];\n\tconst previousElement = elements[ firstSpreadIndex - 1 ];\n\n\tif ( !previousElement ) {\n\t\tcode.remove( start, element.start );\n\t\tcode.overwrite( element.end, elements[1].start, '.concat( ' );\n\t} else {\n\t\tcode.overwrite( previousElement.end, element.start, ' ].concat( ' );\n\t}\n\n\tfor ( i = firstSpreadIndex; i < elements.length; i += 1 ) {\n\t\telement = elements[i];\n\n\t\tif ( element ) {\n\t\t\tif ( element.type === 'SpreadElement' ) {\n\t\t\t\tcode.remove( element.start, element.argument.start );\n\t\t\t} else {\n\t\t\t\tcode.insertRight( element.start, '[' );\n\t\t\t\tcode.insertLeft( element.end, ']' );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true; // true indicates some spread elements\n}\n","import Node from '../Node.js';\nimport spread, { isArguments } from '../../utils/spread.js';\n\nexport default class ArrayExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.spreadRest && this.elements.length ) {\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\n\t\t\tlet i = this.elements.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tconst element = this.elements[i];\n\t\t\t\tif ( element && element.type === 'SpreadElement' && isArguments( element.argument ) ) {\n\t\t\t\t\tthis.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.spreadRest ) {\n\t\t\tif ( this.elements.length === 1 ) {\n\t\t\t\tconst element = this.elements[0];\n\n\t\t\t\tif ( element && element.type === 'SpreadElement' ) {\n\t\t\t\t\t// special case – [ ...arguments ]\n\t\t\t\t\tif ( isArguments( element.argument ) ) {\n\t\t\t\t\t\tcode.overwrite( this.start, this.end, `[].concat( ${this.argumentsArrayAlias} )` ); // TODO if this is the only use of argsArray, don't bother concating\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.overwrite( this.start, element.argument.start, '[].concat( ' );\n\t\t\t\t\t\tcode.overwrite( element.end, this.end, ' )' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tconst hasSpreadElements = spread( code, this.elements, this.start, this.argumentsArrayAlias );\n\n\t\t\t\tif ( hasSpreadElements ) {\n\t\t\t\t\tcode.overwrite( this.end - 1, this.end, ')' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ArrowFunctionExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.body.createScope();\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.arrow ) {\n\t\t\t// remove arrow\n\t\t\tlet charIndex = this.body.start;\n\t\t\twhile ( code.original[ charIndex ] !== '=' ) {\n\t\t\t\tcharIndex -= 1;\n\t\t\t}\n\t\t\tcode.remove( charIndex, this.body.start );\n\n\t\t\t// wrap naked parameter\n\t\t\tif ( this.params.length === 1 && this.start === this.params[0].start ) {\n\t\t\t\tcode.insertRight( this.params[0].start, '(' );\n\t\t\t\tcode.insertLeft( this.params[0].end, ')' );\n\t\t\t}\n\n\t\t\t// add function\n\t\t\tcode.insertRight( this.start, 'function ' );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","export default function locate ( source, index ) {\n\tvar lines = source.split( '\\n' );\n\tvar len = lines.length;\n\n\tvar lineStart = 0;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tvar line = lines[i];\n\t\tvar lineEnd =  lineStart + line.length + 1; // +1 for newline\n\n\t\tif ( lineEnd > index ) {\n\t\t\treturn { line: i + 1, column: index - lineStart, char: i };\n\t\t}\n\n\t\tlineStart = lineEnd;\n\t}\n\n\tthrow new Error( 'Could not determine location of character' );\n}\n","function pad ( num, len ) {\n\tlet result = String( num );\n\treturn result + repeat( ' ', len - result.length );\n}\n\nfunction repeat ( str, times ) {\n\tlet result = '';\n\twhile ( times-- ) result += str;\n\treturn result;\n}\n\nexport default function getSnippet ( source, loc, length = 1 ) {\n\tconst first = Math.max( loc.line - 5, 0 );\n\tconst last = loc.line;\n\n\tconst numDigits = String( last ).length;\n\n\tconst lines = source.split( '\\n' ).slice( first, last );\n\n\tconst lastLine = lines[ lines.length - 1 ];\n\tconst offset = lastLine.slice( 0, loc.column ).replace( /\\t/g, '  ' ).length;\n\n\tlet snippet = lines\n\t\t.map( ( line, i ) => `${pad( i + first + 1, numDigits )} : ${line.replace( /\\t/g, '  ')}` )\n\t\t.join( '\\n' );\n\n\tsnippet += '\\n' + repeat( ' ', numDigits + 3 + offset ) + repeat( '^', length );\n\n\treturn snippet;\n}\n","import locate from './locate.js';\nimport getSnippet from './getSnippet.js';\n\nexport default class CompileError extends Error {\n\tconstructor ( node, message ) {\n\t\tsuper();\n\n\t\tconst source = node.program.magicString.original;\n\t\tconst loc = locate( source, node.start );\n\n\t\tthis.name = 'CompileError';\n\t\tthis.message = message + ` (${loc.line}:${loc.column})`;\n\n\t\tthis.stack = new Error().stack.replace( new RegExp( `.+new ${this.name}.+\\\\n`, 'm' ), '' );\n\n\t\tthis.loc = loc;\n\t\tthis.snippet = getSnippet( source, loc, node.end - node.start );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class AssignmentExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.left.type === 'Identifier' ) {\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.left.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this.left, `${this.left.name} is read-only` );\n\t\t\t}\n\n\t\t\t// special case – https://gitlab.com/Rich-Harris/buble/issues/11\n\t\t\tconst statement = declaration && declaration.node.ancestor( 3 );\n\t\t\tif ( statement && statement.type === 'ForStatement' && statement.body.contains( this ) ) {\n\t\t\t\tstatement.reassigned[ this.left.name ] = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( /Pattern/.test( this.left.type ) ) {\n\t\t\tthrow new CompileError( this.left, 'Destructuring assignments are not currently supported. Coming soon!' );\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.operator === '**=' && transforms.exponentiation ) {\n\t\t\tconst scope = this.findScope( false );\n\t\t\tconst getAlias = name => {\n\t\t\t\tconst declaration = scope.findDeclaration( name );\n\t\t\t\treturn declaration ? declaration.name : name;\n\t\t\t};\n\n\t\t\t// first, the easy part – `**=` -> `=`\n\t\t\tlet charIndex = this.left.end;\n\t\t\twhile ( code.original[ charIndex ] !== '*' ) charIndex += 1;\n\t\t\tcode.remove( charIndex, charIndex + 2 );\n\n\t\t\t// how we do the next part depends on a number of factors – whether\n\t\t\t// this is a top-level statement, and whether we're updating a\n\t\t\t// simple or complex reference\n\t\t\tlet base;\n\n\t\t\tlet left = this.left;\n\t\t\twhile ( left.type === 'ParenthesizedExpression' ) left = left.expression;\n\n\t\t\tif ( left.type === 'Identifier' ) {\n\t\t\t\tbase = getAlias( left.name );\n\t\t\t} else if ( left.type === 'MemberExpression' ) {\n\t\t\t\tlet object;\n\t\t\t\tlet needsObjectVar = false;\n\t\t\t\tlet property;\n\t\t\t\tlet needsPropertyVar = false;\n\n\t\t\t\tconst statement = this.findNearest( /(?:Statement|Declaration)$/ );\n\t\t\t\tconst i0 = statement.getIndentation();\n\n\t\t\t\tif ( left.property.type === 'Identifier' ) {\n\t\t\t\t\tproperty = left.computed ? getAlias( left.property.name ) : left.property.name;\n\t\t\t\t} else {\n\t\t\t\t\tproperty = scope.createIdentifier( 'property' );\n\t\t\t\t\tneedsPropertyVar = true;\n\t\t\t\t}\n\n\t\t\t\tif ( left.object.type === 'Identifier' ) {\n\t\t\t\t\tobject = getAlias( left.object.name );\n\t\t\t\t} else {\n\t\t\t\t\tobject = scope.createIdentifier( 'object' );\n\t\t\t\t\tneedsObjectVar = true;\n\t\t\t\t}\n\n\t\t\t\tif ( left.start === statement.start ) {\n\t\t\t\t\tif ( needsObjectVar && needsPropertyVar ) {\n\t\t\t\t\t\tcode.insertRight( statement.start, `var ${object} = ` );\n\t\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `;\\n${i0}var ${property} = ` );\n\t\t\t\t\t\tcode.overwrite( left.property.end, left.end, `;\\n${i0}${object}[${property}]` );\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ( needsObjectVar ) {\n\t\t\t\t\t\tcode.insertRight( statement.start, `var ${object} = ` );\n\t\t\t\t\t\tcode.insertLeft( left.object.end, `;\\n${i0}` );\n\t\t\t\t\t\tcode.insertLeft( left.object.end, object );\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ( needsPropertyVar ) {\n\t\t\t\t\t\tcode.insertRight( left.property.start, `var ${property} = ` );\n\t\t\t\t\t\tcode.insertLeft( left.property.end, `;\\n${i0}` );\n\t\t\t\t\t\tcode.move( left.property.start, left.property.end, this.start );\n\n\t\t\t\t\t\tcode.insertLeft( left.object.end, `[${property}]` );\n\t\t\t\t\t\tcode.remove( left.object.end, left.property.start );\n\t\t\t\t\t\tcode.remove( left.property.end, left.end );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tlet declarators = [];\n\t\t\t\t\tif ( needsObjectVar ) declarators.push( object );\n\t\t\t\t\tif ( needsPropertyVar ) declarators.push( property );\n\t\t\t\t\tcode.insertRight( statement.start, `var ${declarators.join( ', ' )};\\n${i0}` );\n\n\t\t\t\t\tif ( needsObjectVar && needsPropertyVar ) {\n\t\t\t\t\t\tcode.insertRight( left.start, `( ${object} = ` );\n\t\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `, ${property} = ` );\n\t\t\t\t\t\tcode.overwrite( left.property.end, left.end, `, ${object}[${property}]` );\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ( needsObjectVar ) {\n\t\t\t\t\t\tcode.insertRight( left.start, `( ${object} = ` );\n\t\t\t\t\t\tcode.insertLeft( left.object.end, `, ${object}` );\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ( needsPropertyVar ) {\n\t\t\t\t\t\tcode.insertRight( left.property.start, `( ${property} = ` );\n\t\t\t\t\t\tcode.insertLeft( left.property.end, `, ` );\n\t\t\t\t\t\tcode.move( left.property.start, left.property.end, left.start );\n\n\t\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `[${property}]` );\n\t\t\t\t\t\tcode.remove( left.property.end, left.end );\n\t\t\t\t\t}\n\n\t\t\t\t\tcode.insertLeft( this.end, ` )` );\n\t\t\t\t}\n\n\t\t\t\tbase = object + ( left.computed || needsPropertyVar ? `[${property}]` : `.${property}` );\n\t\t\t}\n\n\t\t\tcode.insertRight( this.right.start, `Math.pow( ${base}, ` );\n\t\t\tcode.insertLeft( this.right.end, ` )` );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class BinaryExpression extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( this.operator === '**' && transforms.exponentiation ) {\n\t\t\tcode.insertRight( this.start, `Math.pow( ` );\n\t\t\tcode.overwrite( this.left.end, this.right.start, `, ` );\n\t\t\tcode.insertLeft( this.end, ` )` );\n\t\t}\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class BreakStatement extends Node {\n\tinitialise ( transforms ) {\n\t\tconst loop = this.findNearest( /(?:For(?:In)?|While)Statement/ );\n\t\tconst switchCase = this.findNearest( 'SwitchCase' );\n\n\t\tif ( loop && ( !switchCase || loop.depth > switchCase.depth ) ) {\n\t\t\tloop.canBreak = true;\n\t\t\tthis.loop = loop;\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.loop && this.loop.shouldRewriteAsFunction ) {\n\t\t\tif ( this.label ) throw new CompileError( this, 'Labels are not currently supported in a loop with locally-scoped variables' );\n\t\t\tcode.overwrite( this.start, this.start + 5, `return 'break'` );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport spread, { isArguments } from '../../utils/spread.js';\n\nexport default class CallExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.spreadRest && this.arguments.length > 1 ) {\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\n\t\t\tlet i = this.arguments.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tconst arg = this.arguments[i];\n\t\t\t\tif ( arg.type === 'SpreadElement' && isArguments( arg.argument ) ) {\n\t\t\t\t\tthis.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.spreadRest && this.arguments.length ) {\n\t\t\tlet hasSpreadElements = false;\n\t\t\tlet context;\n\n\t\t\tconst firstArgument = this.arguments[0];\n\n\t\t\tif ( this.arguments.length === 1 ) {\n\t\t\t\tif ( firstArgument.type === 'SpreadElement' ) {\n\t\t\t\t\tcode.remove( firstArgument.start, firstArgument.argument.start );\n\t\t\t\t\thasSpreadElements = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thasSpreadElements = spread( code, this.arguments, firstArgument.start, this.argumentsArrayAlias );\n\t\t\t}\n\n\t\t\tif ( hasSpreadElements ) {\n\t\t\t\tif ( this.callee.type === 'MemberExpression' ) {\n\t\t\t\t\tif ( this.callee.object.type === 'Identifier' ) {\n\t\t\t\t\t\tcontext = this.callee.object.name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst statement = this.callee.object;\n\t\t\t\t\t\tconst i0 = statement.getIndentation();\n\t\t\t\t\t\tcontext = this.findScope( true ).createIdentifier( 'ref' );\n\t\t\t\t\t\tcode.insertRight( statement.start, `var ${context} = ` );\n\t\t\t\t\t\tcode.insertLeft( statement.end, `;\\n${i0}${context}` );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext = 'void 0';\n\t\t\t\t}\n\n\t\t\t\tif ( this.arguments.length === 1 ) {\n\t\t\t\t\tcode.insertRight( firstArgument.start, `${context}, ` );\n\t\t\t\t\tcode.insertLeft( this.callee.end, '.apply' );\n\t\t\t\t} else {\n\t\t\t\t\tif ( firstArgument.type === 'SpreadElement' ) {\n\t\t\t\t\t\tcode.insertRight( firstArgument.start, `${context}, ` );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.insertRight( firstArgument.start, `${context}, [ ` );\n\t\t\t\t\t}\n\n\t\t\t\t\tcode.insertLeft( this.arguments[ this.arguments.length - 1 ].end, ' )' );\n\t\t\t\t\tcode.insertLeft( this.callee.end, '.apply' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","export function findIndex ( array, fn ) {\n\tfor ( let i = 0; i < array.length; i += 1 ) {\n\t\tif ( fn( array[i], i ) ) return i;\n\t}\n\n\treturn -1;\n}\n\nexport function find ( array, fn ) {\n\treturn array[ findIndex( array, fn ) ];\n}\n","import Node from '../Node.js';\nimport { findIndex } from '../../utils/array.js';\n\n// TODO this code is pretty wild, tidy it up\nexport default class ClassBody extends Node {\n\ttranspile ( code, transforms, inFunctionExpression, superName ) {\n\t\tif ( transforms.classes ) {\n\t\t\tconst name = this.parent.name;\n\n\t\t\tconst indentStr = code.getIndentString();\n\t\t\tconst i0 = this.getIndentation() + ( inFunctionExpression ? indentStr : '' );\n\t\t\tconst i1 = i0 + indentStr;\n\n\t\t\tconst constructorIndex = findIndex( this.body, node => node.kind === 'constructor' );\n\t\t\tconst constructor = this.body[ constructorIndex ];\n\n\t\t\tlet introBlock = '';\n\t\t\tlet outroBlock = '';\n\n\t\t\tif ( this.body.length ) {\n\t\t\t\tcode.remove( this.start, this.body[0].start );\n\t\t\t\tcode.remove( this.body[ this.body.length - 1 ].end, this.end );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t}\n\n\t\t\tif ( constructor ) {\n\t\t\t\tconstructor.value.body.isConstructorBody = true;\n\n\t\t\t\tconst previousMethod = this.body[ constructorIndex - 1 ];\n\t\t\t\tconst nextMethod = this.body[ constructorIndex + 1 ];\n\n\t\t\t\t// ensure constructor is first\n\t\t\t\tif ( constructorIndex > 0 ) {\n\t\t\t\t\tcode.remove( previousMethod.end, constructor.start );\n\t\t\t\t\tcode.move( constructor.start, nextMethod ? nextMethod.start : this.end - 1, this.body[0].start );\n\t\t\t\t}\n\n\t\t\t\tif ( !inFunctionExpression ) code.insertLeft( constructor.end, ';' );\n\t\t\t}\n\n\t\t\tif ( this.parent.superClass ) {\n\t\t\t\tlet inheritanceBlock = `if ( ${superName} ) ${name}.__proto__ = ${superName};\\n${i0}${name}.prototype = Object.create( ${superName} && ${superName}.prototype );\\n${i0}${name}.prototype.constructor = ${name};`;\n\n\t\t\t\tif ( constructor ) {\n\t\t\t\t\tintroBlock += `\\n\\n${i0}` + inheritanceBlock;\n\t\t\t\t} else {\n\t\t\t\t\tconst fn = `function ${name} () {` + ( superName ?\n\t\t\t\t\t\t`\\n${i1}${superName}.apply(this, arguments);\\n${i0}}` :\n\t\t\t\t\t\t`}` ) + ( inFunctionExpression ? '' : ';' ) + ( this.body.length ? `\\n\\n${i0}` : '' );\n\n\t\t\t\t\tinheritanceBlock = fn + inheritanceBlock;\n\t\t\t\t\tintroBlock += inheritanceBlock + `\\n\\n${i0}`;\n\t\t\t\t}\n\t\t\t} else if ( !constructor ) {\n\t\t\t\tlet fn = `function ${name} () {}`;\n\t\t\t\tif ( this.parent.type === 'ClassDeclaration' ) fn += ';';\n\t\t\t\tif ( this.body.length ) fn += `\\n\\n${i0}`;\n\n\t\t\t\tintroBlock += fn;\n\t\t\t}\n\n\t\t\tconst scope = this.findScope( false );\n\n\t\t\tlet prototypeGettersAndSetters = [];\n\t\t\tlet staticGettersAndSetters = [];\n\t\t\tlet prototypeAccessors;\n\t\t\tlet staticAccessors;\n\n\t\t\tthis.body.forEach( ( method, i ) => {\n\t\t\t\tif ( method.kind === 'constructor' ) {\n\t\t\t\t\tcode.overwrite( method.key.start, method.key.end, `function ${name}` );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( method.static ) code.remove( method.start, method.start + 7 );\n\n\t\t\t\tconst isAccessor = method.kind !== 'method';\n\t\t\t\tlet lhs;\n\n\t\t\t\tif ( isAccessor ) {\n\t\t\t\t\tcode.remove( method.start, method.key.end );\n\n\t\t\t\t\tif ( method.static ) {\n\t\t\t\t\t\tif ( !~staticGettersAndSetters.indexOf( method.key.name ) ) staticGettersAndSetters.push( method.key.name );\n\t\t\t\t\t\tif ( !staticAccessors ) staticAccessors = scope.createIdentifier( 'staticAccessors' );\n\n\t\t\t\t\t\tlhs = `${staticAccessors}.${method.key.name}.${method.kind}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( !~prototypeGettersAndSetters.indexOf( method.key.name ) ) prototypeGettersAndSetters.push( method.key.name );\n\t\t\t\t\t\tif ( !prototypeAccessors ) prototypeAccessors = scope.createIdentifier( 'prototypeAccessors' );\n\n\t\t\t\t\t\tlhs = `${prototypeAccessors}.${method.key.name}.${method.kind}`;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlhs = method.static ?\n\t\t\t\t\t\t`${name}.${method.key.name}` :\n\t\t\t\t\t\t`${name}.prototype.${method.key.name}`;\n\t\t\t\t}\n\n\t\t\t\tconst insertNewlines = ( constructorIndex > 0 && i === constructorIndex + 1 ) ||\n\t\t\t\t                       ( i === 0 && constructorIndex === this.body.length - 1 );\n\n\t\t\t\tif ( insertNewlines ) lhs = `\\n\\n${i0}${lhs}`;\n\n\t\t\t\tcode.insertRight( method.start, `${lhs} = function` + ( method.value.generator ? '*' : '' ) + ( isAccessor ? '' : ' ' ) );\n\t\t\t\tcode.insertLeft( method.end, ';' );\n\n\t\t\t\tif ( method.value.generator ) code.remove( method.start, method.key.start );\n\n\t\t\t\t// prevent function name shadowing an existing declaration\n\t\t\t\tif ( scope.contains( method.key.name ) ) {\n\t\t\t\t\tcode.overwrite( method.key.start, method.key.end, scope.createIdentifier( method.key.name ), true );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif ( prototypeGettersAndSetters.length || staticGettersAndSetters.length ) {\n\t\t\t\tlet intro = [];\n\t\t\t\tlet outro = [];\n\n\t\t\t\tif ( prototypeGettersAndSetters.length ) {\n\t\t\t\t\tintro.push( `var ${prototypeAccessors} = { ${prototypeGettersAndSetters.map( name => `${name}: {}` ).join( ',' )} };` );\n\t\t\t\t\toutro.push( `Object.defineProperties( ${name}.prototype, ${prototypeAccessors} );` );\n\t\t\t\t}\n\n\t\t\t\tif ( staticGettersAndSetters.length ) {\n\t\t\t\t\tintro.push( `var ${staticAccessors} = { ${staticGettersAndSetters.map( name => `${name}: {}` ).join( ',' )} };` );\n\t\t\t\t\toutro.push( `Object.defineProperties( ${name}, ${staticAccessors} );` );\n\t\t\t\t}\n\n\t\t\t\tif ( constructor ) introBlock += `\\n\\n${i0}`;\n\t\t\t\tintroBlock += intro.join( `\\n${i0}` );\n\t\t\t\tif ( !constructor ) introBlock += `\\n\\n${i0}`;\n\n\t\t\t\toutroBlock += `\\n\\n${i0}` + outro.join( `\\n${i0}` );\n\t\t\t}\n\n\t\t\tif ( constructor ) {\n\t\t\t\tcode.insertLeft( constructor.end, introBlock );\n\t\t\t} else {\n\t\t\t\tcode.insertRight( this.start, introBlock );\n\t\t\t}\n\n\t\t\tcode.insertLeft( this.end, outroBlock );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","// TODO this function is slightly flawed – it works on the original string,\n// not its current edited state.\n// That's not a problem for the way that it's currently used, but it could\n// be in future...\nexport default function deindent ( node, code ) {\n\tconst start = node.start;\n\tconst end = node.end;\n\n\tconst indentStr = code.getIndentString();\n\tconst pattern = new RegExp( indentStr + '\\\\S', 'g' );\n\n\tif ( code.original.slice( start - indentStr.length, start ) === indentStr ) {\n\t\tcode.remove( start - indentStr.length, start );\n\t}\n\n\tconst slice = code.original.slice( start, end );\n\tlet match;\n\twhile ( match = pattern.exec( slice ) ) {\n\t\tif ( !node.program.indentExclusions[ match.index ] ) code.remove( start + match.index, start + match.index + indentStr.length );\n\t}\n}\n","import Node from '../Node.js';\nimport deindent from '../../utils/deindent.js';\n\nexport default class ClassDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.name = this.id.name;\n\t\tthis.findScope( true ).addDeclaration( this.id, 'class' );\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.classes ) {\n\t\t\tif ( !this.superClass ) deindent( this.body, code );\n\n\t\t\tconst superName = this.superClass && ( this.superClass.name || 'superclass' );\n\n\t\t\tconst i0 = this.getIndentation();\n\t\t\tconst i1 = i0 + code.getIndentString();\n\n\t\t\t// if this is an export default statement, we have to move the export to\n\t\t\t// after the declaration, because `export default var Foo = ...` is illegal\n\t\t\tconst syntheticDefaultExport = this.parent.type === 'ExportDefaultDeclaration' ?\n\t\t\t\t`\\n\\n${i0}export default ${this.id.name};` :\n\t\t\t\t'';\n\n\t\t\tif ( syntheticDefaultExport ) code.remove( this.parent.start, this.start );\n\n\t\t\tcode.overwrite( this.start, this.id.start, 'var ' );\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tif ( this.superClass.end === this.body.start ) {\n\t\t\t\t\tcode.remove( this.id.end, this.superClass.start );\n\t\t\t\t\tcode.insertLeft( this.id.end, ` = (function (${superName}) {\\n${i1}` );\n\t\t\t\t} else {\n\t\t\t\t\tcode.overwrite( this.id.end, this.superClass.start, ' = ' );\n\t\t\t\t\tcode.overwrite( this.superClass.end, this.body.start, `(function (${superName}) {\\n${i1}` );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( this.id.end === this.body.start ) {\n\t\t\t\t\tcode.insertLeft( this.id.end, ' = ' );\n\t\t\t\t} else {\n\t\t\t\t\tcode.overwrite( this.id.end, this.body.start, ' = ' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.body.transpile( code, transforms, !!this.superClass, superName );\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tcode.insertLeft( this.end, `\\n\\n${i1}return ${this.name};\\n${i0}}(` );\n\t\t\t\tcode.move( this.superClass.start, this.superClass.end, this.end );\n\t\t\t\tcode.insertRight( this.end, `));${syntheticDefaultExport}` );\n\t\t\t} else if ( syntheticDefaultExport ) {\n\t\t\t\tcode.insertRight( this.end, syntheticDefaultExport );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tthis.body.transpile( code, transforms, false, null );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ClassExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.name = this.id ? this.id.name :\n\t\t            this.parent.type === 'VariableDeclarator' ? this.parent.id.name :\n\t\t            this.parent.type === 'AssignmentExpression' ? this.parent.left.name :\n\t\t            this.findScope( true ).createIdentifier( 'anonymous' );\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.classes ) {\n\t\t\tconst superName = this.superClass && ( this.superClass.name || 'superclass' );\n\n\t\t\tconst i0 = this.getIndentation();\n\t\t\tconst i1 = i0 + code.getIndentString();\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tcode.remove( this.start, this.superClass.start );\n\t\t\t\tcode.remove( this.superClass.end, this.body.start );\n\t\t\t\tcode.insertLeft( this.start, `(function (${superName}) {\\n${i1}` );\n\t\t\t} else {\n\t\t\t\tcode.overwrite( this.start, this.body.start, `(function () {\\n${i1}` );\n\t\t\t}\n\n\t\t\tthis.body.transpile( code, transforms, true, superName );\n\n\t\t\tconst outro = `\\n\\n${i1}return ${this.name};\\n${i0}}(`;\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tcode.insertLeft( this.end, outro );\n\t\t\t\tcode.move( this.superClass.start, this.superClass.end, this.end );\n\t\t\t\tcode.insertRight( this.end, '))' );\n\t\t\t} else {\n\t\t\t\tcode.insertLeft( this.end, `\\n\\n${i1}return ${this.name};\\n${i0}}())` );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tthis.body.transpile( code, transforms, false );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ContinueStatement extends Node {\n\ttranspile ( code, transforms ) {\n\t\tconst loop = this.findNearest( /(?:For(?:In|Of)?|While)Statement/ );\n\t\tif ( loop.shouldRewriteAsFunction ) {\n\t\t\tif ( this.label ) throw new CompileError( this, 'Labels are not currently supported in a loop with locally-scoped variables' );\n\t\t\tcode.overwrite( this.start, this.start + 8, 'return' );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ExportDefaultDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.moduleExport ) throw new CompileError( this, 'export is not supported' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ExportNamedDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.moduleExport ) throw new CompileError( this, 'export is not supported' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","export default function extractNames ( node ) {\n\tconst names = [];\n\textractors[ node.type ]( names, node );\n\treturn names;\n}\n\nconst extractors = {\n\tIdentifier ( names, node ) {\n\t\tnames.push( node );\n\t},\n\n\tObjectPattern ( names, node ) {\n\t\tfor ( const prop of node.properties ) {\n\t\t\textractors[ prop.value.type ]( names, prop.value );\n\t\t}\n\t},\n\n\tArrayPattern ( names, node ) {\n\t\tfor ( const element of node.elements )  {\n\t\t\tif ( element ) extractors[ element.type ]( names, element );\n\t\t}\n\t},\n\n\tRestElement ( names, node ) {\n\t\textractors[ node.argument.type ]( names, node.argument );\n\t},\n\n\tAssignmentPattern ( names, node ) {\n\t\textractors[ node.left.type ]( names, node.left );\n\t}\n};\n","import Node from '../../Node.js';\nimport extractNames from '../../extractNames.js';\n\nexport default class LoopStatement extends Node {\n\tfindScope ( functionScope ) {\n\t\treturn functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;\n\t}\n\n\tinitialise ( transforms ) {\n\t\tthis.body.createScope();\n\t\tthis.createdScope = true;\n\n\t\t// this is populated as and when reassignments occur\n\t\tthis.reassigned = Object.create( null );\n\t\tthis.aliases = Object.create( null );\n\n\t\tsuper.initialise( transforms );\n\n\t\tif ( transforms.letConst ) {\n\t\t\t// see if any block-scoped declarations are referenced\n\t\t\t// inside function expressions\n\t\t\tconst names = Object.keys( this.body.scope.declarations );\n\n\t\t\tlet i = names.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tconst name = names[i];\n\t\t\t\tconst declaration = this.body.scope.declarations[ name ];\n\n\t\t\t\tlet j = declaration.instances.length;\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\tconst instance = declaration.instances[j];\n\t\t\t\t\tconst nearestFunctionExpression = instance.findNearest( /Function/ );\n\n\t\t\t\t\tif ( nearestFunctionExpression && nearestFunctionExpression.depth > this.depth ) {\n\t\t\t\t\t\tthis.shouldRewriteAsFunction = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( this.shouldRewriteAsFunction ) break;\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.shouldRewriteAsFunction ) {\n\t\t\tconst i0 = this.getIndentation();\n\t\t\tconst i1 = i0 + code.getIndentString();\n\n\t\t\tconst argString = this.args ? ` ${this.args.join( ', ' )} ` : '';\n\t\t\tconst paramString = this.params ? ` ${this.params.join( ', ' )} ` : '';\n\n\t\t\tconst functionScope = this.findScope( true );\n\t\t\tconst loop = functionScope.createIdentifier( 'loop' );\n\n\t\t\tconst before = `var ${loop} = function (${paramString}) ` + ( this.body.synthetic ? `{\\n${i0}${code.getIndentString()}` : '' );\n\t\t\tconst after = ( this.body.synthetic ? `\\n${i0}}` : '' ) + `;\\n\\n${i0}`;\n\n\t\t\tcode.insertRight( this.body.start, before );\n\t\t\tcode.insertLeft( this.body.end, after );\n\t\t\tcode.move( this.start, this.body.start, this.body.end );\n\n\t\t\tif ( this.canBreak || this.canReturn ) {\n\t\t\t\tconst returned = functionScope.createIdentifier( 'returned' );\n\n\t\t\t\tlet insert = `{\\n${i1}var ${returned} = ${loop}(${argString});\\n`;\n\t\t\t\tif ( this.canBreak ) insert += `\\n${i1}if ( ${returned} === 'break' ) break;`;\n\t\t\t\tif ( this.canReturn ) insert += `\\n${i1}if ( ${returned} ) return returned.v;`;\n\t\t\t\tinsert += `\\n${i0}}`;\n\n\t\t\t\tcode.insertRight( this.body.end, insert );\n\t\t\t} else {\n\t\t\t\tconst callExpression = `${loop}(${argString});`;\n\n\t\t\t\tif ( this.type === 'DoWhileStatement' ) {\n\t\t\t\t\tcode.overwrite( this.start, this.body.start, `do {\\n${i1}${callExpression}\\n${i0}}` );\n\t\t\t\t} else {\n\t\t\t\t\tcode.insertRight( this.body.end, callExpression );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\nimport extractNames from '../extractNames.js';\n\nexport default class ForStatement extends LoopStatement {\n\tfindScope ( functionScope ) {\n\t\treturn functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tconst i1 = this.getIndentation() + code.getIndentString();\n\n\t\tif ( this.shouldRewriteAsFunction ) {\n\t\t\t// which variables are declared in the init statement?\n\t\t\tconst names = this.init.type === 'VariableDeclaration' ?\n\t\t\t\t[].concat.apply( [], this.init.declarations.map( declarator => extractNames( declarator.id ) ) ) :\n\t\t\t\t[];\n\n\t\t\tconst aliases = this.aliases;\n\n\t\t\tthis.args = names.map( name => name in this.aliases ? this.aliases[ name ].outer : name );\n\t\t\tthis.params = names.map( name => name in this.aliases ? this.aliases[ name ].inner : name );\n\n\t\t\tconst updates = Object.keys( this.reassigned )\n\t\t\t\t.map( name => `${aliases[ name ].outer} = ${aliases[ name ].inner};` );\n\n\t\t\tif ( updates.length ) {\n\t\t\t\tif ( this.body.synthetic ) {\n\t\t\t\t\tcode.insertLeft( this.body.body[0].end, `; ${updates.join(` `)}` );\n\t\t\t\t} else {\n\t\t\t\t\tconst lastStatement = this.body.body[ this.body.body.length - 1 ];\n\t\t\t\t\tcode.insertLeft( lastStatement.end, `\\n\\n${i1}${updates.join(`\\n${i1}`)}` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\nimport extractNames from '../extractNames.js';\n\nexport default class ForInStatement extends LoopStatement {\n\tfindScope ( functionScope ) {\n\t\treturn functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.shouldRewriteAsFunction ) {\n\t\t\t// which variables are declared in the init statement?\n\t\t\tconst names = this.left.type === 'VariableDeclaration' ?\n\t\t\t\t[].concat.apply( [], this.left.declarations.map( declarator => extractNames( declarator.id ) ) ) :\n\t\t\t\t[];\n\n\t\t\tthis.args = names.map( name => name in this.aliases ? this.aliases[ name ].outer : name );\n\t\t\tthis.params = names.map( name => name in this.aliases ? this.aliases[ name ].inner : name );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ForOfStatement extends LoopStatement {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.forOf && !transforms.dangerousForOf ) throw new CompileError( this, 'for...of statements are not supported. Use `transforms: { forOf: false }` to skip transformation and disable this error, or `transforms: { dangerousForOf: true }` if you know what you\\'re doing' );\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( !transforms.dangerousForOf ) {\n\t\t\tsuper.transpile( code, transforms );\n\t\t\treturn;\n\t\t}\n\n\t\tconst scope = this.findScope( true );\n\t\tconst i0 = this.getIndentation();\n\t\tconst i1 = i0 + code.getIndentString();\n\n\t\tconst key = scope.createIdentifier( 'i' );\n\t\tconst list = scope.createIdentifier( 'list' );\n\n\t\tif ( this.body.synthetic ) {\n\t\t\tcode.insertRight( this.left.start, `{\\n${i1}` );\n\t\t\tcode.insertLeft( this.body.body[0].end, `\\n${i0}}` );\n\t\t}\n\n\t\tconst bodyStart = this.body.body[0].start;\n\n\t\tcode.remove( this.left.end, this.right.start );\n\t\tcode.move( this.left.start, this.left.end, bodyStart );\n\t\tcode.insertLeft( this.left.end, ` = ${list}[${key}];\\n\\n${i1}` );\n\n\t\tcode.insertRight( this.right.start, `var ${key} = 0, ${list} = ` );\n\t\tcode.insertLeft( this.right.end, `; ${key} < ${list}.length; ${key} += 1` );\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class FunctionDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.generator && transforms.generator ) {\n\t\t\tthrow new CompileError( this, 'Generators are not supported' );\n\t\t}\n\n\t\tthis.body.createScope();\n\n\t\tthis.findScope( true ).addDeclaration( this.id, 'function' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class FunctionExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.generator && transforms.generator ) {\n\t\t\tthrow new CompileError( this, 'Generators are not supported' );\n\t\t}\n\n\t\tthis.body.createScope();\n\n\t\tif ( this.id ) {\n\t\t\t// function expression IDs belong to the child scope...\n\t\t\tthis.body.scope.addDeclaration( this.id, 'function' );\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n}\n","export default function isReference ( node, parent ) {\n\tif ( node.type === 'MemberExpression' ) {\n\t\treturn !node.computed && isReference( node.object, node );\n\t}\n\n\tif ( node.type === 'Identifier' ) {\n\t\t// the only time we could have an identifier node without a parent is\n\t\t// if it's the entire body of a function without a block statement –\n\t\t// i.e. an arrow function expression like `a => a`\n\t\tif ( !parent ) return true;\n\n\t\tif ( /(Function|Class)Expression/.test( parent.type ) ) return false;\n\n\t\tif ( parent.type === 'VariableDeclarator' ) return node === parent.init;\n\n\t\t// TODO is this right?\n\t\tif ( parent.type === 'MemberExpression' || parent.type === 'MethodDefinition' ) {\n\t\t\treturn parent.computed || node === parent.object;\n\t\t}\n\n\t\tif ( parent.type === 'ArrayPattern' ) return false;\n\n\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\t\tif ( parent.type === 'Property' ) {\n\t\t\tif ( parent.parent.type === 'ObjectPattern' ) return false;\n\t\t\treturn parent.computed || node === parent.value;\n\t\t}\n\n\t\t// disregard the `bar` in `class Foo { bar () {...} }`\n\t\tif ( parent.type === 'MethodDefinition' ) return false;\n\n\t\t// disregard the `bar` in `export { foo as bar }`\n\t\tif ( parent.type === 'ExportSpecifier' && node !== parent.local ) return false;\n\n\t\treturn true;\n\t}\n}\n","import Node from '../Node.js';\nimport isReference from '../../utils/isReference.js';\n\nexport default class Identifier extends Node {\n\tfindScope ( functionScope ) {\n\t\tif ( this.parent.params && ~this.parent.params.indexOf( this ) ) {\n\t\t\treturn this.parent.body.scope;\n\t\t}\n\n\t\tif ( this.parent.type === 'FunctionExpression' && this === this.parent.id ) {\n\t\t\treturn this.parent.body.scope;\n\t\t}\n\n\t\treturn this.parent.findScope( functionScope\t);\n\t}\n\n\tinitialise ( transforms ) {\n\t\tif ( transforms.arrow && isReference( this, this.parent ) ) {\n\t\t\tif ( this.name === 'arguments' && !this.findScope( false ).contains( this.name ) ) {\n\t\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\t\t\t\tconst arrowFunction = this.findNearest( 'ArrowFunctionExpression' );\n\t\t\t\tconst loop = this.findNearest( /(?:For(?:In|Of)?|While)Statement/ );\n\n\t\t\t\tif ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth ) {\n\t\t\t\t\tthis.alias = lexicalBoundary.getArgumentsAlias();\n\t\t\t\t}\n\n\t\t\t\tif ( loop && loop.body.contains( this ) && loop.depth > lexicalBoundary.depth ) {\n\t\t\t\t\tthis.alias = lexicalBoundary.getArgumentsAlias();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.findScope( false ).addReference( this );\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.alias ) {\n\t\t\tcode.overwrite( this.start, this.end, this.alias, true );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ImportDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.moduleImport ) throw new CompileError( this, 'import is not supported' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportDefaultSpecifier extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportSpecifier extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nconst IS_DATA_ATTRIBUTE = /-/;\n\nexport default class JSXAttribute extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( this.value ) {\n\t\t\tcode.overwrite( this.name.end, this.value.start, ': ' );\n\t\t} else {\n\t\t\t// tag without value\n\t\t\tcode.overwrite( this.name.start, this.name.end, `${this.name.name}: true`)\n\t\t}\n\n\t\tif ( IS_DATA_ATTRIBUTE.test( this.name.name ) ) {\n\t\t\tcode.overwrite( this.name.start, this.name.end, `'${this.name.name}'` );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nfunction containsNewLine ( node ) {\n\treturn node.type === 'Literal' && !/\\S/.test( node.value ) && /\\n/.test( node.value );\n}\n\nexport default class JSXClosingElement extends Node {\n\ttranspile ( code, transforms ) {\n\t\tlet spaceBeforeParen = true;\n\n\t\tconst lastChild = this.parent.children[ this.parent.children.length - 1 ];\n\n\t\t// omit space before closing paren if\n\t\t//   a) this is on a separate line, or\n\t\t//   b) there are no children but there are attributes\n\t\tif ( ( lastChild && containsNewLine( lastChild ) ) || ( this.parent.openingElement.attributes.length ) ) {\n\t\t\tspaceBeforeParen = false;\n\t\t}\n\n\t\tcode.overwrite( this.start, this.end, spaceBeforeParen ? ' )' : ')' );\n\t}\n}\n","import Node from '../Node.js';\n\nfunction normalise ( str, removeTrailingWhitespace ) {\n\tstr = str\n\t\t.replace( /^\\n\\r?\\s+/, '' )       // remove leading newline + space\n\t\t.replace( /\\s*\\n\\r?\\s*/gm, ' ' ); // replace newlines with spaces\n\n\tif ( removeTrailingWhitespace ) {\n\t\tstr = str.replace( /\\s+$/, '' );\n\t}\n\n\t// TODO prefer single quotes?\n\treturn JSON.stringify( str );\n}\n\nexport default class JSXElement extends Node {\n\ttranspile ( code, transforms ) {\n\t\tsuper.transpile( code, transforms );\n\n\t\tconst children = this.children.filter( child => {\n\t\t\treturn child.type === 'JSXElement' || /\\S/.test( child.value );\n\t\t});\n\n\t\tif ( children.length ) {\n\t\t\tlet c = this.openingElement.end;\n\n\t\t\tlet i;\n\t\t\tfor ( i = 0; i < children.length; i += 1 ) {\n\t\t\t\tconst child = children[i];\n\n\t\t\t\tconst tail = code.original[ c ] === '\\n' && child.type !== 'Literal' ? '' : ' ';\n\t\t\t\tcode.insertLeft( c, `,${tail}` );\n\n\t\t\t\tif ( child.type === 'Literal' ) {\n\t\t\t\t\tconst str = normalise( child.value, i === children.length - 1 );\n\t\t\t\t\tcode.overwrite( child.start, child.end, str );\n\t\t\t\t}\n\n\t\t\t\tc = child.end;\n\t\t\t}\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class JSXExpressionContainer extends Node {\n\ttranspile ( code, transforms ) {\n\t\tcode.remove( this.start, this.expression.start );\n\t\tcode.remove( this.expression.end, this.end );\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class JSXOpeningElement extends Node {\n\ttranspile ( code, transforms ) {\n\t\tcode.overwrite( this.start, this.name.start, `${this.program.jsx}( ` );\n\n\t\tconst html = this.name.type === 'JSXIdentifier' && this.name.name[0] === this.name.name[0].toLowerCase();\n\t\tif ( html ) code.insertRight( this.name.start, `'` );\n\n\t\tconst len = this.attributes.length;\n\t\tlet c = this.name.end;\n\n\t\tif ( len ) {\n\t\t\tlet i;\n\n\t\t\tlet hasSpread = false;\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tif ( this.attributes[i].type === 'JSXSpreadAttribute' ) {\n\t\t\t\t\thasSpread = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc = this.attributes[0].end;\n\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tconst attr = this.attributes[i];\n\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tcode.overwrite( c, attr.start, ', ' );\n\t\t\t\t}\n\n\t\t\t\tif ( hasSpread && attr.type !== 'JSXSpreadAttribute' ) {\n\t\t\t\t\tconst lastAttr = this.attributes[ i - 1 ];\n\t\t\t\t\tconst nextAttr = this.attributes[ i + 1 ];\n\n\t\t\t\t\tif ( !lastAttr || lastAttr.type === 'JSXSpreadAttribute' ) {\n\t\t\t\t\t\tcode.insertRight( attr.start, '{ ' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !nextAttr || nextAttr.type === 'JSXSpreadAttribute' ) {\n\t\t\t\t\t\tcode.insertLeft( attr.end, ' }' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tc = attr.end;\n\t\t\t}\n\n\t\t\tlet after;\n\t\t\tlet before;\n\t\t\tif ( hasSpread ) {\n\t\t\t\tif ( len === 1 ) {\n\t\t\t\t\tbefore = html ? `',` : ',';\n\t\t\t\t} else {\n\t\t\t\t\tbefore = html ? `', Object.assign({},` : ', Object.assign({},';\n\t\t\t\t\tafter = ')';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbefore = html ? `', {` : ', {';\n\t\t\t\tafter = ' }';\n\t\t\t}\n\n\t\t\tcode.insertRight( this.name.end, before );\n\n\t\t\tif ( after ) {\n\t\t\t\tcode.insertLeft( this.attributes[ len - 1 ].end, after );\n\t\t\t}\n\t\t} else {\n\t\t\tcode.insertLeft( this.name.end, html ? `', null` : `, null` );\n\t\t\tc = this.name.end;\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\n\t\tif ( this.selfClosing ) {\n\t\t\tcode.overwrite( c, this.end, this.attributes.length ? `)` : ` )` );\n\t\t} else {\n\t\t\tcode.remove( c, this.end );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class JSXSpreadAttribute extends Node {\n\ttranspile ( code, transforms ) {\n\t\tcode.remove( this.start, this.argument.start );\n\t\tcode.remove( this.argument.end, this.end );\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class Literal extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.numericLiteral ) {\n\t\t\tconst leading = this.raw.slice( 0, 2 );\n\t\t\tif ( leading === '0b' || leading === '0o' ) {\n\t\t\t\tcode.overwrite( this.start, this.end, String( this.value ), true );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.regex ) {\n\t\t\tif ( transforms.unicodeRegExp && /u/.test( this.regex.flags ) ) throw new CompileError( this, 'Regular expression unicode flag is not supported' );\n\t\t\tif ( transforms.stickyRegExp && /y/.test( this.regex.flags ) ) throw new CompileError( this, 'Regular expression sticky flag is not supported' );\n\t\t}\n\t}\n}\n","let reserved = Object.create( null );\n'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'.split( ' ' )\n\t.forEach( word => reserved[ word ] = true );\n\nexport default reserved;\n","import Node from '../Node.js';\nimport reserved from '../../utils/reserved.js';\n\nexport default class MemberExpression extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.reservedProperties && reserved[ this.property.name ] ) {\n\t\t\tcode.overwrite( this.object.end, this.property.start, `['` );\n\t\t\tcode.insertLeft( this.property.end, `']` );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ObjectExpression extends Node {\n\ttranspile ( code, transforms ) {\n\t\tsuper.transpile( code, transforms );\n\n\t\tlet hasSpread = false;\n\n\t\tfor ( let prop of this.properties ) {\n\t\t\tif ( prop.type === 'SpreadProperty' ) {\n\t\t\t\thasSpread = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( hasSpread ) {\n\t\t\t// enclose run of non-spread properties in curlies\n\t\t\tlet i = this.properties.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tconst prop = this.properties[i];\n\n\n\t\t\t\tif ( prop.type === 'Property' ) {\n\t\t\t\t\tconst lastProp = this.properties[ i - 1 ];\n\t\t\t\t\tconst nextProp = this.properties[ i + 1 ];\n\n\t\t\t\t\tif ( !lastProp || lastProp.type !== 'Property' ) {\n\t\t\t\t\t\tcode.insertRight( prop.start, '{' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !nextProp || nextProp.type !== 'Property' ) {\n\t\t\t\t\t\tcode.insertLeft( prop.end, '}' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// wrap the whole thing in Object.assign\n\t\t\tcode.overwrite( this.start, this.properties[0].start, 'Object.assign({}, ');\n\t\t\tcode.overwrite( this.properties[ this.properties.length - 1 ].end, this.end, ')' );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport reserved from '../../utils/reserved.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class Property extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.computed && transforms.computedProperty ) {\n\t\t\tthrow new CompileError( this.key, 'Computed properties are not supported' );\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.conciseMethodProperty && this.parent.type !== 'ObjectPattern' ) {\n\t\t\tif ( this.shorthand ) {\n\t\t\t\tcode.insertRight( this.start, `${this.key.name}: ` );\n\t\t\t} else if ( this.method ) {\n\t\t\t\tconst name = this.findScope( true ).createIdentifier( this.key.name );\n\t\t\t\tif ( this.value.generator ) code.remove( this.start, this.key.start );\n\t\t\t\tcode.insertLeft( this.key.end, `: function${this.value.generator ? '*' : ''} ${name}` );\n\t\t\t}\n\t\t}\n\n\t\tif ( transforms.reservedProperties && reserved[ this.key.name ] ) {\n\t\t\tcode.insertRight( this.key.start, `'` );\n\t\t\tcode.insertLeft( this.key.end, `'` );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ReturnStatement extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.loop = this.findNearest( /(?:For(?:In)?|While)Statement/ );\n\t\tthis.nearestFunction = this.findNearest( /Function/ );\n\n\t\tif ( this.loop && ( !this.nearestFunction || this.loop.depth > this.nearestFunction.depth ) ) {\n\t\t\tthis.loop.canReturn = true;\n\t\t\tthis.shouldWrap = true;\n\t\t}\n\n\t\tif ( this.argument ) this.argument.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.argument ) {\n\t\t\tconst shouldWrap = this.shouldWrap && this.loop && this.loop.shouldRewriteAsFunction;\n\n\t\t\tif ( shouldWrap ) code.insertRight( this.argument.start, `{ v: ` );\n\n\t\t\tif ( this.argument ) this.argument.transpile( code, transforms );\n\n\t\t\tif ( shouldWrap ) code.insertLeft( this.argument.end, ` }` );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport reserved from '../../utils/reserved.js';\n\nexport default class SpreadProperty extends Node {\n\ttranspile ( code, transforms ) {\n\t\tcode.remove( this.start, this.argument.start );\n\t\tcode.remove( this.argument.end, this.end );\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class Super extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.classes ) {\n\t\t\tthis.method = this.findNearest( 'MethodDefinition' );\n\t\t\tif ( !this.method ) throw new CompileError( this, 'use of super outside class method' );\n\n\t\t\tconst parentClass = this.findNearest( 'ClassBody' ).parent;\n\t\t\tthis.superClassName = parentClass.superClass && (parentClass.superClass.name || 'superclass');\n\n\t\t\tif ( !this.superClassName ) throw new CompileError( this, 'super used in base class' );\n\n\t\t\tthis.isCalled = this.parent.type === 'CallExpression' && this === this.parent.callee;\n\n\t\t\tif ( this.method.kind !== 'constructor' && this.isCalled ) {\n\t\t\t\tthrow new CompileError( this, 'super() not allowed outside class constructor' );\n\t\t\t}\n\n\t\t\tthis.isMember = this.parent.type === 'MemberExpression';\n\n\t\t\tif ( !this.isCalled && !this.isMember ) {\n\t\t\t\tthrow new CompileError( this, 'Unexpected use of `super` (expected `super(...)` or `super.*`)' );\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.classes ) {\n\t\t\tconst expression = ( this.isCalled || this.method.static ) ?\n\t\t\t\tthis.superClassName :\n\t\t\t\t`${this.superClassName}.prototype`;\n\n\t\t\tcode.overwrite( this.start, this.end, expression, true );\n\n\t\t\tconst callExpression = this.isCalled ? this.parent : this.parent.parent;\n\n\t\t\tif ( callExpression && callExpression.type === 'CallExpression' ) {\n\t\t\t\tcode.insertLeft( callExpression.callee.end, '.call' );\n\n\t\t\t\tif ( callExpression.arguments.length ) {\n\t\t\t\t\tcode.insertLeft( callExpression.arguments[0].start, `this, ` );\n\t\t\t\t} else {\n\t\t\t\t\tcode.insertLeft( callExpression.end - 1, `this` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class TaggedTemplateExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.templateString && !transforms.dangerousTaggedTemplateString ) {\n\t\t\tthrow new CompileError( this, 'Tagged template strings are not supported. Use `transforms: { templateString: false }` to skip transformation and disable this error, or `transforms: { dangerousTaggedTemplateString: true }` if you know what you\\'re doing' );\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.templateString && transforms.dangerousTaggedTemplateString ) {\n\t\t\tconst ordered = this.quasi.expressions.concat( this.quasi.quasis ).sort( ( a, b ) => a.start - b.start );\n\n\t\t\t// insert strings at start\n\t\t\tconst templateStrings = this.quasi.quasis.map( quasi => JSON.stringify( quasi.value.cooked ) );\n\t\t\tcode.overwrite( this.tag.end, ordered[0].start, `([${templateStrings.join(', ')}]` );\n\n\t\t\tlet lastIndex = ordered[0].start;\n\t\t\tordered.forEach( node => {\n\t\t\t\tif ( node.type === 'TemplateElement' ) {\n\t\t\t\t\tcode.remove( lastIndex, node.end );\n\t\t\t\t} else {\n\t\t\t\t\tcode.overwrite( lastIndex, node.start, ', ' );\n\t\t\t\t}\n\n\t\t\t\tlastIndex = node.end;\n\t\t\t});\n\n\t\t\tcode.overwrite( lastIndex, this.end, ')' );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TemplateElement extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.program.templateElements.push( this );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TemplateLiteral extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.templateString && this.parent.type !== 'TaggedTemplateExpression' ) {\n\t\t\tlet ordered = this.expressions.concat( this.quasis )\n\t\t\t\t.sort( ( a, b ) => a.start - b.start || a.end - b.end )\n\t\t\t\t.filter( ( node, i ) => {\n\t\t\t\t\t// include all expressions\n\t\t\t\t\tif ( node.type !== 'TemplateElement' ) return true;\n\n\t\t\t\t\t// include all non-empty strings\n\t\t\t\t\tif ( node.value.raw ) return true;\n\n\t\t\t\t\t// exclude all empty strings not at the head\n\t\t\t\t\treturn !i;\n\t\t\t\t});\n\n\t\t\t// special case – we may be able to skip the first element,\n\t\t\t// if it's the empty string, but only if the second and\n\t\t\t// third elements aren't both expressions (since they maybe\n\t\t\t// be numeric, and `1 + 2 + '3' === '33'`)\n\t\t\tif ( ordered.length >= 3 ) {\n\t\t\t\tconst [ first, , third ] = ordered;\n\t\t\t\tif ( first.type === 'TemplateElement' && first.value.raw === '' && third.type === 'TemplateElement' ) {\n\t\t\t\t\tordered.shift();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst parenthesise = ( this.quasis.length !== 1 || this.expressions.length !== 0 ) &&\n\t\t\t                     this.parent.type !== 'AssignmentExpression' &&\n\t\t\t                     this.parent.type !== 'VariableDeclarator' &&\n\t\t\t                     ( this.parent.type !== 'BinaryExpression' || this.parent.operator !== '+' );\n\n\t\t\tif ( parenthesise ) code.insertRight( this.start, '(' );\n\n\t\t\tlet lastIndex = this.start;\n\n\t\t\tordered.forEach( ( node, i ) => {\n\t\t\t\tif ( node.type === 'TemplateElement' ) {\n\t\t\t\t\tlet replacement = '';\n\t\t\t\t\tif ( i ) replacement += ' + ';\n\t\t\t\t\treplacement += JSON.stringify( node.value.cooked );\n\n\t\t\t\t\tcode.overwrite( lastIndex, node.end, replacement );\n\t\t\t\t} else {\n\t\t\t\t\tconst parenthesise = node.type !== 'Identifier'; // TODO other cases where it's safe\n\n\t\t\t\t\tlet replacement = '';\n\t\t\t\t\tif ( i ) replacement += ' + ';\n\t\t\t\t\tif ( parenthesise ) replacement += '(';\n\n\t\t\t\t\tcode.overwrite( lastIndex, node.start, replacement );\n\n\t\t\t\t\tif ( parenthesise ) code.insertLeft( node.end, ')' );\n\t\t\t\t}\n\n\t\t\t\tlastIndex = node.end;\n\t\t\t});\n\n\t\t\tlet close = '';\n\t\t\tif ( parenthesise ) close += ')';\n\n\t\t\tcode.overwrite( lastIndex, this.end, close );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ThisExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.arrow ) {\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\t\t\tconst arrowFunction = this.findNearest( 'ArrowFunctionExpression' );\n\t\t\tconst loop = this.findNearest( /(?:For(?:In|Of)?|While)Statement/ );\n\n\t\t\tif ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth ) {\n\t\t\t\tthis.alias = lexicalBoundary.getThisAlias();\n\t\t\t}\n\n\t\t\tif ( loop && loop.body.contains( this ) && loop.depth > lexicalBoundary.depth ) {\n\t\t\t\tthis.alias = lexicalBoundary.getThisAlias();\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.alias ) {\n\t\t\tcode.overwrite( this.start, this.end, this.alias, true );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class UpdateExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.argument.type === 'Identifier' ) {\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.argument.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this, `${this.argument.name} is read-only` );\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n}\n","const handlers = {\n\tArrayPattern: destructureArrayPattern,\n\tObjectPattern: destructureObjectPattern,\n\tAssignmentPattern: destructureAssignmentPattern\n};\n\nexport default function destructure ( code, scope, node, ref, statementGenerators ) {\n\tconst handler = handlers[ node.type ];\n\tif ( !handler ) throw new Error( `not implemented: ${node.type}` );\n\n\thandler( code, scope, node, ref, statementGenerators );\n}\n\nfunction onlyHasOneReference ( declaration ) {\n\tif ( !declaration ) return false;\n\tif ( declaration.instances.length !== 1 ) return false;\n\n\tconst instance = declaration.instances[0];\n\tif ( instance.parent.type === 'VariableDeclarator' && instance.parent.id.type !== 'Identifier' ) return false;\n\n\treturn true;\n}\n\nfunction handlePattern ( code, scope, node, tmp, expr, statementGenerators ) {\n\tif ( node.type === 'Identifier' ) {\n\t\tconst declaration = scope.findDeclaration( node.name );\n\n\t\tstatementGenerators.push( ( start, prefix, suffix ) => {\n\t\t\tcode.insertRight( node.start, `${prefix}var ` );\n\t\t\tcode.insertLeft( node.end, ` = ${expr};${suffix}` );\n\t\t\tcode.move( node.start, node.end, start );\n\t\t});\n\t} else if ( node.type === 'AssignmentPattern' ) {\n\t\tstatementGenerators.push( ( start, prefix, suffix ) => {\n\t\t\tcode.remove( node.start, node.right.start );\n\n\t\t\tconst name = node.left.name;\n\t\t\tcode\n\t\t\t\t.insertRight( node.right.start, `${prefix}var ${tmp} = ${expr}, ${name} = ${tmp} === void 0 ? ` )\n\t\t\t\t.insertLeft( node.right.end, ` : ${tmp};${suffix}` )\n\t\t\t\t.move( node.right.start, node.right.end, start );\n\t\t});\n\t} else {\n\t\tthrow new Error( 'Compound destructuring is not supported' );\n\t}\n}\n\nfunction destructureArrayPattern ( code, scope, node, ref, statementGenerators ) {\n\tlet c = node.start;\n\n\tnode.elements.forEach( ( element, i ) => {\n\t\tif ( !element ) return;\n\n\t\tcode.remove( c, element.start );\n\t\thandlePattern( code, scope, element, scope.createIdentifier( `${ref}_${i}` ), `${ref}[${i}]`, statementGenerators );\n\t\tc = element.end;\n\t});\n\n\tcode.remove( c, node.end );\n}\n\nfunction destructureObjectPattern ( code, scope, node, ref, statementGenerators ) {\n\tlet c = node.start;\n\n\tnode.properties.forEach( prop => {\n\t\tconst key = prop.key.name;\n\n\t\tcode.remove( c, prop.value.start );\n\t\thandlePattern( code, scope, prop.value, scope.createIdentifier( `${ref}_${key}` ), `${ref}.${key}`, statementGenerators );\n\t\tc = prop.end;\n\t});\n\n\tcode.remove( c, node.end );\n}\n\nfunction destructureAssignmentPattern ( code, scope, node, ref, statementGenerators ) {\n\tconst isIdentifier = node.left.type === 'Identifier';\n\tconst name = isIdentifier ? node.left.name : ref;\n\n\tstatementGenerators.push( ( start, prefix, suffix ) => {\n\t\tcode.insertRight( node.left.end, `${prefix}if ( ${name} === void 0 ) ${name}` );\n\t\tcode.move( node.left.end, node.right.end, start );\n\t\tcode.insertLeft( node.right.end, `;${suffix}` );\n\t});\n\n\tif ( !isIdentifier ) {\n\t\tdestructure( code, scope, node.left, ref, statementGenerators );\n\t}\n}\n","import Node from '../Node.js';\nimport destructure from '../../utils/destructure.js';\n\nexport default class VariableDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.scope = this.findScope( this.kind === 'var' );\n\t\tthis.declarations.forEach( declarator => declarator.initialise( transforms ) );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tconst i0 = this.getIndentation();\n\t\tlet kind = this.kind;\n\n\t\tif ( transforms.letConst && kind !== 'var' ) {\n\t\t\tkind = 'var';\n\t\t\tcode.overwrite( this.start, this.start + this.kind.length, kind, true );\n\t\t}\n\n\t\tif ( transforms.destructuring ) {\n\t\t\tlet c = this.start;\n\t\t\tlet lastDeclaratorIsPattern;\n\n\t\t\tthis.declarations.forEach( ( declarator, i ) => {\n\t\t\t\tif ( declarator.id.type === 'Identifier' ) {\n\t\t\t\t\tif ( i > 0 && this.declarations[ i - 1 ].id.type !== 'Identifier' ) {\n\t\t\t\t\t\tcode.overwrite( c, declarator.id.start, `var ` );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( i === 0 ) {\n\t\t\t\t\t\tcode.remove( c, declarator.id.start );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.overwrite( c, declarator.id.start, `;\\n${i0}` );\n\t\t\t\t\t}\n\n\t\t\t\t\tconst simple = declarator.init.type === 'Identifier' && !declarator.init.rewritten;\n\n\t\t\t\t\tconst name = simple ? declarator.init.name : declarator.findScope( true ).createIdentifier( 'ref' );\n\n\t\t\t\t\tlet c = declarator.start;\n\n\t\t\t\t\tlet statementGenerators = [];\n\n\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\tcode.remove( declarator.id.end, declarator.end );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatementGenerators.push( ( start, prefix, suffix ) => {\n\t\t\t\t\t\t\tcode.insertRight( declarator.id.end, `var ${name}` );\n\t\t\t\t\t\t\tcode.insertLeft( declarator.init.end, `;${suffix}` );\n\t\t\t\t\t\t\tcode.move( declarator.id.end, declarator.end, start );\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tdestructure( code, declarator.findScope( true ), declarator.id, name, statementGenerators );\n\n\t\t\t\t\tlet suffix = `\\n${i0}`;\n\t\t\t\t\tstatementGenerators.forEach( ( fn, j ) => {\n\t\t\t\t\t\tif ( i === this.declarations.length - 1 && j === statementGenerators.length - 1 ) {\n\t\t\t\t\t\t\tsuffix = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfn( declarator.start, ``, suffix );\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif ( declarator.init ) {\n\t\t\t\t\tdeclarator.init.transpile( code, transforms );\n\t\t\t\t}\n\n\t\t\t\tc = declarator.end;\n\t\t\t\tlastDeclaratorIsPattern = declarator.id.type !== 'Identifier';\n\t\t\t});\n\n\t\t\tif ( lastDeclaratorIsPattern ) {\n\t\t\t\tcode.remove( c, this.end );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tthis.declarations.forEach( declarator => {\n\t\t\t\tif ( declarator.init ) declarator.init.transpile( code, transforms );\n\t\t\t});\n\t\t}\n\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class VariableDeclarator extends Node {\n\tinitialise ( transforms ) {\n\t\tlet kind = this.parent.kind;\n\t\tif ( kind === 'let' && this.parent.parent.type === 'ForStatement' ) {\n\t\t\tkind = 'for.let'; // special case...\n\t\t}\n\n\t\tthis.parent.scope.addDeclaration( this.id, kind );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import ArrayExpression from './ArrayExpression.js';\nimport ArrowFunctionExpression from './ArrowFunctionExpression.js';\nimport AssignmentExpression from './AssignmentExpression.js';\nimport BinaryExpression from './BinaryExpression.js';\nimport BreakStatement from './BreakStatement.js';\nimport CallExpression from './CallExpression.js';\nimport ClassBody from './ClassBody.js';\nimport ClassDeclaration from './ClassDeclaration.js';\nimport ClassExpression from './ClassExpression.js';\nimport ContinueStatement from './ContinueStatement.js';\nimport ExportDefaultDeclaration from './ExportDefaultDeclaration.js';\nimport ExportNamedDeclaration from './ExportNamedDeclaration.js';\nimport ForStatement from './ForStatement.js';\nimport ForInStatement from './ForInStatement.js';\nimport ForOfStatement from './ForOfStatement.js';\nimport FunctionDeclaration from './FunctionDeclaration.js';\nimport FunctionExpression from './FunctionExpression.js';\nimport Identifier from './Identifier.js';\nimport ImportDeclaration from './ImportDeclaration.js';\nimport ImportDefaultSpecifier from './ImportDefaultSpecifier.js';\nimport ImportSpecifier from './ImportSpecifier.js';\nimport JSXAttribute from './JSXAttribute.js';\nimport JSXClosingElement from './JSXClosingElement.js';\nimport JSXElement from './JSXElement.js';\nimport JSXExpressionContainer from './JSXExpressionContainer.js';\nimport JSXOpeningElement from './JSXOpeningElement.js';\nimport JSXSpreadAttribute from './JSXSpreadAttribute.js';\nimport Literal from './Literal.js';\nimport LoopStatement from './shared/LoopStatement.js';\nimport MemberExpression from './MemberExpression.js';\nimport ObjectExpression from './ObjectExpression.js';\nimport Property from './Property.js';\nimport ReturnStatement from './ReturnStatement.js';\nimport SpreadProperty from './SpreadProperty.js';\nimport Super from './Super.js';\nimport TaggedTemplateExpression from './TaggedTemplateExpression.js';\nimport TemplateElement from './TemplateElement.js';\nimport TemplateLiteral from './TemplateLiteral.js';\nimport ThisExpression from './ThisExpression.js';\nimport UpdateExpression from './UpdateExpression.js';\nimport VariableDeclaration from './VariableDeclaration.js';\nimport VariableDeclarator from './VariableDeclarator.js';\n\nexport default {\n\tArrayExpression,\n\tArrowFunctionExpression,\n\tAssignmentExpression,\n\tBinaryExpression,\n\tBreakStatement,\n\tCallExpression,\n\tClassBody,\n\tClassDeclaration,\n\tClassExpression,\n\tContinueStatement,\n\tDoWhileStatement: LoopStatement,\n\tExportNamedDeclaration,\n\tExportDefaultDeclaration,\n\tForStatement,\n\tForInStatement,\n\tForOfStatement,\n\tFunctionDeclaration,\n\tFunctionExpression,\n\tIdentifier,\n\tImportDeclaration,\n\tImportDefaultSpecifier,\n\tImportSpecifier,\n\tJSXAttribute,\n\tJSXClosingElement,\n\tJSXElement,\n\tJSXExpressionContainer,\n\tJSXOpeningElement,\n  JSXSpreadAttribute,\n\tLiteral,\n\tMemberExpression,\n\tObjectExpression,\n\tProperty,\n\tReturnStatement,\n\tSpreadProperty,\n\tSuper,\n\tTaggedTemplateExpression,\n\tTemplateElement,\n\tTemplateLiteral,\n\tThisExpression,\n\tUpdateExpression,\n\tVariableDeclaration,\n\tVariableDeclarator,\n\tWhileStatement: LoopStatement\n};\n","import types from './types/index.js';\nimport BlockStatement from './BlockStatement.js';\nimport Node from './Node.js';\nimport keys from './keys.js';\n\nconst statementsWithBlocks = {\n\tIfStatement: 'consequent',\n\tForStatement: 'body',\n\tForInStatement: 'body',\n\tForOfStatement: 'body',\n\tWhileStatement: 'body',\n\tDoWhileStatement: 'body',\n\tArrowFunctionExpression: 'body'\n};\n\nexport default function wrap ( raw, parent ) {\n\tif ( !raw ) return;\n\n\tif ( 'length' in raw ) {\n\t\tlet i = raw.length;\n\t\twhile ( i-- ) wrap( raw[i], parent );\n\t\treturn;\n\t}\n\n\t// with e.g. shorthand properties, key and value are\n\t// the same node. We don't want to wrap an object twice\n\tif ( raw.__wrapped ) return;\n\traw.__wrapped = true;\n\n\tif ( !keys[ raw.type ] ) {\n\t\tkeys[ raw.type ] = Object.keys( raw ).filter( key => typeof raw[ key ] === 'object' );\n\t}\n\n\t// special case – body-less if/for/while statements. TODO others?\n\tconst bodyType = statementsWithBlocks[ raw.type ];\n\tif ( bodyType && raw[ bodyType ].type !== 'BlockStatement' ) {\n\t\tconst expression = raw[ bodyType ];\n\n\t\t// create a synthetic block statement, otherwise all hell\n\t\t// breaks loose when it comes to block scoping\n\t\traw[ bodyType ] = {\n\t\t\tstart: expression.start,\n\t\t\tend: expression.end,\n\t\t\ttype: 'BlockStatement',\n\t\t\tbody: [ expression ],\n\t\t\tsynthetic: true\n\t\t};\n\t}\n\n\tNode( raw, parent );\n\n\tconst type = ( raw.type === 'BlockStatement' ? BlockStatement : types[ raw.type ] ) || Node;\n\traw.__proto__ = type.prototype;\n}\n","import extractNames from './extractNames.js';\nimport reserved from '../utils/reserved.js';\nimport CompileError from '../utils/CompileError.js';\n\nconst letConst = /^(?:let|const)$/;\n\nexport default function Scope ( options ) {\n\toptions = options || {};\n\n\tthis.parent = options.parent;\n\tthis.isBlockScope = !!options.block;\n\n\tlet scope = this;\n\twhile ( scope.isBlockScope ) scope = scope.parent;\n\tthis.functionScope = scope;\n\n\tthis.declarations = Object.create( null );\n\tthis.references = Object.create( null );\n\tthis.blockScopedDeclarations = this.isBlockScope ? null : Object.create( null );\n\tthis.aliases = this.isBlockScope ? null : Object.create( null );\n}\n\nScope.prototype = {\n\taddDeclaration ( node, kind ) {\n\t\tfor ( const identifier of extractNames( node ) ) {\n\t\t\tconst name = identifier.name;\n\t\t\tconst existingDeclaration = this.declarations[ name ];\n\t\t\tif ( existingDeclaration && ( letConst.test( kind ) || letConst.test( existingDeclaration.kind ) ) ) {\n\t\t\t\t// TODO warn about double var declarations?\n\t\t\t\tthrow new CompileError( identifier, `${name} is already declared` );\n\t\t\t}\n\n\t\t\tconst declaration = { name, node: identifier, kind, instances: [] };\n\t\t\tthis.declarations[ name ] = declaration;\n\n\t\t\tif ( this.isBlockScope ) {\n\t\t\t\tif ( !this.functionScope.blockScopedDeclarations[ name ] ) this.functionScope.blockScopedDeclarations[ name ] = [];\n\t\t\t\tthis.functionScope.blockScopedDeclarations[ name ].push( declaration );\n\t\t\t}\n\t\t}\n\t},\n\n\taddReference ( identifier ) {\n\t\tconst declaration = this.declarations[ identifier.name ];\n\t\tif ( declaration ) {\n\t\t\tdeclaration.instances.push( identifier );\n\t\t} else {\n\t\t\tthis.references[ identifier.name ] = true;\n\t\t\tif ( this.parent ) this.parent.addReference( identifier );\n\t\t}\n\t},\n\n\tcontains ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent ? this.parent.contains( name ) : false );\n\t},\n\n\tcreateIdentifier ( base ) {\n\t\tlet name = base;\n\t\tlet counter = 1;\n\n\t\twhile ( this.declarations[ name ] || this.references[ name ] || this.aliases[ name ] || name in reserved ) {\n\t\t\tname = `${base}$${counter++}`;\n\t\t}\n\n\t\tthis.aliases[ name ] = true;\n\t\treturn name;\n\t},\n\n\tfindDeclaration ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent && this.parent.findDeclaration( name ) );\n\t}\n};\n","import wrap from './wrap.js';\nimport Node from './Node.js';\nimport Scope from './Scope.js';\nimport CompileError from '../utils/CompileError.js';\nimport destructure from '../utils/destructure.js';\n\nexport default class BlockStatement extends Node {\n\tcreateScope () {\n\t\tthis.parentIsFunction = /Function/.test( this.parent.type );\n\t\tthis.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';\n\t\tthis.scope = new Scope({\n\t\t\tblock: !this.isFunctionBlock,\n\t\t\tparent: this.parent.findScope( false )\n\t\t});\n\n\t\tif ( this.parentIsFunction ) {\n\t\t\tthis.parent.params.forEach( node => {\n\t\t\t\tthis.scope.addDeclaration( node, 'param' );\n\t\t\t});\n\t\t}\n\t}\n\n\tinitialise ( transforms ) {\n\t\tthis.thisAlias = null;\n\t\tthis.argumentsAlias = null;\n\t\tthis.defaultParameters = [];\n\n\t\t// normally the scope gets created here, during initialisation,\n\t\t// but in some cases (e.g. `for` statements), we need to create\n\t\t// the scope early, as it pertains to both the init block and\n\t\t// the body of the statement\n\t\tif ( !this.scope ) this.createScope();\n\n\t\tthis.body.forEach( node => node.initialise( transforms ) );\n\t}\n\n\tfindLexicalBoundary () {\n\t\tif ( this.type === 'Program' ) return this;\n\t\tif ( /^Function/.test( this.parent.type ) ) return this;\n\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindScope ( functionScope ) {\n\t\tif ( functionScope && !this.isFunctionBlock ) return this.parent.findScope( functionScope );\n\t\treturn this.scope;\n\t}\n\n\tgetArgumentsAlias () {\n\t\tif ( !this.argumentsAlias ) {\n\t\t\tthis.argumentsAlias = this.scope.createIdentifier( 'arguments' );\n\t\t}\n\n\t\treturn this.argumentsAlias;\n\t}\n\n\tgetArgumentsArrayAlias () {\n\t\tif ( !this.argumentsArrayAlias ) {\n\t\t\tthis.argumentsArrayAlias = this.scope.createIdentifier( 'argsArray' );\n\t\t}\n\n\t\treturn this.argumentsArrayAlias;\n\t}\n\n\tgetThisAlias () {\n\t\tif ( !this.thisAlias ) {\n\t\t\tthis.thisAlias = this.scope.createIdentifier( 'this' );\n\t\t}\n\n\t\treturn this.thisAlias;\n\t}\n\n\tgetIndentation () {\n\t\tif ( this.indentation === undefined ) {\n\t\t\tconst source = this.program.magicString.original;\n\n\t\t\tconst useOuter = this.synthetic || !this.body.length;\n\t\t\tlet c = useOuter ? this.start : this.body[0].start;\n\n\t\t\twhile ( c && source[c] !== '\\n' ) c -= 1;\n\n\t\t\tthis.indentation = '';\n\n\t\t\twhile ( true ) {\n\t\t\t\tc += 1;\n\t\t\t\tconst char = source[c];\n\n\t\t\t\tif ( char !== ' ' && char !== '\\t' ) break;\n\n\t\t\t\tthis.indentation += char;\n\t\t\t}\n\n\t\t\tconst indentString = this.program.magicString.getIndentString();\n\n\t\t\t// account for dedented class constructors\n\t\t\tlet parent = this.parent;\n\t\t\twhile ( parent ) {\n\t\t\t\tif ( parent.kind === 'constructor' && !parent.parent.parent.superClass ) {\n\t\t\t\t\tthis.indentation = this.indentation.replace( indentString, '' );\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\tif ( useOuter ) this.indentation += indentString;\n\t\t}\n\n\t\treturn this.indentation;\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tconst start = this.parent.type === 'Root' || this.synthetic ? this.start : this.start + 1;\n\n\t\tconst indentation = this.getIndentation();\n\n\t\tlet introStatementGenerators = [];\n\n\t\tif ( this.argumentsAlias ) {\n\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\n\t\t\t\tconst assignment = `${prefix}var ${this.argumentsAlias} = arguments;${suffix}`;\n\t\t\t\tcode.insertLeft( start, assignment );\n\t\t\t});\n\t\t}\n\n\t\tif ( this.thisAlias ) {\n\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\n\t\t\t\tconst assignment = `${prefix}var ${this.thisAlias} = this;${suffix}`;\n\t\t\t\tcode.insertLeft( start, assignment );\n\t\t\t});\n\t\t}\n\n\t\tif ( this.argumentsArrayAlias ) {\n\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\n\t\t\t\tconst i = this.scope.createIdentifier( 'i' );\n\t\t\t\tconst assignment = `${prefix}var ${i} = arguments.length, ${this.argumentsArrayAlias} = Array(${i});\\n${indentation}while ( ${i}-- ) ${this.argumentsArrayAlias}[${i}] = arguments[${i}];${suffix}`;\n\t\t\t\tcode.insertLeft( start, assignment );\n\t\t\t});\n\t\t}\n\n\t\tif ( /Function/.test( this.parent.type ) ) {\n\t\t\tthis.transpileParameters( code, transforms, indentation, introStatementGenerators );\n\t\t}\n\n\t\tif ( transforms.letConst && this.isFunctionBlock ) {\n\t\t\tthis.transpileBlockScopedIdentifiers( code );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\n\t\tif ( this.synthetic ) {\n\t\t\tif ( this.parent.type === 'ArrowFunctionExpression' ) {\n\t\t\t\tconst expr = this.body[0];\n\n\t\t\t\tif ( introStatementGenerators.length ) {\n\t\t\t\t\tcode.insertLeft( this.start, `{` ).insertRight( this.end, `${this.parent.getIndentation()}}` );\n\n\t\t\t\t\tcode.insertRight( expr.start, `\\n${indentation}return ` );\n\t\t\t\t\tcode.insertLeft( expr.end, `;\\n` );\n\t\t\t\t} else if ( transforms.arrow ) {\n\t\t\t\t\tcode.insertRight( expr.start, `{ return ` );\n\t\t\t\t\tcode.insertLeft( expr.end, `; }` );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if ( introStatementGenerators.length ) {\n\t\t\t\tcode.insertLeft( this.start, `{` ).insertRight( this.end, `}` );\n\t\t\t}\n\t\t}\n\n\t\tlet prefix = `\\n${indentation}`;\n\t\tlet suffix = '';\n\t\tintroStatementGenerators.forEach( ( fn, i ) => {\n\t\t\tif ( i === introStatementGenerators.length - 1 ) suffix = ( this.parent.type === 'Root' ? `\\n` : `\\n` );\n\t\t\tfn( start, prefix, suffix );\n\t\t});\n\t}\n\n\ttranspileParameters ( code, transforms, indentation, introStatementGenerators ) {\n\t\tconst params = this.parent.params;\n\n\t\tparams.forEach( param => {\n\t\t\tif ( param.type === 'AssignmentPattern' && param.left.type === 'Identifier' ) {\n\t\t\t\tif ( transforms.defaultParameter ) {\n\t\t\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\n\t\t\t\t\t\tconst lhs = `${prefix}if ( ${param.left.name} === void 0 ) ${param.left.name}`;\n\n\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t.insertRight( param.left.end, `${lhs}` )\n\t\t\t\t\t\t\t.move( param.left.end, param.right.end, start )\n\t\t\t\t\t\t\t.insertLeft( param.right.end, `;${suffix}` );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if ( param.type === 'RestElement' ) {\n\t\t\t\tif ( transforms.spreadRest ) {\n\t\t\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\n\t\t\t\t\t\tconst penultimateParam = params[ params.length - 2 ];\n\n\t\t\t\t\t\tif ( penultimateParam ) {\n\t\t\t\t\t\t\tcode.remove( penultimateParam ? penultimateParam.end : param.start, param.end );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet start = param.start, end = param.end; // TODO https://gitlab.com/Rich-Harris/buble/issues/8\n\n\t\t\t\t\t\t\twhile ( /\\s/.test( code.original[ start - 1 ] ) ) start -= 1;\n\t\t\t\t\t\t\twhile ( /\\s/.test( code.original[ end ] ) ) end += 1;\n\n\t\t\t\t\t\t\tcode.remove( start, end );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst name = param.argument.name;\n\t\t\t\t\t\tconst len = this.scope.createIdentifier( 'len' );\n\t\t\t\t\t\tconst count = params.length - 1;\n\n\t\t\t\t\t\tif ( count ) {\n\t\t\t\t\t\t\tcode.insertLeft( start, `${prefix}var ${name} = [], ${len} = arguments.length - ${count};\\n${indentation}while ( ${len}-- > 0 ) ${name}[ ${len} ] = arguments[ ${len} + ${count} ];${suffix}` );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.insertLeft( start, `${prefix}var ${name} = [], ${len} = arguments.length;\\n${indentation}while ( ${len}-- ) ${name}[ ${len} ] = arguments[ ${len} ];${suffix}` );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if ( param.type !== 'Identifier' ) {\n\t\t\t\tif ( transforms.parameterDestructuring ) {\n\t\t\t\t\tconst ref = this.scope.createIdentifier( 'ref' );\n\t\t\t\t\tdestructure( code, this.scope, param, ref, introStatementGenerators );\n\t\t\t\t\tcode.insertLeft( param.start, ref );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttranspileBlockScopedIdentifiers ( code ) {\n\t\tObject.keys( this.scope.blockScopedDeclarations ).forEach( name => {\n\t\t\tconst declarations = this.scope.blockScopedDeclarations[ name ];\n\n\t\t\tfor ( let i = 0; i < declarations.length; i += 1 ) {\n\t\t\t\tconst declaration = declarations[i];\n\t\t\t\tlet cont = false; // TODO implement proper continue...\n\n\t\t\t\tif ( declaration.kind === 'for.let' ) {\n\t\t\t\t\t// special case\n\t\t\t\t\tconst forStatement = declaration.node.findNearest( 'ForStatement' );\n\n\t\t\t\t\tif ( forStatement.shouldRewriteAsFunction ) {\n\t\t\t\t\t\tconst outerAlias = this.scope.createIdentifier( name );\n\t\t\t\t\t\tconst innerAlias = forStatement.reassigned[ name ] ?\n\t\t\t\t\t\t\tthis.scope.createIdentifier( name ) :\n\t\t\t\t\t\t\tname;\n\n\t\t\t\t\t\tdeclaration.name = outerAlias;\n\t\t\t\t\t\tcode.overwrite( declaration.node.start, declaration.node.end, outerAlias, true );\n\n\t\t\t\t\t\tforStatement.aliases[ name ] = {\n\t\t\t\t\t\t\touter: outerAlias,\n\t\t\t\t\t\t\tinner: innerAlias\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfor ( const identifier of declaration.instances ) {\n\t\t\t\t\t\t\tconst alias = forStatement.body.contains( identifier ) ?\n\t\t\t\t\t\t\t\tinnerAlias :\n\t\t\t\t\t\t\t\touterAlias;\n\n\t\t\t\t\t\t\tif ( name !== alias ) {\n\t\t\t\t\t\t\t\tcode.overwrite( identifier.start, identifier.end, alias, true );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcont = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( !cont ) {\n\t\t\t\t\tconst alias = this.scope.createIdentifier( name );\n\n\t\t\t\t\tif ( name !== alias ) {\n\t\t\t\t\t\tdeclaration.name = alias;\n\t\t\t\t\t\tcode.overwrite( declaration.node.start, declaration.node.end, alias, true );\n\n\t\t\t\t\t\tfor ( const identifier of declaration.instances ) {\n\t\t\t\t\t\t\tidentifier.rewritten = true;\n\t\t\t\t\t\t\tcode.overwrite( identifier.start, identifier.end, alias, true );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import MagicString from 'magic-string';\nimport BlockStatement from './BlockStatement.js';\nimport wrap from './wrap.js';\n\nexport default function Program ( source, ast, transforms, options ) {\n\tthis.type = 'Root';\n\n\t// options\n\tthis.jsx = options.jsx || 'React.createElement';\n\n\tthis.source = source;\n\tthis.magicString = new MagicString( source );\n\n\tthis.ast = ast;\n\tthis.depth = 0;\n\n\twrap( this.body = ast, this );\n\tthis.body.__proto__ = BlockStatement.prototype;\n\n\tthis.templateElements = [];\n\tthis.body.initialise( transforms );\n\n\tthis.indentExclusions = {};\n\tfor ( const node of this.templateElements ) {\n\t\tfor ( let i = node.start; i < node.end; i += 1 ) {\n\t\t\tthis.indentExclusions[ node.start + i ] = true;\n\t\t}\n\t}\n\n\tthis.body.transpile( this.magicString, transforms );\n}\n\nProgram.prototype = {\n\texport ( options = {} ) {\n\t\treturn {\n\t\t\tcode: this.magicString.toString(),\n\t\t\tmap: this.magicString.generateMap({\n\t\t\t\tfile: options.file,\n\t\t\t\tsource: options.source,\n\t\t\t\tincludeContent: options.includeContent !== false\n\t\t\t})\n\t\t};\n\t},\n\n\tfindNearest () {\n\t\treturn null;\n\t},\n\n\tfindScope () {\n\t\treturn null;\n\t}\n};\n","export const matrix = {\n\tchrome: {\n\t\t    48: 0b1001111011111100111110101111101,\n\t\t    49: 0b1001111111111100111111111111111,\n\t\t    50: 0b1011111111111100111111111111111\n\t},\n\tfirefox: {\n\t\t    43: 0b1000111111101100000110111011101,\n\t\t    44: 0b1000111111101100000110111011101,\n\t\t    45: 0b1000111111101100000110111011101\n\t},\n\tsafari: {\n\t\t     8: 0b1000000000000000000000000000000,\n\t\t     9: 0b1001111001101100000011101011110\n\t},\n\tie: {\n\t\t     8: 0b0000000000000000000000000000000,\n\t\t     9: 0b1000000000000000000000000000000,\n\t\t    10: 0b1000000000000000000000000000000,\n\t\t    11: 0b1000000000000000111000001100000\n\t},\n\tedge: {\n\t\t    12: 0b1011110110111100011010001011101,\n\t\t    13: 0b1011111110111100011111001011111\n\t},\n\tnode: {\n\t\t'0.10': 0b1000000000101000000000001000000,\n\t\t'0.12': 0b1000001000101000000010001000100,\n\t\t     4: 0b1001111000111100111111001111111,\n\t\t     5: 0b1001111000111100111111001111111,\n\t\t     6: 0b1011111111111100111111111111111\n\t}\n};\n\nexport const features = [\n\t'arrow',\n\t'classes',\n\t'collections',\n\t'computedProperty',\n\t'conciseMethodProperty',\n\t'constLoop',\n\t'constRedef',\n\t'defaultParameter',\n\t'destructuring',\n\t'extendNatives',\n\t'forOf',\n\t'generator',\n\t'letConst',\n\t'letLoop',\n\t'letLoopScope',\n\t'moduleExport',\n\t'moduleImport',\n\t'numericLiteral',\n\t'objectProto',\n\t'objectSuper',\n\t'oldOctalLiteral',\n\t'parameterDestructuring',\n\t'spreadRest',\n\t'stickyRegExp',\n\t'symbol',\n\t'templateString',\n\t'unicodeEscape',\n\t'unicodeIdentifier',\n\t'unicodeRegExp',\n\n\t// ES2016\n\t'exponentiation',\n\n\t// additional transforms, not from\n\t// https://featuretests.io\n\t'reservedProperties'\n];\n","{\n  \"name\": \"buble\",\n  \"version\": \"0.10.6\",\n  \"description\": \"The blazing fast, batteries-included ES2015 compiler\",\n  \"main\": \"dist/buble.umd.js\",\n  \"jsnext:main\": \"dist/buble.es.js\",\n  \"files\": [\n    \"bin\",\n    \"src\",\n    \"dist\",\n    \"register.js\",\n    \"README.md\"\n  ],\n  \"scripts\": {\n    \"build\": \"npm run build:umd && npm run build:es && npm run build:browser\",\n    \"build:umd\": \"rollup -c -f umd -o dist/buble.umd.js\",\n    \"build:browser\": \"rollup -c --environment DEPS -f umd -o dist/buble.deps.js\",\n    \"build:es\": \"rollup -c -f es6 -o dist/buble.es.js\",\n    \"test\": \"mocha test/test.js --compilers js:buble/register\",\n    \"pretest\": \"npm run build:umd && npm run build:browser\",\n    \"prepublish\": \"npm test && npm run build:es\"\n  },\n  \"bin\": {\n    \"buble\": \"./bin/buble\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://gitlab.com/Rich-Harris/buble.git\"\n  },\n  \"keywords\": [\n    \"javascript\",\n    \"transpilation\",\n    \"compilation\",\n    \"esnext\",\n    \"es2015\",\n    \"es2017\",\n    \"es6\",\n    \"es7\"\n  ],\n  \"author\": \"Rich Harris\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://gitlab.com/Rich-Harris/buble/issues\"\n  },\n  \"homepage\": \"https://gitlab.com/Rich-Harris/buble#README\",\n  \"devDependencies\": {\n    \"buble\": \"0.8.2\",\n    \"eslint\": \"^2.10.1\",\n    \"glob\": \"^7.0.3\",\n    \"mocha\": \"^2.4.5\",\n    \"rimraf\": \"^2.5.2\",\n    \"rollup\": \"^0.26.3\",\n    \"rollup-plugin-buble\": \"^0.8.0\",\n    \"rollup-plugin-commonjs\": \"^2.2.1\",\n    \"rollup-plugin-json\": \"^2.0.0\",\n    \"rollup-plugin-node-resolve\": \"^1.5.0\",\n    \"source-map\": \"^0.5.6\",\n    \"source-map-support\": \"^0.4.0\"\n  },\n  \"dependencies\": {\n    \"acorn\": \"^3.1.0\",\n    \"acorn-jsx\": \"^3.0.1\",\n    \"acorn-object-spread\": \"^1.0.0\",\n    \"chalk\": \"^1.1.3\",\n    \"magic-string\": \"^0.14.0\",\n    \"minimist\": \"^1.2.0\"\n  }\n}\n","import acornJsx from 'acorn-jsx';\nimport acornObjectSpread from 'acorn-object-spread/inject';\nimport Program from './program/Program.js';\nimport { features, matrix } from './support.js';\nimport getSnippet from './utils/getSnippet.js';\n\nconst acorn = acornObjectSpread(acornJsx);\n\nconst dangerousTransforms = [\n\t'dangerousTaggedTemplateString',\n\t'dangerousForOf'\n];\n\nexport function target ( target ) {\n\tconst targets = Object.keys( target );\n\tlet bitmask = targets.length ?\n\t\t0b1111111111111111111111111111111 :\n\t\t0b1000000000000000000000000000000;\n\n\tObject.keys( target ).forEach( environment => {\n\t\tconst versions = matrix[ environment ];\n\t\tif ( !versions ) throw new Error( `Unknown environment '${environment}'. Please raise an issue at https://gitlab.com/Rich-Harris/buble/issues` );\n\n\t\tconst targetVersion = target[ environment ];\n\t\tif ( !( targetVersion in versions ) ) throw new Error( `Support data exists for the following versions of ${environment}: ${Object.keys( versions ).join( ', ')}. Please raise an issue at https://gitlab.com/Rich-Harris/buble/issues` );\n\t\tconst support = versions[ targetVersion ];\n\n\t\tbitmask &= support;\n\t});\n\n\tlet transforms = Object.create( null );\n\tfeatures.forEach( ( name, i ) => {\n\t\ttransforms[ name ] = !( bitmask & 1 << i );\n\t});\n\n\tdangerousTransforms.forEach( name => {\n\t\ttransforms[ name ] = false;\n\t});\n\n\treturn transforms;\n}\n\nexport function transform ( source, options = {} ) {\n\tlet ast;\n\n\ttry {\n\t\tast = acorn.parse( source, {\n\t\t\tecmaVersion: 7,\n\t\t\tpreserveParens: true,\n\t\t\tsourceType: 'module',\n\t\t\tplugins: {\n\t\t\t\tjsx: true,\n\t\t\t\tobjectSpread: true\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\terr.snippet = getSnippet( source, err.loc );\n\t\tthrow err;\n\t}\n\n\tlet transforms = target( options.target || {} );\n\tObject.keys( options.transforms || {} ).forEach( name => {\n\t\tif ( name === 'modules' ) {\n\t\t\tif ( !( 'moduleImport' in options.transforms ) ) transforms.moduleImport = options.transforms.modules;\n\t\t\tif ( !( 'moduleExport' in options.transforms ) ) transforms.moduleExport = options.transforms.modules;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !( name in transforms ) ) throw new Error( `Unknown transform '${name}'` );\n\t\ttransforms[ name ] = options.transforms[ name ];\n\t});\n\n\treturn new Program( source, ast, transforms, options ).export( options );\n}\n\nexport { version as VERSION } from '../package.json';\n"],"names":["this","require$$0","let","const","toJSON","element","super","fn","prop","replacement","c","start","alias","identifier","0b1001111011111100111110101111101","0b1001111111111100111111111111111","0b1011111111111100111111111111111","0b1000111111101100000110111011101","0b1000000000000000000000000000000","0b1001111001101100000011101011110","0b0000000000000000000000000000000","0b1000000000000000111000001100000","0b1011110110111100011010001011101","0b1011111110111100011111001011111","0b1000000000101000000000001000000","0b1000001000101000000010001000100","0b1001111000111100111111001111111","0b1111111111111111111111111111111"],"mappings":"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AE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;AAC/zC,EAAA,IAAI,qBAAqB,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAA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"}